(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[29],{

/***/ "./node_modules/@web3modal/ui/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@web3modal/ui/dist/index.js ***!
  \**************************************************/
/*! exports provided: W3mAccountButton, W3mConnectButton, W3mCoreButton, W3mModal, W3mNetworkSwitch, W3mQrCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W3mAccountButton\", function() { return Ot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W3mConnectButton\", function() { return mt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W3mCoreButton\", function() { return et; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W3mModal\", function() { return jt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W3mNetworkSwitch\", function() { return pt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W3mQrCode\", function() { return F; });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/@web3modal/ui/node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/@web3modal/ui/node_modules/lit/decorators.js\");\n/* harmony import */ var _web3modal_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3modal/core */ \"./node_modules/@web3modal/core/dist/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/@web3modal/ui/node_modules/lit/directives/class-map.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! motion */ \"./node_modules/motion/dist/main.es.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! qrcode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/browser.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(qrcode__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/@web3modal/ui/node_modules/lit/directives/if-defined.js\");\n\n\n\n\n\n\n\n\nvar Ke = Object.defineProperty,\n  ke = Object.getOwnPropertySymbols,\n  Ye = Object.prototype.hasOwnProperty,\n  Qe = Object.prototype.propertyIsEnumerable,\n  Oe = (t, a, o) => a in t ? Ke(t, a, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: o\n  }) : t[a] = o,\n  Lt = (t, a) => {\n    for (var o in a || (a = {})) Ye.call(a, o) && Oe(t, o, a[o]);\n    if (ke) for (var o of ke(a)) Qe.call(a, o) && Oe(t, o, a[o]);\n    return t;\n  };\nfunction Xe() {\n  var t;\n  const a = (t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state.themeMode) != null ? t : \"dark\",\n    o = {\n      light: {\n        foreground: {\n          1: \"rgb(20,20,20)\",\n          2: \"rgb(121,134,134)\",\n          3: \"rgb(158,169,169)\"\n        },\n        background: {\n          1: \"rgb(255,255,255)\",\n          2: \"rgb(241,243,243)\",\n          3: \"rgb(228,231,231)\"\n        },\n        overlay: \"rgba(0,0,0,0.1)\"\n      },\n      dark: {\n        foreground: {\n          1: \"rgb(228,231,231)\",\n          2: \"rgb(148,158,158)\",\n          3: \"rgb(110,119,119)\"\n        },\n        background: {\n          1: \"rgb(20,20,20)\",\n          2: \"rgb(39,42,42)\",\n          3: \"rgb(59,64,64)\"\n        },\n        overlay: \"rgba(255,255,255,0.1)\"\n      }\n    }[a];\n  return {\n    \"--w3m-color-fg-1\": o.foreground[1],\n    \"--w3m-color-fg-2\": o.foreground[2],\n    \"--w3m-color-fg-3\": o.foreground[3],\n    \"--w3m-color-bg-1\": o.background[1],\n    \"--w3m-color-bg-2\": o.background[2],\n    \"--w3m-color-bg-3\": o.background[3],\n    \"--w3m-color-overlay\": o.overlay\n  };\n}\nfunction Ie() {\n  return {\n    \"--w3m-accent-color\": \"#3396FF\",\n    \"--w3m-accent-fill-color\": \"#FFFFFF\",\n    \"--w3m-z-index\": \"89\",\n    \"--w3m-background-color\": \"#3396FF\",\n    \"--w3m-background-border-radius\": \"8px\",\n    \"--w3m-container-border-radius\": \"30px\",\n    \"--w3m-wallet-icon-border-radius\": \"15px\",\n    \"--w3m-wallet-icon-large-border-radius\": \"30px\",\n    \"--w3m-wallet-icon-small-border-radius\": \"7px\",\n    \"--w3m-input-border-radius\": \"28px\",\n    \"--w3m-button-border-radius\": \"10px\",\n    \"--w3m-notification-border-radius\": \"36px\",\n    \"--w3m-secondary-button-border-radius\": \"28px\",\n    \"--w3m-icon-button-border-radius\": \"50%\",\n    \"--w3m-button-hover-highlight-border-radius\": \"10px\",\n    \"--w3m-text-big-bold-size\": \"20px\",\n    \"--w3m-text-big-bold-weight\": \"600\",\n    \"--w3m-text-big-bold-line-height\": \"24px\",\n    \"--w3m-text-big-bold-letter-spacing\": \"-0.03em\",\n    \"--w3m-text-big-bold-text-transform\": \"none\",\n    \"--w3m-text-xsmall-bold-size\": \"10px\",\n    \"--w3m-text-xsmall-bold-weight\": \"700\",\n    \"--w3m-text-xsmall-bold-line-height\": \"12px\",\n    \"--w3m-text-xsmall-bold-letter-spacing\": \"0.02em\",\n    \"--w3m-text-xsmall-bold-text-transform\": \"uppercase\",\n    \"--w3m-text-xsmall-regular-size\": \"12px\",\n    \"--w3m-text-xsmall-regular-weight\": \"600\",\n    \"--w3m-text-xsmall-regular-line-height\": \"14px\",\n    \"--w3m-text-xsmall-regular-letter-spacing\": \"-0.03em\",\n    \"--w3m-text-xsmall-regular-text-transform\": \"none\",\n    \"--w3m-text-small-thin-size\": \"14px\",\n    \"--w3m-text-small-thin-weight\": \"500\",\n    \"--w3m-text-small-thin-line-height\": \"16px\",\n    \"--w3m-text-small-thin-letter-spacing\": \"-0.03em\",\n    \"--w3m-text-small-thin-text-transform\": \"none\",\n    \"--w3m-text-small-regular-size\": \"14px\",\n    \"--w3m-text-small-regular-weight\": \"600\",\n    \"--w3m-text-small-regular-line-height\": \"16px\",\n    \"--w3m-text-small-regular-letter-spacing\": \"-0.03em\",\n    \"--w3m-text-small-regular-text-transform\": \"none\",\n    \"--w3m-text-medium-regular-size\": \"16px\",\n    \"--w3m-text-medium-regular-weight\": \"600\",\n    \"--w3m-text-medium-regular-line-height\": \"20px\",\n    \"--w3m-text-medium-regular-letter-spacing\": \"-0.03em\",\n    \"--w3m-text-medium-regular-text-transform\": \"none\",\n    \"--w3m-font-family\": \"-apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', sans-serif\",\n    \"--w3m-font-feature-settings\": \"'tnum' on, 'lnum' on, 'case' on\",\n    \"--w3m-success-color\": \"rgb(38,181,98)\",\n    \"--w3m-error-color\": \"rgb(242, 90, 103)\",\n    \"--w3m-overlay-background-color\": \"rgba(0, 0, 0, 0.3)\",\n    \"--w3m-overlay-backdrop-filter\": \"none\"\n  };\n}\nfunction Je() {\n  const {\n    themeVariables: t\n  } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state;\n  return {\n    \"--w3m-background-image-url\": t != null && t[\"--w3m-background-image-url\"] ? `url(${t[\"--w3m-background-image-url\"]})` : \"none\"\n  };\n}\nconst p = {\n    getPreset(t) {\n      return Ie()[t];\n    },\n    setTheme() {\n      const t = document.querySelector(\":root\"),\n        {\n          themeVariables: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state;\n      if (t) {\n        const o = Lt(Lt(Lt(Lt({}, Xe()), Ie()), a), Je());\n        Object.entries(o).forEach(([r, e]) => t.style.setProperty(r, e));\n      }\n    },\n    globalCss: lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`*,::after,::before{margin:0;padding:0;box-sizing:border-box;font-style:normal;text-rendering:optimizeSpeed;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:transparent;backface-visibility:hidden}button{cursor:pointer;display:flex;justify-content:center;align-items:center;position:relative;border:none;background-color:transparent;transition:all .2s ease}@media (hover:hover) and (pointer:fine){button:active{transition:all .1s ease;transform:scale(.93)}}button::after{content:'';position:absolute;top:0;bottom:0;left:0;right:0;transition:background-color,.2s ease}button:disabled{cursor:not-allowed}button svg,button w3m-text{position:relative;z-index:1}input{border:none;outline:0;appearance:none}img{display:block}::selection{color:var(--w3m-accent-fill-color);background:var(--w3m-accent-color)}`\n  },\n  ta = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{display:flex;border-radius:var(--w3m-button-hover-highlight-border-radius);flex-direction:column;justify-content:center;padding:5px;width:100px}button:active{background-color:var(--w3m-color-overlay)}button:disabled{opacity:.7}@media(hover:hover){button:hover{background-color:var(--w3m-color-overlay)}}button>div{display:flex;justify-content:center;align-items:center;width:32px;height:32px;box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);background-color:var(--w3m-accent-color);border-radius:var(--w3m-icon-button-border-radius);margin-bottom:4px}button path{fill:var(--w3m-accent-fill-color)}`;\nvar ea = Object.defineProperty,\n  aa = Object.getOwnPropertyDescriptor,\n  bt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? aa(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ea(a, o, e), e;\n  };\nlet Y = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.icon = void 0, this.label = \"\", this.loading = !1, this.onClick = () => null;\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button data-testid=\"component-button-box\" @click=\"${this.onClick}\" .disabled=\"${Boolean(this.loading)}\"><div>${this.loading ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-spinner size=\"${20}\" color=\"fill\"></w3m-spinner>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${this.icon}`}</div><w3m-text variant=\"xsmall-regular\" color=\"accent\">${this.label}</w3m-text></button>`;\n  }\n};\nY.styles = [p.globalCss, ta], bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Y.prototype, \"icon\", 2), bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Y.prototype, \"label\", 2), bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Y.prototype, \"loading\", 2), bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Y.prototype, \"onClick\", 2), Y = bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-box-button\")], Y);\nconst oa = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{border-radius:var(--w3m-secondary-button-border-radius);height:28px;padding:0 10px;background-color:var(--w3m-accent-color)}button path{fill:var(--w3m-accent-fill-color)}button::after{border-radius:inherit;border:1px solid var(--w3m-color-overlay)}button:disabled::after{background-color:transparent}.w3m-icon-left svg{margin-right:5px}.w3m-icon-right svg{margin-left:5px}button:active::after{background-color:var(--w3m-color-overlay)}.w3m-ghost,.w3m-ghost:active::after,.w3m-outline{background-color:transparent}.w3m-ghost:active{opacity:.5}@media(hover:hover){button:hover::after{background-color:var(--w3m-color-overlay)}.w3m-ghost:hover::after{background-color:transparent}.w3m-ghost:hover{opacity:.5}}button:disabled{background-color:var(--w3m-color-bg-3);pointer-events:none}.w3m-ghost::after{border-color:transparent}.w3m-ghost path{fill:var(--w3m-color-fg-2)}.w3m-outline path{fill:var(--w3m-accent-color)}.w3m-outline:disabled{background-color:transparent;opacity:.5}`;\nvar ra = Object.defineProperty,\n  ia = Object.getOwnPropertyDescriptor,\n  st = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ia(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ra(a, o, e), e;\n  };\nlet G = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.disabled = !1, this.iconLeft = void 0, this.iconRight = void 0, this.onClick = () => null, this.variant = \"default\";\n  }\n  render() {\n    const t = {\n      \"w3m-icon-left\": this.iconLeft !== void 0,\n      \"w3m-icon-right\": this.iconRight !== void 0,\n      \"w3m-ghost\": this.variant === \"ghost\",\n      \"w3m-outline\": this.variant === \"outline\"\n    };\n    let a = \"inverse\";\n    return this.variant === \"ghost\" && (a = \"secondary\"), this.variant === \"outline\" && (a = \"accent\"), lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\" data-testid=\"component-button\" ?disabled=\"${this.disabled}\" @click=\"${this.onClick}\">${this.iconLeft}<w3m-text variant=\"small-regular\" color=\"${a}\"><slot></slot></w3m-text>${this.iconRight}</button>`;\n  }\n};\nG.styles = [p.globalCss, oa], st([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], G.prototype, \"disabled\", 2), st([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], G.prototype, \"iconLeft\", 2), st([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], G.prototype, \"iconRight\", 2), st([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], G.prototype, \"onClick\", 2), st([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], G.prototype, \"variant\", 2), G = st([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-button\")], G);\nconst la = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{display:inline-block}button{padding:0 15px 1px;height:40px;border-radius:var(--w3m-button-border-radius);color:var(--w3m-accent-fill-color);background-color:var(--w3m-accent-color)}button::after{content:'';top:0;bottom:0;left:0;right:0;position:absolute;background-color:transparent;border-radius:inherit;transition:background-color .2s ease;border:1px solid var(--w3m-color-overlay)}button:active::after{background-color:var(--w3m-color-overlay)}button:disabled{padding-bottom:0;background-color:var(--w3m-color-bg-3);color:var(--w3m-color-fg-3)}.w3m-secondary{color:var(--w3m-accent-color);background-color:transparent}.w3m-secondary::after{display:none}@media(hover:hover){button:hover::after{background-color:var(--w3m-color-overlay)}}`;\nvar na = Object.defineProperty,\n  sa = Object.getOwnPropertyDescriptor,\n  Qt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? sa(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && na(a, o, e), e;\n  };\nlet ft = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.disabled = !1, this.variant = \"primary\";\n  }\n  render() {\n    const t = {\n      \"w3m-secondary\": this.variant === \"secondary\"\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button ?disabled=\"${this.disabled}\" data-testid=\"component-big-button\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\"><slot></slot></button>`;\n  }\n};\nft.styles = [p.globalCss, la], Qt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], ft.prototype, \"disabled\", 2), Qt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], ft.prototype, \"variant\", 2), ft = Qt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-button-big\")], ft);\nconst ca = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{background-color:var(--w3m-color-bg-2);border-top:1px solid var(--w3m-color-bg-3)}div{padding:10px 20px;display:inherit;flex-direction:inherit;align-items:inherit;width:inherit;justify-content:inherit}`;\nvar da = Object.defineProperty,\n  ma = Object.getOwnPropertyDescriptor,\n  ha = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ma(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && da(a, o, e), e;\n  };\nlet Xt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><slot></slot></div>`;\n  }\n};\nXt.styles = [p.globalCss, ca], Xt = ha([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-info-footer\")], Xt);\nconst w = {\n    CROSS_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\"><path d=\"M9.94 11A.75.75 0 1 0 11 9.94L7.414 6.353a.5.5 0 0 1 0-.708L11 2.061A.75.75 0 1 0 9.94 1L6.353 4.586a.5.5 0 0 1-.708 0L2.061 1A.75.75 0 0 0 1 2.06l3.586 3.586a.5.5 0 0 1 0 .708L1 9.939A.75.75 0 1 0 2.06 11l3.586-3.586a.5.5 0 0 1 .708 0L9.939 11Z\" fill=\"#fff\"/></svg>`,\n    WALLET_CONNECT_LOGO: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"178\" height=\"29\" viewBox=\"0 0 178 29\" id=\"w3m-wc-logo\"><path d=\"M10.683 7.926c5.284-5.17 13.85-5.17 19.134 0l.636.623a.652.652 0 0 1 0 .936l-2.176 2.129a.343.343 0 0 1-.478 0l-.875-.857c-3.686-3.607-9.662-3.607-13.348 0l-.937.918a.343.343 0 0 1-.479 0l-2.175-2.13a.652.652 0 0 1 0-.936l.698-.683Zm23.633 4.403 1.935 1.895a.652.652 0 0 1 0 .936l-8.73 8.543a.687.687 0 0 1-.956 0L20.37 17.64a.172.172 0 0 0-.239 0l-6.195 6.063a.687.687 0 0 1-.957 0l-8.73-8.543a.652.652 0 0 1 0-.936l1.936-1.895a.687.687 0 0 1 .957 0l6.196 6.064a.172.172 0 0 0 .239 0l6.195-6.064a.687.687 0 0 1 .957 0l6.196 6.064a.172.172 0 0 0 .24 0l6.195-6.064a.687.687 0 0 1 .956 0ZM48.093 20.948l2.338-9.355c.139-.515.258-1.07.416-1.942.12.872.258 1.427.357 1.942l2.022 9.355h4.181l3.528-13.874h-3.21l-1.943 8.523a24.825 24.825 0 0 0-.456 2.457c-.158-.931-.317-1.625-.495-2.438l-1.883-8.542h-4.201l-2.042 8.542a41.204 41.204 0 0 0-.475 2.438 41.208 41.208 0 0 0-.476-2.438l-1.903-8.542h-3.349l3.508 13.874h4.083ZM63.33 21.304c1.585 0 2.596-.654 3.11-1.605-.059.297-.078.595-.078.892v.357h2.655V15.22c0-2.735-1.248-4.32-4.3-4.32-2.636 0-4.36 1.466-4.52 3.487h2.914c.1-.891.734-1.426 1.705-1.426.911 0 1.407.515 1.407 1.11 0 .435-.258.693-1.03.792l-1.388.159c-2.061.257-3.825 1.01-3.825 3.19 0 1.982 1.645 3.092 3.35 3.092Zm.891-2.041c-.773 0-1.348-.436-1.348-1.19 0-.733.655-1.09 1.645-1.268l.674-.119c.575-.118.892-.218 1.09-.396v.912c0 1.228-.892 2.06-2.06 2.06ZM70.398 7.074v13.874h2.874V7.074h-2.874ZM74.934 7.074v13.874h2.874V7.074h-2.874ZM84.08 21.304c2.735 0 4.5-1.546 4.697-3.567h-2.893c-.139.892-.892 1.387-1.804 1.387-1.228 0-2.12-.99-2.14-2.358h6.897v-.555c0-3.21-1.764-5.312-4.816-5.312-2.933 0-4.994 2.062-4.994 5.173 0 3.37 2.12 5.232 5.053 5.232Zm-2.16-6.421c.119-1.11.932-1.922 2.081-1.922 1.11 0 1.883.772 1.903 1.922H81.92ZM94.92 21.146c.633 0 1.248-.1 1.525-.179v-2.18c-.218.04-.475.06-.693.06-1.05 0-1.427-.595-1.427-1.566v-3.805h2.338v-2.24h-2.338V7.788H91.47v3.448H89.37v2.24h2.1v4.201c0 2.3 1.15 3.469 3.45 3.469ZM104.62 21.304c3.924 0 6.302-2.299 6.599-5.608h-3.111c-.238 1.803-1.506 3.032-3.369 3.032-2.2 0-3.746-1.784-3.746-4.796 0-2.953 1.605-4.638 3.805-4.638 1.883 0 2.953 1.15 3.171 2.834h3.191c-.317-3.448-2.854-5.41-6.342-5.41-3.984 0-7.036 2.695-7.036 7.214 0 4.677 2.676 7.372 6.838 7.372ZM117.449 21.304c2.993 0 5.114-1.882 5.114-5.172 0-3.23-2.121-5.233-5.114-5.233-2.972 0-5.093 2.002-5.093 5.233 0 3.29 2.101 5.172 5.093 5.172Zm0-2.22c-1.327 0-2.18-1.09-2.18-2.952 0-1.903.892-2.973 2.18-2.973 1.308 0 2.2 1.07 2.2 2.973 0 1.862-.872 2.953-2.2 2.953ZM126.569 20.948v-5.689c0-1.208.753-2.1 1.823-2.1 1.011 0 1.606.773 1.606 2.06v5.729h2.873v-6.144c0-2.339-1.229-3.905-3.428-3.905-1.526 0-2.458.734-2.953 1.606a5.31 5.31 0 0 0 .079-.892v-.377h-2.874v9.712h2.874ZM137.464 20.948v-5.689c0-1.208.753-2.1 1.823-2.1 1.011 0 1.606.773 1.606 2.06v5.729h2.873v-6.144c0-2.339-1.228-3.905-3.428-3.905-1.526 0-2.458.734-2.953 1.606a5.31 5.31 0 0 0 .079-.892v-.377h-2.874v9.712h2.874ZM149.949 21.304c2.735 0 4.499-1.546 4.697-3.567h-2.893c-.139.892-.892 1.387-1.804 1.387-1.228 0-2.12-.99-2.14-2.358h6.897v-.555c0-3.21-1.764-5.312-4.816-5.312-2.933 0-4.994 2.062-4.994 5.173 0 3.37 2.12 5.232 5.053 5.232Zm-2.16-6.421c.119-1.11.932-1.922 2.081-1.922 1.11 0 1.883.772 1.903 1.922h-3.984ZM160.876 21.304c3.013 0 4.658-1.645 4.975-4.201h-2.874c-.099 1.07-.713 1.982-2.001 1.982-1.309 0-2.2-1.21-2.2-2.993 0-1.942 1.03-2.933 2.259-2.933 1.209 0 1.803.872 1.883 1.882h2.873c-.218-2.358-1.823-4.142-4.776-4.142-2.874 0-5.153 1.903-5.153 5.193 0 3.25 1.923 5.212 5.014 5.212ZM172.067 21.146c.634 0 1.248-.1 1.526-.179v-2.18c-.218.04-.476.06-.694.06-1.05 0-1.427-.595-1.427-1.566v-3.805h2.339v-2.24h-2.339V7.788h-2.854v3.448h-2.1v2.24h2.1v4.201c0 2.3 1.15 3.469 3.449 3.469Z\" fill=\"#fff\"/></svg>`,\n    WALLET_CONNECT_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"28\" height=\"20\" viewBox=\"0 0 28 20\"><g clip-path=\"url(#a)\"><path d=\"M7.386 6.482c3.653-3.576 9.575-3.576 13.228 0l.44.43a.451.451 0 0 1 0 .648L19.55 9.033a.237.237 0 0 1-.33 0l-.606-.592c-2.548-2.496-6.68-2.496-9.228 0l-.648.634a.237.237 0 0 1-.33 0L6.902 7.602a.451.451 0 0 1 0-.647l.483-.473Zm16.338 3.046 1.339 1.31a.451.451 0 0 1 0 .648l-6.035 5.909a.475.475 0 0 1-.662 0L14.083 13.2a.119.119 0 0 0-.166 0l-4.283 4.194a.475.475 0 0 1-.662 0l-6.035-5.91a.451.451 0 0 1 0-.647l1.338-1.31a.475.475 0 0 1 .662 0l4.283 4.194c.046.044.12.044.166 0l4.283-4.194a.475.475 0 0 1 .662 0l4.283 4.194c.046.044.12.044.166 0l4.283-4.194a.475.475 0 0 1 .662 0Z\" fill=\"#000000\"/></g><defs><clipPath id=\"a\"><path fill=\"#ffffff\" d=\"M0 0h28v20H0z\"/></clipPath></defs></svg>`,\n    WALLET_CONNECT_ICON_COLORED: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"96\" height=\"96\" fill=\"none\"><path fill=\"#fff\" d=\"M25.322 33.597c12.525-12.263 32.83-12.263 45.355 0l1.507 1.476a1.547 1.547 0 0 1 0 2.22l-5.156 5.048a.814.814 0 0 1-1.134 0l-2.074-2.03c-8.737-8.555-22.903-8.555-31.64 0l-2.222 2.175a.814.814 0 0 1-1.134 0l-5.156-5.049a1.547 1.547 0 0 1 0-2.22l1.654-1.62Zm56.019 10.44 4.589 4.494a1.547 1.547 0 0 1 0 2.22l-20.693 20.26a1.628 1.628 0 0 1-2.267 0L48.283 56.632a.407.407 0 0 0-.567 0L33.03 71.012a1.628 1.628 0 0 1-2.268 0L10.07 50.75a1.547 1.547 0 0 1 0-2.22l4.59-4.494a1.628 1.628 0 0 1 2.267 0l14.687 14.38c.156.153.41.153.567 0l14.685-14.38a1.628 1.628 0 0 1 2.268 0l14.687 14.38c.156.153.41.153.567 0l14.686-14.38a1.628 1.628 0 0 1 2.268 0Z\"/><path stroke=\"#000\" d=\"M25.672 33.954c12.33-12.072 32.325-12.072 44.655 0l1.508 1.476a1.047 1.047 0 0 1 0 1.506l-5.157 5.048a.314.314 0 0 1-.434 0l-2.074-2.03c-8.932-8.746-23.409-8.746-32.34 0l-2.222 2.174a.314.314 0 0 1-.434 0l-5.157-5.048a1.047 1.047 0 0 1 0-1.506l1.655-1.62Zm55.319 10.44 4.59 4.494a1.047 1.047 0 0 1 0 1.506l-20.694 20.26a1.128 1.128 0 0 1-1.568 0l-14.686-14.38a.907.907 0 0 0-1.267 0L32.68 70.655a1.128 1.128 0 0 1-1.568 0L10.42 50.394a1.047 1.047 0 0 1 0-1.506l4.59-4.493a1.128 1.128 0 0 1 1.567 0l14.687 14.379a.907.907 0 0 0 1.266 0l-.35-.357.35.357 14.686-14.38a1.128 1.128 0 0 1 1.568 0l14.687 14.38a.907.907 0 0 0 1.267 0l14.686-14.38a1.128 1.128 0 0 1 1.568 0Z\"/></svg>`,\n    BACK_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"10\" height=\"18\" viewBox=\"0 0 10 18\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.735.179a.75.75 0 0 1 .087 1.057L2.92 8.192a1.25 1.25 0 0 0 0 1.617l5.902 6.956a.75.75 0 1 1-1.144.97L1.776 10.78a2.75 2.75 0 0 1 0-3.559L7.678.265A.75.75 0 0 1 8.735.18Z\" fill=\"#fff\"/></svg>`,\n    COPY_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"24\" height=\"24\" fill=\"none\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M7.01 7.01c.03-1.545.138-2.5.535-3.28A5 5 0 0 1 9.73 1.545C10.8 1 12.2 1 15 1c2.8 0 4.2 0 5.27.545a5 5 0 0 1 2.185 2.185C23 4.8 23 6.2 23 9c0 2.8 0 4.2-.545 5.27a5 5 0 0 1-2.185 2.185c-.78.397-1.735.505-3.28.534l-.001.01c-.03 1.54-.138 2.493-.534 3.27a5 5 0 0 1-2.185 2.186C13.2 23 11.8 23 9 23c-2.8 0-4.2 0-5.27-.545a5 5 0 0 1-2.185-2.185C1 19.2 1 17.8 1 15c0-2.8 0-4.2.545-5.27A5 5 0 0 1 3.73 7.545C4.508 7.149 5.46 7.04 7 7.01h.01ZM15 15.5c-1.425 0-2.403-.001-3.162-.063-.74-.06-1.139-.172-1.427-.319a3.5 3.5 0 0 1-1.53-1.529c-.146-.288-.257-.686-.318-1.427C8.501 11.403 8.5 10.425 8.5 9c0-1.425.001-2.403.063-3.162.06-.74.172-1.139.318-1.427a3.5 3.5 0 0 1 1.53-1.53c.288-.146.686-.257 1.427-.318.759-.062 1.737-.063 3.162-.063 1.425 0 2.403.001 3.162.063.74.06 1.139.172 1.427.318a3.5 3.5 0 0 1 1.53 1.53c.146.288.257.686.318 1.427.062.759.063 1.737.063 3.162 0 1.425-.001 2.403-.063 3.162-.06.74-.172 1.139-.319 1.427a3.5 3.5 0 0 1-1.529 1.53c-.288.146-.686.257-1.427.318-.759.062-1.737.063-3.162.063ZM7 8.511c-.444.009-.825.025-1.162.052-.74.06-1.139.172-1.427.318a3.5 3.5 0 0 0-1.53 1.53c-.146.288-.257.686-.318 1.427-.062.759-.063 1.737-.063 3.162 0 1.425.001 2.403.063 3.162.06.74.172 1.139.318 1.427a3.5 3.5 0 0 0 1.53 1.53c.288.146.686.257 1.427.318.759.062 1.737.063 3.162.063 1.425 0 2.403-.001 3.162-.063.74-.06 1.139-.172 1.427-.319a3.5 3.5 0 0 0 1.53-1.53c.146-.287.257-.685.318-1.426.027-.337.043-.718.052-1.162H15c-2.8 0-4.2 0-5.27-.545a5 5 0 0 1-2.185-2.185C7 13.2 7 11.8 7 9v-.489Z\" clip-rule=\"evenodd\"/></svg>`,\n    RETRY_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\"><path d=\"M6.464 2.03A.75.75 0 0 0 5.403.97L2.08 4.293a1 1 0 0 0 0 1.414L5.403 9.03a.75.75 0 0 0 1.06-1.06L4.672 6.177a.25.25 0 0 1 .177-.427h2.085a4 4 0 1 1-3.93 4.746c-.077-.407-.405-.746-.82-.746-.414 0-.755.338-.7.748a5.501 5.501 0 1 0 5.45-6.248H4.848a.25.25 0 0 1-.177-.427L6.464 2.03Z\" fill=\"#fff\"/></svg>`,\n    DESKTOP_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 5.98c0-1.85 0-2.775.394-3.466a3 3 0 0 1 1.12-1.12C2.204 1 3.13 1 4.98 1h6.04c1.85 0 2.775 0 3.466.394a3 3 0 0 1 1.12 1.12C16 3.204 16 4.13 16 5.98v1.04c0 1.85 0 2.775-.394 3.466a3 3 0 0 1-1.12 1.12C13.796 12 12.87 12 11.02 12H4.98c-1.85 0-2.775 0-3.466-.394a3 3 0 0 1-1.12-1.12C0 9.796 0 8.87 0 7.02V5.98ZM4.98 2.5h6.04c.953 0 1.568.001 2.034.043.446.04.608.108.69.154a1.5 1.5 0 0 1 .559.56c.046.08.114.243.154.69.042.465.043 1.08.043 2.033v1.04c0 .952-.001 1.568-.043 2.034-.04.446-.108.608-.154.69a1.499 1.499 0 0 1-.56.559c-.08.046-.243.114-.69.154-.466.042-1.08.043-2.033.043H4.98c-.952 0-1.568-.001-2.034-.043-.446-.04-.608-.108-.69-.154a1.5 1.5 0 0 1-.559-.56c-.046-.08-.114-.243-.154-.69-.042-.465-.043-1.08-.043-2.033V5.98c0-.952.001-1.568.043-2.034.04-.446.108-.608.154-.69a1.5 1.5 0 0 1 .56-.559c.08-.046.243-.114.69-.154.465-.042 1.08-.043 2.033-.043Z\" fill=\"#fff\"/><path d=\"M4 14.25a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Z\" fill=\"#fff\"/></svg>`,\n    MOBILE_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path d=\"M6.75 5a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 4.98c0-1.85 0-2.775.394-3.466a3 3 0 0 1 1.12-1.12C5.204 0 6.136 0 8 0s2.795 0 3.486.394a3 3 0 0 1 1.12 1.12C13 2.204 13 3.13 13 4.98v6.04c0 1.85 0 2.775-.394 3.466a3 3 0 0 1-1.12 1.12C10.796 16 9.864 16 8 16s-2.795 0-3.486-.394a3 3 0 0 1-1.12-1.12C3 13.796 3 12.87 3 11.02V4.98Zm8.5 0v6.04c0 .953-.001 1.568-.043 2.034-.04.446-.108.608-.154.69a1.499 1.499 0 0 1-.56.559c-.08.045-.242.113-.693.154-.47.042-1.091.043-2.05.043-.959 0-1.58-.001-2.05-.043-.45-.04-.613-.109-.693-.154a1.5 1.5 0 0 1-.56-.56c-.046-.08-.114-.243-.154-.69-.042-.466-.043-1.08-.043-2.033V4.98c0-.952.001-1.568.043-2.034.04-.446.108-.608.154-.69a1.5 1.5 0 0 1 .56-.559c.08-.045.243-.113.693-.154C6.42 1.501 7.041 1.5 8 1.5c.959 0 1.58.001 2.05.043.45.04.613.109.693.154a1.5 1.5 0 0 1 .56.56c.046.08.114.243.154.69.042.465.043 1.08.043 2.033Z\" fill=\"#fff\"/></svg>`,\n    ARROW_DOWN_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"><path d=\"M2.28 7.47a.75.75 0 0 0-1.06 1.06l5.25 5.25a.75.75 0 0 0 1.06 0l5.25-5.25a.75.75 0 0 0-1.06-1.06l-3.544 3.543a.25.25 0 0 1-.426-.177V.75a.75.75 0 0 0-1.5 0v10.086a.25.25 0 0 1-.427.176L2.28 7.47Z\" fill=\"#fff\"/></svg>`,\n    ARROW_UP_RIGHT_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"15\" height=\"14\" fill=\"none\"><path d=\"M4.5 1.75A.75.75 0 0 1 5.25 1H12a1.5 1.5 0 0 1 1.5 1.5v6.75a.75.75 0 0 1-1.5 0V4.164a.25.25 0 0 0-.427-.176L4.061 11.5A.75.75 0 0 1 3 10.44l7.513-7.513a.25.25 0 0 0-.177-.427H5.25a.75.75 0 0 1-.75-.75Z\" fill=\"#fff\"/></svg>`,\n    ARROW_RIGHT_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"6\" height=\"14\" viewBox=\"0 0 6 14\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.181 1.099a.75.75 0 0 1 1.024.279l2.433 4.258a2.75 2.75 0 0 1 0 2.729l-2.433 4.257a.75.75 0 1 1-1.303-.744L4.335 7.62a1.25 1.25 0 0 0 0-1.24L1.902 2.122a.75.75 0 0 1 .28-1.023Z\" fill=\"#fff\"/></svg>`,\n    QRCODE_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"><path d=\"M23.748 9a.748.748 0 0 0 .748-.752c-.018-2.596-.128-4.07-.784-5.22a6 6 0 0 0-2.24-2.24c-1.15-.656-2.624-.766-5.22-.784a.748.748 0 0 0-.752.748c0 .414.335.749.748.752 1.015.007 1.82.028 2.494.088.995.09 1.561.256 1.988.5.7.398 1.28.978 1.679 1.678.243.427.41.993.498 1.988.061.675.082 1.479.09 2.493a.753.753 0 0 0 .75.749ZM3.527.788C4.677.132 6.152.022 8.747.004A.748.748 0 0 1 9.5.752a.753.753 0 0 1-.749.752c-1.014.007-1.818.028-2.493.088-.995.09-1.561.256-1.988.5-.7.398-1.28.978-1.679 1.678-.243.427-.41.993-.499 1.988-.06.675-.081 1.479-.088 2.493A.753.753 0 0 1 1.252 9a.748.748 0 0 1-.748-.752c.018-2.596.128-4.07.784-5.22a6 6 0 0 1 2.24-2.24ZM1.252 15a.748.748 0 0 0-.748.752c.018 2.596.128 4.07.784 5.22a6 6 0 0 0 2.24 2.24c1.15.656 2.624.766 5.22.784a.748.748 0 0 0 .752-.748.753.753 0 0 0-.749-.752c-1.014-.007-1.818-.028-2.493-.089-.995-.089-1.561-.255-1.988-.498a4.5 4.5 0 0 1-1.679-1.68c-.243-.426-.41-.992-.499-1.987-.06-.675-.081-1.479-.088-2.493A.753.753 0 0 0 1.252 15ZM22.996 15.749a.753.753 0 0 1 .752-.749c.415 0 .751.338.748.752-.018 2.596-.128 4.07-.784 5.22a6 6 0 0 1-2.24 2.24c-1.15.656-2.624.766-5.22.784a.748.748 0 0 1-.752-.748c0-.414.335-.749.748-.752 1.015-.007 1.82-.028 2.494-.089.995-.089 1.561-.255 1.988-.498a4.5 4.5 0 0 0 1.679-1.68c.243-.426.41-.992.498-1.987.061-.675.082-1.479.09-2.493Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 4a2.5 2.5 0 0 0-2.5 2.5v2A2.5 2.5 0 0 0 7 11h2a2.5 2.5 0 0 0 2.5-2.5v-2A2.5 2.5 0 0 0 9 4H7Zm2 1.5H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1ZM13.5 6.5A2.5 2.5 0 0 1 16 4h2a2.5 2.5 0 0 1 2.5 2.5v2A2.5 2.5 0 0 1 18 11h-2a2.5 2.5 0 0 1-2.5-2.5v-2Zm2.5-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1ZM7 13a2.5 2.5 0 0 0-2.5 2.5v2A2.5 2.5 0 0 0 7 20h2a2.5 2.5 0 0 0 2.5-2.5v-2A2.5 2.5 0 0 0 9 13H7Zm2 1.5H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Z\" fill=\"#fff\"/><path d=\"M13.5 15.5c0-.465 0-.697.038-.89a2 2 0 0 1 1.572-1.572C15.303 13 15.535 13 16 13v2.5h-2.5ZM18 13c.465 0 .697 0 .89.038a2 2 0 0 1 1.572 1.572c.038.193.038.425.038.89H18V13ZM18 17.5h2.5c0 .465 0 .697-.038.89a2 2 0 0 1-1.572 1.572C18.697 20 18.465 20 18 20v-2.5ZM13.5 17.5H16V20c-.465 0-.697 0-.89-.038a2 2 0 0 1-1.572-1.572c-.038-.193-.038-.425-.038-.89Z\" fill=\"#fff\"/></svg>`,\n    SCAN_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" fill=\"none\"><path fill=\"#fff\" d=\"M10 15.216c0 .422.347.763.768.74 1.202-.064 2.025-.222 2.71-.613a5.001 5.001 0 0 0 1.865-1.866c.39-.684.549-1.507.613-2.709a.735.735 0 0 0-.74-.768.768.768 0 0 0-.76.732c-.009.157-.02.306-.032.447-.073.812-.206 1.244-.384 1.555-.31.545-.761.996-1.306 1.306-.311.178-.743.311-1.555.384-.141.013-.29.023-.447.032a.768.768 0 0 0-.732.76ZM10 .784c0 .407.325.737.732.76.157.009.306.02.447.032.812.073 1.244.206 1.555.384a3.5 3.5 0 0 1 1.306 1.306c.178.311.311.743.384 1.555.013.142.023.29.032.447a.768.768 0 0 0 .76.732.734.734 0 0 0 .74-.768c-.064-1.202-.222-2.025-.613-2.71A5 5 0 0 0 13.477.658c-.684-.39-1.507-.549-2.709-.613a.735.735 0 0 0-.768.74ZM5.232.044A.735.735 0 0 1 6 .784a.768.768 0 0 1-.732.76c-.157.009-.305.02-.447.032-.812.073-1.244.206-1.555.384A3.5 3.5 0 0 0 1.96 3.266c-.178.311-.311.743-.384 1.555-.013.142-.023.29-.032.447A.768.768 0 0 1 .784 6a.735.735 0 0 1-.74-.768c.064-1.202.222-2.025.613-2.71A5 5 0 0 1 2.523.658C3.207.267 4.03.108 5.233.044ZM5.268 14.456a.768.768 0 0 1 .732.76.734.734 0 0 1-.768.74c-1.202-.064-2.025-.222-2.71-.613a5 5 0 0 1-1.865-1.866c-.39-.684-.549-1.507-.613-2.709A.735.735 0 0 1 .784 10c.407 0 .737.325.76.732.009.157.02.306.032.447.073.812.206 1.244.384 1.555a3.5 3.5 0 0 0 1.306 1.306c.311.178.743.311 1.555.384.142.013.29.023.447.032Z\"/></svg>`,\n    CHECKMARK_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.155.132a.75.75 0 0 1 .232 1.035L5.821 11.535a1 1 0 0 1-1.626.09L.665 7.21a.75.75 0 1 1 1.17-.937L4.71 9.867a.25.25 0 0 0 .406-.023L11.12.364a.75.75 0 0 1 1.035-.232Z\" fill=\"#fff\"/></svg>`,\n    HELP_ETH_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#j)\"><rect width=\"60\" height=\"60\" rx=\"30\" fill=\"#987DE8\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"m15.48 28.367 11.966-19.3c1.174-1.892 3.927-1.892 5.1 0l11.97 19.306a6 6 0 0 1 .9 3.142v.028a6 6 0 0 1-1.154 3.56L33.227 50.208c-1.599 2.188-4.864 2.188-6.461 0L15.733 35.095a6 6 0 0 1-1.154-3.538v-.029a6 6 0 0 1 .9-3.161Z\" fill=\"#fff\"/><path d=\"M30.84 10.112a.992.992 0 0 0-.844-.464V24.5l12.598 5.53c.081-.466-.001-.963-.27-1.398L30.84 10.112Z\" fill=\"#643CDD\"/><path d=\"M29.996 9.648a.991.991 0 0 0-.845.465l-11.489 18.53a1.991 1.991 0 0 0-.264 1.387l12.598-5.53V9.648Z\" fill=\"#BDADEB\"/><path d=\"M29.996 50.544a.994.994 0 0 0 .808-.41l11.235-15.38c.307-.434-.193-.988-.658-.72L31.49 39.71a2.998 2.998 0 0 1-1.494.398v10.437Z\" fill=\"#643CDD\"/><path d=\"M17.966 34.762 29.19 50.134c.2.274.503.41.807.41V40.108a2.998 2.998 0 0 1-1.493-.398l-9.884-5.676c-.468-.27-.971.292-.653.728Z\" fill=\"#BDADEB\"/><path d=\"M42.594 30.03 29.996 24.5v13.138a3 3 0 0 0 1.495-.399l10.149-5.83c.525-.31.856-.823.954-1.38Z\" fill=\"#401AB3\"/><path d=\"M29.996 37.638V24.462l-12.598 5.566c.098.564.437 1.083.974 1.392l10.13 5.82c.462.265.978.398 1.494.398Z\" fill=\"#7C5AE2\"/></g><rect class=\"help-img-highlight\" x=\".5\" y=\".5\" width=\"59\" height=\"59\" rx=\"29.5\"/><defs><clipPath id=\"j\"><rect width=\"60\" height=\"60\" rx=\"30\" fill=\"#fff\"/></clipPath></defs></svg>`,\n    HELP_PAINTING_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#k)\"><rect width=\"60\" height=\"60\" rx=\"3\" fill=\"#C653C6\"/><path d=\"M52.094 47.344c0-4.246-1.436-9.557-5.885-12.4a2.876 2.876 0 0 0-1.615-3.891v-.819a4.037 4.037 0 0 0-1.34-3.007 4.75 4.75 0 0 0-2.41-6.252v-5.506c0-6.248-5.065-11.313-11.313-11.313-6.247 0-11.312 5.065-11.312 11.313v2.152a3.343 3.343 0 0 0-1.18 5.045 4.738 4.738 0 0 0-1.633 3.584 4.73 4.73 0 0 0 .956 2.858 5.218 5.218 0 0 0-2.358 6.815c-3.06 4.129-6.098 8.298-6.098 15.64 0 2.668.364 4.856.731 6.385.184.765.368 1.366.509 1.78a12.721 12.721 0 0 0 .225.611l.015.037.005.011.001.004v.002h.001l.92-.393-.92.394.26.606h38.26l.291-.49-.86-.51.86.51v-.001l.002-.002.002-.005.01-.017.035-.06.127-.225c.108-.195.26-.477.441-.835.363-.714.845-1.732 1.328-2.953.959-2.427 1.945-5.725 1.945-9.068Z\" fill=\"#E87DE8\" stroke=\"#fff\" stroke-width=\"2\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.5 29.5c-3-.5-5.5-3-5.503-7l.002-7c0-.466 0-.698.026-.893a3 3 0 0 1 2.582-2.582c.195-.026.428-.026.893-.026 2 0 2.5-2.5 2.5-2.5s0 2.5 2.5 2.5c1.398 0 2.097 0 2.648.229a3 3 0 0 1 1.624 1.623c.228.552.228 1.25.228 2.649v6c0 4-3 7-6.5 7 1.35.23 4 0 6.5-2v9.53C34 38.5 31.495 40 28 40s-6-1.5-6-2.97L24 34l2.5 1.5v-6ZM26 47h4.5c2.5 0 3 4 3 5.5h-3l-1-1.5H26v-4Zm-6.25 5.5H24V57h-8c0-1 1-4.5 3.75-4.5Z\" fill=\"#fff\"/></g><rect class=\"help-img-highlight\" x=\".5\" y=\".5\" width=\"59\" height=\"59\" rx=\"2.5\"/><defs><clipPath id=\"k\"><rect width=\"60\" height=\"60\" rx=\"3\" fill=\"#fff\"/></clipPath></defs></svg>`,\n    HELP_CHART_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#l)\"><path d=\"M0 25.01C0 15.76 0 11.133 1.97 7.678a15 15 0 0 1 5.598-5.597C11.023.11 15.648.11 24.9.11h10.2c9.251 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.597C60 11.133 60 15.758 60 25.01v10.2c0 9.252 0 13.877-1.97 17.332a15 15 0 0 1-5.598 5.598c-3.455 1.97-8.08 1.97-17.332 1.97H24.9c-9.251 0-13.877 0-17.332-1.97a14.999 14.999 0 0 1-5.597-5.598C0 49.087 0 44.462 0 35.21v-10.2Z\" fill=\"#1DC956\"/><path d=\"M.5 25.01c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.289a14.5 14.5 0 0 1 5.412-5.41c1.639-.936 3.579-1.418 6.289-1.661C16.822.61 20.265.61 24.9.61h10.2c4.635 0 8.078 0 10.795.245 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.579 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.795-.244 2.71-.726 4.65-1.66 6.29a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.412C1.47 50.655.988 48.716.745 46.005.5 43.288.5 39.845.5 35.21v-10.2Z\" stroke=\"#fff\" stroke-opacity=\".1\"/><path d=\"M16.109 60c-3.833-.179-6.41-.645-8.541-1.86a15 15 0 0 1-5.598-5.598C.553 50.057.155 46.967.043 41.985l4.146-1.382a4 4 0 0 0 2.48-2.39l4.654-12.409a2 2 0 0 1 2.505-1.195l2.526.842a2 2 0 0 0 2.422-1.003l2.968-5.938c.81-1.62 3.185-1.415 3.705.32l3.774 12.581a2 2 0 0 0 3.025 1.09l3.342-2.228c.27-.18.49-.422.646-.706l5.297-9.712a2 2 0 0 1 1.428-1.016l4.134-.689a2 2 0 0 1 1.61.437l3.892 3.243a2 2 0 0 0 2.694-.122l4.633-4.632C60 19.28 60 21.88 60 25.01v10.2c0 9.252 0 13.877-1.97 17.332a14.998 14.998 0 0 1-5.598 5.598c-2.131 1.215-4.708 1.681-8.54 1.86H16.108Z\" fill=\"#2BEE6C\"/><path d=\"M.072 43.03a112.37 112.37 0 0 1-.048-2.093l3.85-1.283a3 3 0 0 0 1.86-1.793l4.653-12.408a3 3 0 0 1 3.758-1.793l2.526.842a1 1 0 0 0 1.21-.501l2.97-5.938c1.214-2.43 4.775-2.123 5.556.48l3.774 12.58a1 1 0 0 0 1.513.545l3.341-2.227a1 1 0 0 0 .323-.353l5.298-9.712a3 3 0 0 1 2.14-1.523l4.135-.69a3 3 0 0 1 2.414.655l3.892 3.244a1 1 0 0 0 1.347-.061l5.28-5.28c.046.845.077 1.752.097 2.732l-3.962 3.962a3 3 0 0 1-4.042.183l-3.893-3.243a1 1 0 0 0-.804-.218l-4.135.689a1 1 0 0 0-.714.507l-5.297 9.712c-.233.427-.565.79-.97 1.06l-3.34 2.228a3 3 0 0 1-4.538-1.635l-3.775-12.58c-.26-.868-1.447-.97-1.852-.16l-2.969 5.937a3 3 0 0 1-3.632 1.505l-2.526-.842a1 1 0 0 0-1.252.597L7.606 38.564a5 5 0 0 1-3.1 2.988L.072 43.029Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.5 19a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z\" fill=\"#2BEE6C\"/><path d=\"M47.5 19a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z\" fill=\"#fff\"/><path d=\"M45 .283v59.654c-.63.042-1.294.074-2 .098V.185c.706.025 1.37.056 2 .098Z\" fill=\"#fff\"/><path class=\"help-img-highlight\" d=\"M.5 25.01c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.289a14.5 14.5 0 0 1 5.412-5.41c1.639-.936 3.579-1.418 6.289-1.661C16.822.61 20.265.61 24.9.61h10.2c4.635 0 8.078 0 10.795.245 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.579 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.795-.244 2.71-.726 4.65-1.66 6.29a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.412C1.47 50.655.988 48.716.745 46.005.5 43.288.5 39.845.5 35.21v-10.2Z\"/></g><defs><clipPath id=\"l\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,\n    HELP_KEY_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#m)\"><path fill=\"#EB8B47\" d=\"M0 24.9c0-9.252 0-13.878 1.97-17.332A15 15 0 0 1 7.569 1.97C11.023 0 15.648 0 24.9 0h10.2c9.251 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.022 60 15.648 60 24.899v10.2c0 9.252 0 13.878-1.97 17.332a15.001 15.001 0 0 1-5.598 5.598c-3.455 1.97-8.08 1.97-17.332 1.97H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.351 0 35.1V24.9Z\"/><path class=\"help-img-highlight\" d=\"M.5 24.9c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.29a14.5 14.5 0 0 1 5.412-5.41C9.455 1.468 11.395.986 14.105.743 16.822.5 20.265.5 24.9.5h10.2c4.635 0 8.078 0 10.795.244 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.58 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.796-.244 2.71-.726 4.65-1.66 6.289a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.411c-.935-1.64-1.417-3.58-1.66-6.29C.5 43.178.5 39.734.5 35.1V24.9Z\"/><path fill=\"#FF974C\" stroke=\"#fff\" stroke-width=\"2\" d=\"M39.192 29.192c5.077-5.077 5.077-13.308 0-18.385-5.076-5.077-13.308-5.077-18.384 0-5.077 5.077-5.077 13.308 0 18.385l1.287 1.291c1.137 1.142 1.706 1.712 2.097 2.387.267.462.472.957.608 1.473.2.755.2 1.56.2 3.171V48.75c0 1.077 0 1.615.134 2.119a4 4 0 0 0 .407.984c.262.45.643.831 1.404 1.592l.294.295c.654.654.982.981 1.365 1.086.26.07.533.07.792 0 .383-.105.71-.432 1.365-1.086l3.478-3.479c.655-.654.982-.981 1.087-1.365a1.5 1.5 0 0 0 0-.791c-.105-.384-.432-.711-1.087-1.365l-.478-.479c-.655-.654-.982-.981-1.087-1.365a1.5 1.5 0 0 1 0-.791c.105-.384.432-.711 1.087-1.365l.478-.479c.655-.654.982-.981 1.087-1.365a1.5 1.5 0 0 0 0-.791c-.105-.384-.432-.711-1.087-1.365l-.492-.493c-.65-.65-.974-.974-1.08-1.355a1.5 1.5 0 0 1-.003-.788c.102-.382.425-.71 1.069-1.364l5.46-5.547Z\"/><circle cx=\"30\" cy=\"17\" r=\"4\" fill=\"#EB8B47\" stroke=\"#fff\" stroke-width=\"2\"/></g><defs><clipPath id=\"m\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,\n    HELP_USER_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#n)\"><rect width=\"60\" height=\"60\" fill=\"#00ACE6\" rx=\"30\"/><path fill=\"#1AC6FF\" stroke=\"#fff\" stroke-width=\"2\" d=\"M59 73c0 16.016-12.984 29-29 29S1 89.016 1 73c0-16.017 11-29 29-29s29 12.983 29 29ZM18.69 19.902a11 11 0 0 1 9.281-8.692 14.842 14.842 0 0 1 4.058 0 11 11 0 0 1 9.28 8.692c.178.866.322 1.75.44 2.625.132.977.132 1.968 0 2.945a39.467 39.467 0 0 1-.44 2.625 11 11 0 0 1-9.28 8.692 14.862 14.862 0 0 1-4.058 0 11 11 0 0 1-9.28-8.692 39.467 39.467 0 0 1-.44-2.625 11.004 11.004 0 0 1 0-2.945c.118-.876.262-1.759.44-2.625Z\"/><circle cx=\"24.5\" cy=\"23.5\" r=\"1.5\" fill=\"#fff\"/><circle cx=\"35.5\" cy=\"23.5\" r=\"1.5\" fill=\"#fff\"/><path stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m31 20-3 8h4\"/></g><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"29.5\"/><defs><clipPath id=\"n\"><rect width=\"60\" height=\"60\" fill=\"#fff\" rx=\"30\"/></clipPath></defs></svg>`,\n    HELP_LOCK_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><rect width=\"60\" height=\"60\" fill=\"#C653C6\" rx=\"3\"/><path fill=\"#fff\" d=\"M20.034 15.216C20 15.607 20 16.07 20 17v2.808c0 1.13 0 1.696-.2 2.11a1.78 1.78 0 0 1-.584.714c-.366.28-1.051.42-2.423.7a7.076 7.076 0 0 0-1.597.511 9.001 9.001 0 0 0-4.353 4.353C10 30.005 10 32.336 10 37c0 4.663 0 6.995.843 8.804a9.001 9.001 0 0 0 4.353 4.353C17.005 51 19.336 51 24 51h12c4.663 0 6.995 0 8.804-.843a9.001 9.001 0 0 0 4.353-4.353C50 43.995 50 41.664 50 37c0-4.663 0-6.995-.843-8.804a9.001 9.001 0 0 0-4.353-4.353 7.076 7.076 0 0 0-1.597-.511c-1.372-.28-2.057-.42-2.423-.7a1.78 1.78 0 0 1-.583-.715C40 21.505 40 20.94 40 19.809V17c0-.929 0-1.393-.034-1.784a9 9 0 0 0-8.182-8.182C31.393 7 30.93 7 30 7s-1.393 0-1.784.034a9 9 0 0 0-8.182 8.182Z\"/><path fill=\"#E87DE8\" d=\"M22 17c0-.929 0-1.393.044-1.784a7 7 0 0 1 6.172-6.172C28.606 9 29.071 9 30 9s1.393 0 1.784.044a7 7 0 0 1 6.172 6.172c.044.39.044.855.044 1.784v4.5a1.5 1.5 0 0 1-3 0V17c0-.93 0-1.394-.077-1.78a4 4 0 0 0-3.143-3.143C31.394 12 30.93 12 30 12s-1.394 0-1.78.077a4 4 0 0 0-3.143 3.143C25 15.606 25 16.07 25 17v4.5a1.5 1.5 0 0 1-3 0V17Z\"/><path fill=\"#E87DE8\" fill-rule=\"evenodd\" d=\"M12 36.62c0-4.317 0-6.476.92-8.088a7 7 0 0 1 2.612-2.612c1.612-.92 3.77-.92 8.088-.92h6.855c.469 0 .703 0 .906.017 2.73.222 4.364 2.438 4.619 4.983.27-2.698 2.111-5 5.015-5A6.985 6.985 0 0 1 48 31.985v5.395c0 4.317 0 6.476-.92 8.088a7 7 0 0 1-2.612 2.612c-1.612.92-3.77.92-8.088.92h-5.855c-.469 0-.703 0-.906-.017-2.73-.222-4.364-2.438-4.619-4.983-.258 2.583-1.943 4.818-4.714 4.99-.155.01-.335.01-.694.01-.55 0-.825 0-1.057-.015a7 7 0 0 1-6.52-6.52C12 42.233 12 41.958 12 41.408V36.62Zm21.24-.273a4 4 0 1 0-6.478 0c.985 1.36 1.479 2.039 1.564 2.229.178.398.176.818.174 1.247V42.5a1.5 1.5 0 0 0 3 0v-2.677c-.002-.429-.004-.85.174-1.247.085-.19.579-.87 1.565-2.229Z\" clip-rule=\"evenodd\"/><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"2.5\"/></svg>`,\n    HELP_COMPAS_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><rect width=\"60\" height=\"60\" fill=\"#1DC956\" rx=\"30\"/><circle cx=\"30\" cy=\"29.999\" r=\"3\" fill=\"#fff\"/><path fill=\"#2BEE6C\" stroke=\"#fff\" stroke-width=\"2\" d=\"m45.316 17.9-.88-.425.88.424a7.9 7.9 0 0 1 .026-.053c.093-.192.21-.432.26-.687l-.819-.162.819.162a2 2 0 0 0-.239-1.405c-.132-.224-.32-.412-.472-.562a8.415 8.415 0 0 1-.042-.042l-.042-.042c-.15-.151-.338-.34-.562-.472l-.508.862.508-.862a2 2 0 0 0-1.405-.239c-.255.05-.495.167-.687.26l-.053.026-15.05 7.246-.108.052c-1.131.545-1.843.887-2.456 1.374a6.994 6.994 0 0 0-1.13 1.13c-.487.613-.83 1.325-1.375 2.457l-.051.108-7.247 15.05-.025.053c-.094.192-.21.431-.26.686a2 2 0 0 0 .239 1.406l.855-.505-.856.505c.133.224.321.411.473.562l.042.042.041.042c.15.151.338.34.563.472a2 2 0 0 0 1.405.239l-.195-.981.195.98c.255-.05.494-.166.686-.26l.054-.025-.419-.87.419.87 15.05-7.247.107-.051c1.132-.545 1.844-.888 2.457-1.374a7.002 7.002 0 0 0 1.13-1.13c.487-.614.83-1.325 1.374-2.457l.052-.108 7.246-15.05Z\"/><path fill=\"#1DC956\" d=\"m33.376 32.723-2.669-3.43-14.85 14.849.206.205a1 1 0 0 0 1.141.194l15.105-7.273a3 3 0 0 0 1.067-4.545Z\"/><path fill=\"#86F999\" d=\"m26.624 27.276 2.669 3.43 14.85-14.849-.206-.205a1 1 0 0 0-1.141-.194L27.69 22.731a3 3 0 0 0-1.067 4.545Z\"/><circle cx=\"30\" cy=\"30\" r=\"3\" fill=\"#fff\" transform=\"rotate(45 30 30)\"/><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"29.5\"/></svg>`,\n    HELP_NOUN_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><rect width=\"60\" height=\"60\" fill=\"#794CFF\" rx=\"3\"/><path fill=\"#987DE8\" stroke=\"#fff\" stroke-width=\"2\" d=\"M33 22.5v-1H16v5H8.5V36H13v-5h3v7.5h17V31h1v7.5h17v-17H34v5h-1v-4Z\"/><path fill=\"#fff\" d=\"M37.5 25h10v10h-10z\"/><path fill=\"#4019B2\" d=\"M42.5 25h5v10h-5z\"/><path fill=\"#fff\" d=\"M19.5 25h10v10h-10z\"/><path fill=\"#4019B2\" d=\"M24.5 25h5v10h-5z\"/><path fill=\"#fff\" d=\"M12 30.5h4V37h-4v-6.5Z\"/><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"2.5\"/></svg>`,\n    HELP_DAO_IMG: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#o)\"><path fill=\"#EB8B47\" d=\"M0 24.9c0-9.252 0-13.878 1.97-17.332A15 15 0 0 1 7.569 1.97C11.023 0 15.648 0 24.9 0h10.2c9.251 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.022 60 15.648 60 24.899v10.2c0 9.252 0 13.878-1.97 17.332a15.001 15.001 0 0 1-5.598 5.598c-3.455 1.97-8.08 1.97-17.332 1.97H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.351 0 35.1V24.9Z\"/><path class=\"help-img-highlight\" d=\"M.5 24.9c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.29a14.5 14.5 0 0 1 5.412-5.41C9.455 1.468 11.395.986 14.105.743 16.822.5 20.265.5 24.9.5h10.2c4.635 0 8.078 0 10.795.244 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.58 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.796-.244 2.71-.726 4.65-1.66 6.289a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.411c-.935-1.64-1.417-3.58-1.66-6.29C.5 43.178.5 39.734.5 35.1V24.9Z\"/><path fill=\"#FF974C\" stroke=\"#fff\" stroke-width=\"2\" d=\"M19 52c5.523 0 10-4.477 10-10s-4.477-10-10-10S9 36.477 9 42s4.477 10 10 10Z\"/><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M42.844 8.326a1 1 0 0 0-1.687 0L28.978 27.463A1 1 0 0 0 29.822 29h24.357a1 1 0 0 0 .843-1.537L42.844 8.326Z\" clip-rule=\"evenodd\"/><path fill=\"#FF974C\" fill-rule=\"evenodd\" d=\"M42.335 11.646c.324.115.571.504 1.066 1.28l7.332 11.523c.562.883.843 1.325.792 1.69a1 1 0 0 1-.342.623c-.28.238-.803.238-1.85.238H34.667c-1.047 0-1.57 0-1.85-.238a1 1 0 0 1-.342-.623c-.051-.365.23-.806.792-1.69l7.332-11.523c.495-.776.742-1.165 1.066-1.28a1 1 0 0 1 .67 0ZM35 27a7 7 0 0 0 7-7 7 7 0 0 0 7 7H35Z\" clip-rule=\"evenodd\"/><path fill=\"#FF974C\" stroke=\"#fff\" stroke-width=\"2\" d=\"M10.106 9.357c-.109.32-.107.682-.106.975V25.668c-.001.293-.003.654.106.975a2 2 0 0 0 1.251 1.25c.32.11.682.108.975.107H19c5.523 0 10-4.477 10-10S24.523 8 19 8h-6.668c-.293-.001-.654-.003-.975.106a2 2 0 0 0-1.25 1.251Z\"/><circle cx=\"19\" cy=\"18\" r=\"4\" fill=\"#EB8B47\" stroke=\"#fff\" stroke-width=\"2\"/><circle cx=\"19\" cy=\"41.999\" r=\"4\" fill=\"#EB8B47\" stroke=\"#fff\" stroke-width=\"2\"/></g><defs><clipPath id=\"o\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,\n    SEARCH_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"20\" height=\"21\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.432 13.992c-.354-.353-.91-.382-1.35-.146a5.5 5.5 0 1 1 2.265-2.265c-.237.441-.208.997.145 1.35l3.296 3.296a.75.75 0 1 1-1.06 1.061l-3.296-3.296Zm.06-5a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z\" fill=\"#949E9E\"/></svg>`,\n    HELP_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"11\" height=\"17\" viewBox=\"0 0 11 17\"><path fill=\"#fff\" d=\"M5.22 2.97c-1.07 0-2.25.843-2.25 2.25a.75.75 0 0 1-1.5 0c0-2.393 2.019-3.75 3.75-3.75 1.73 0 3.75 1.357 3.75 3.75 0 1.64-1.038 2.466-1.785 3.057-.802.635-1.215.984-1.215 1.693a.75.75 0 1 1-1.5 0c0-1.466.985-2.24 1.681-2.788l.103-.081C7.007 6.504 7.47 6.08 7.47 5.22c0-1.407-1.181-2.25-2.25-2.25ZM5.22 14.97a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z\"/></svg>`,\n    WALLET_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"15\" height=\"14\" fill=\"none\" viewBox=\"0 0 15 14\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M.64 9.2v-3h.001c.009-1.857.07-2.886.525-3.682a4 4 0 0 1 1.492-1.493C3.58.5 4.813.5 7.28.5h3.735c.58 0 .871 0 1.114.04A3 3 0 0 1 14.6 3.011c.04.243.04.533.04 1.114 0 .58 0 .871-.04 1.114a3 3 0 0 1-2.471 2.47c-.243.041-.533.041-1.114.041h-.777c.178.307.302.648.362 1.011.04.243.04.533.04 1.114 0 .58 0 .871-.04 1.114a3 3 0 0 1-2.471 2.47c-.243.041-.533.041-1.114.041H4.507A3.867 3.867 0 0 1 .64 9.633V9.2ZM7.28 2h3.735c.64 0 .779.005.87.02a1.5 1.5 0 0 1 1.235 1.236c.015.09.02.229.02.869s-.005.779-.02.87a1.5 1.5 0 0 1-1.236 1.235c-.09.015-.229.02-.869.02H4.023c-.697 0-1.345.21-1.883.572V6.25h.001c.004-.791.015-1.383.059-1.867.056-.629.157-.926.269-1.122a2.5 2.5 0 0 1 .932-.933c.197-.111.494-.212 1.123-.268C5.173 2 6.019 2 7.28 2Zm-.265 5.75H4.023c-1.04 0-1.883.843-1.883 1.883A2.367 2.367 0 0 0 4.507 12h2.508c.64 0 .779-.005.87-.02a1.5 1.5 0 0 0 1.235-1.236c.015-.09.02-.229.02-.869s-.005-.779-.02-.87A1.5 1.5 0 0 0 7.884 7.77c-.09-.015-.228-.02-.869-.02Z\" clip-rule=\"evenodd\"/></svg>`,\n    NETWORK_PLACEHOLDER: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 28 28\"><mask id=\"p\" width=\"26\" height=\"28\" x=\"1\" y=\"0\" maskUnits=\"userSpaceOnUse\" style=\"mask-type:alpha\"><path fill=\"#D9D9D9\" d=\"M12 1.172a4 4 0 0 1 4 0l8.124 4.69a4 4 0 0 1 2 3.465v9.381a4 4 0 0 1-2 3.464L16 26.862a4 4 0 0 1-4 0l-8.124-4.69a4 4 0 0 1-2-3.464V9.327a4 4 0 0 1 2-3.464L12 1.173Z\"/></mask><g mask=\"url(#p)\"><path id=\"network-placeholder-fill\" fill=\"#fff\" d=\"M0 0h28v28H0z\"/><path id=\"network-placeholder-dash\" stroke=\"#000\" stroke-dasharray=\"2 2\" d=\"m8.953 2.931 2.032-1.173.25.433 1.015-.586c.269-.155.553-.271.844-.35l-.13-.483a4.003 4.003 0 0 1 2.071 0l-.13.483c.293.079.576.195.845.35l1.016.586.25-.433 2.03 1.173-.25.433 2.032 1.173.25-.433 2.03 1.172-.25.433 1.016.587c.269.155.512.342.725.556l.354-.354a4.003 4.003 0 0 1 1.035 1.794l-.483.129c.078.292.12.596.12.906v1.172h.5v2.346h-.5v2.345h.5v2.345h-.5v1.173c0 .31-.042.614-.12.906l.483.13a4.003 4.003 0 0 1-1.035 1.793l-.354-.354a3.498 3.498 0 0 1-.725.556l-1.015.586.25.434-2.031 1.172-.25-.433-2.031 1.173.25.433-2.031 1.172-.25-.433-1.016.587a3.494 3.494 0 0 1-.844.35l.13.482a4.003 4.003 0 0 1-2.071 0l.13-.483a3.496 3.496 0 0 1-.845-.35l-1.015-.586-.25.433-2.032-1.172.25-.433-2.03-1.173-.25.433L4.89 22.76l.25-.434-1.015-.586a3.498 3.498 0 0 1-.725-.556l-.354.354a4.003 4.003 0 0 1-1.035-1.794l.483-.13a3.497 3.497 0 0 1-.12-.905v-1.173h-.5V15.19h.5v-2.345h-.5v-2.346h.5V9.327c0-.31.042-.614.12-.906l-.483-.13a4.003 4.003 0 0 1 1.035-1.793l.354.354c.213-.214.456-.401.725-.556l1.015-.587-.25-.433 2.031-1.172.25.433 2.031-1.173-.25-.433Z\"/><path fill=\"#798686\" stroke=\"#fff\" d=\"M14.243 13.563 14 13.428l-.243.135-6.388 3.549-.024.013c-.432.24-.79.44-1.053.622-.266.184-.516.405-.636.722a1.5 1.5 0 0 0 0 1.062c.12.317.37.538.636.722.263.183.62.382 1.053.622l.024.013 3.164 1.758.088.049c1.164.646 1.857 1.032 2.607 1.162.51.09 1.033.09 1.544 0 .75-.13 1.443-.516 2.606-1.162l.09-.05 3.163-1.757.024-.013c.432-.24.79-.44 1.053-.622.266-.184.516-.405.636-.722l-.468-.177.468.177a1.5 1.5 0 0 0 0-1.062l-.468.177.468-.177c-.12-.317-.37-.538-.636-.722-.263-.183-.62-.382-1.053-.622l-.024-.013-6.388-3.55Z\"/><path fill=\"#9EA9A9\" stroke=\"#fff\" d=\"M14.243 8.563 14 8.428l-.243.135-6.388 3.549-.024.013c-.432.24-.79.44-1.053.622-.266.184-.516.405-.636.722a1.5 1.5 0 0 0 0 1.062c.12.316.37.537.636.722.263.183.62.382 1.053.622l.024.013 3.164 1.758.088.049c1.164.646 1.857 1.032 2.607 1.162.51.09 1.033.09 1.544 0 .75-.13 1.443-.516 2.606-1.162l.09-.05 3.163-1.757.024-.013c.432-.24.79-.44 1.053-.622.266-.184.516-.405.636-.722l-.468-.177.468.177a1.5 1.5 0 0 0 0-1.062l-.468.177.468-.177c-.12-.316-.37-.537-.636-.722-.263-.183-.62-.382-1.053-.622l-.024-.013-6.388-3.55Z\"/><path fill=\"#C9CFCF\" stroke=\"#fff\" d=\"m22.344 9.53-.468-.176.468.177a1.5 1.5 0 0 0 0-1.062l-.468.177.468-.177c-.12-.317-.37-.537-.636-.722-.263-.183-.62-.382-1.053-.622l-.024-.013-3.163-1.758-.09-.05c-1.163-.645-1.856-1.03-2.606-1.161a4.5 4.5 0 0 0-1.544 0c-.75.13-1.443.516-2.607 1.162l-.088.05-3.164 1.757-.024.013c-.432.24-.79.44-1.053.622-.266.185-.516.405-.636.722a1.5 1.5 0 0 0 0 1.062c.12.317.37.537.636.722.263.183.62.382 1.053.622l.024.013 3.164 1.758.088.049c1.164.646 1.857 1.032 2.607 1.162.51.09 1.033.09 1.544 0 .75-.13 1.443-.516 2.606-1.162l.09-.05 3.163-1.757.024-.013c.432-.24.79-.44 1.053-.622.266-.184.516-.405.636-.722Z\"/></g></svg>`,\n    WALLET_PLACEHOLDER: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#q)\"><path id=\"wallet-placeholder-fill\" fill=\"#fff\" d=\"M0 24.9c0-9.251 0-13.877 1.97-17.332a15 15 0 0 1 5.598-5.597C11.023 0 15.648 0 24.9 0h10.2c9.252 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.023 60 15.648 60 24.9v10.2c0 9.252 0 13.877-1.97 17.332a15.001 15.001 0 0 1-5.598 5.597C48.977 60 44.352 60 35.1 60H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.352 0 35.1V24.9Z\"/><path id=\"wallet-placeholder-dash\" stroke=\"#000\" stroke-dasharray=\"4 4\" stroke-width=\"1.5\" d=\"M.04 41.708a231.598 231.598 0 0 1-.039-4.403l.75-.001L.75 35.1v-2.55H0v-5.1h.75V24.9l.001-2.204h-.75c.003-1.617.011-3.077.039-4.404l.75.016c.034-1.65.099-3.08.218-4.343l-.746-.07c.158-1.678.412-3.083.82-4.316l.713.236c.224-.679.497-1.296.827-1.875a14.25 14.25 0 0 1 1.05-1.585L3.076 5.9A15 15 0 0 1 5.9 3.076l.455.596a14.25 14.25 0 0 1 1.585-1.05c.579-.33 1.196-.603 1.875-.827l-.236-.712C10.812.674 12.217.42 13.895.262l.07.746C15.23.89 16.66.824 18.308.79l-.016-.75C19.62.012 21.08.004 22.695.001l.001.75L24.9.75h2.55V0h5.1v.75h2.55l2.204.001v-.75c1.617.003 3.077.011 4.404.039l-.016.75c1.65.034 3.08.099 4.343.218l.07-.746c1.678.158 3.083.412 4.316.82l-.236.713c.679.224 1.296.497 1.875.827a14.24 14.24 0 0 1 1.585 1.05l.455-.596A14.999 14.999 0 0 1 56.924 5.9l-.596.455c.384.502.735 1.032 1.05 1.585.33.579.602 1.196.827 1.875l.712-.236c.409 1.233.663 2.638.822 4.316l-.747.07c.119 1.264.184 2.694.218 4.343l.75-.016c.028 1.327.036 2.787.039 4.403l-.75.001.001 2.204v2.55H60v5.1h-.75v2.55l-.001 2.204h.75a231.431 231.431 0 0 1-.039 4.404l-.75-.016c-.034 1.65-.099 3.08-.218 4.343l.747.07c-.159 1.678-.413 3.083-.822 4.316l-.712-.236a10.255 10.255 0 0 1-.827 1.875 14.242 14.242 0 0 1-1.05 1.585l.596.455a14.997 14.997 0 0 1-2.824 2.824l-.455-.596c-.502.384-1.032.735-1.585 1.05-.579.33-1.196.602-1.875.827l.236.712c-1.233.409-2.638.663-4.316.822l-.07-.747c-1.264.119-2.694.184-4.343.218l.016.75c-1.327.028-2.787.036-4.403.039l-.001-.75-2.204.001h-2.55V60h-5.1v-.75H24.9l-2.204-.001v.75a231.431 231.431 0 0 1-4.404-.039l.016-.75c-1.65-.034-3.08-.099-4.343-.218l-.07.747c-1.678-.159-3.083-.413-4.316-.822l.236-.712a10.258 10.258 0 0 1-1.875-.827 14.252 14.252 0 0 1-1.585-1.05l-.455.596A14.999 14.999 0 0 1 3.076 54.1l.596-.455a14.24 14.24 0 0 1-1.05-1.585 10.259 10.259 0 0 1-.827-1.875l-.712.236C.674 49.188.42 47.783.262 46.105l.746-.07C.89 44.77.824 43.34.79 41.692l-.75.016Z\"/><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M35.643 32.145c-.297-.743-.445-1.114-.401-1.275a.42.42 0 0 1 .182-.27c.134-.1.463-.1 1.123-.1.742 0 1.499.046 2.236-.05a6 6 0 0 0 5.166-5.166c.051-.39.051-.855.051-1.784 0-.928 0-1.393-.051-1.783a6 6 0 0 0-5.166-5.165c-.39-.052-.854-.052-1.783-.052h-7.72c-4.934 0-7.401 0-9.244 1.051a8 8 0 0 0-2.985 2.986C16.057 22.28 16.003 24.58 16 29 15.998 31.075 16 33.15 16 35.224A7.778 7.778 0 0 0 23.778 43H28.5c1.394 0 2.09 0 2.67-.116a6 6 0 0 0 4.715-4.714c.115-.58.115-1.301.115-2.744 0-1.31 0-1.964-.114-2.49a4.998 4.998 0 0 0-.243-.792Z\" clip-rule=\"evenodd\"/><path fill=\"#9EA9A9\" fill-rule=\"evenodd\" d=\"M37 18h-7.72c-2.494 0-4.266.002-5.647.126-1.361.122-2.197.354-2.854.728a6.5 6.5 0 0 0-2.425 2.426c-.375.657-.607 1.492-.729 2.853-.11 1.233-.123 2.777-.125 4.867 0 .7 0 1.05.097 1.181.096.13.182.181.343.2.163.02.518-.18 1.229-.581a6.195 6.195 0 0 1 3.053-.8H37c.977 0 1.32-.003 1.587-.038a4.5 4.5 0 0 0 3.874-3.874c.036-.268.039-.611.039-1.588 0-.976-.003-1.319-.038-1.587a4.5 4.5 0 0 0-3.875-3.874C38.32 18.004 37.977 18 37 18Zm-7.364 12.5h-7.414a4.722 4.722 0 0 0-4.722 4.723 6.278 6.278 0 0 0 6.278 6.278H28.5c1.466 0 1.98-.008 2.378-.087a4.5 4.5 0 0 0 3.535-3.536c.08-.397.087-.933.087-2.451 0-1.391-.009-1.843-.08-2.17a3.5 3.5 0 0 0-2.676-2.676c-.328-.072-.762-.08-2.108-.08Z\" clip-rule=\"evenodd\"/></g><defs><clipPath id=\"q\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,\n    TOKEN_PLACEHOLDER: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\"><rect id=\"token-placeholder-fill\" width=\"58\" height=\"58\" x=\"1\" y=\"1\" fill=\"#fff\" rx=\"29\"/><path fill=\"#3B4040\" stroke=\"#fff\" stroke-width=\"2\" d=\"M32 10a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v5.566c0 .357.192.685.495.875a16.001 16.001 0 0 1 4.256 3.894c.667.88.33 2.113-.627 2.665l-2.494 1.44c-.956.552-2.166.204-2.913-.609a9.12 9.12 0 1 0 .064 12.267c.739-.82 1.945-1.181 2.907-.64l2.509 1.415c.962.542 1.312 1.77.654 2.658a16 16 0 0 1-4.356 4.028c-.303.19-.495.518-.495.875V50a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-2.992c0-.602-.528-1.065-1.13-1.032-.579.032-1.16.032-1.74 0-.602-.032-1.13.43-1.13 1.032V50a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-5.566c0-.357-.192-.685-.495-.875a16 16 0 0 1 0-27.118c.303-.19.495-.517.495-.875V10a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2.992c0 .601.528 1.064 1.13 1.032.58-.032 1.161-.032 1.74 0 .602.033 1.13-.43 1.13-1.032V10Z\"/><rect id=\"token-placeholder-dash\" width=\"58\" height=\"58\" x=\"1\" y=\"1\" stroke=\"#000\" stroke-dasharray=\"6 6\" stroke-width=\"2\" rx=\"29\"/></svg>`,\n    ACCOUNT_COPY: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"14\" height=\"14\" fill=\"none\" viewBox=\"0 0 14 14\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M4.003 4.005c.012-1.225.074-1.936.391-2.491a3 3 0 0 1 1.12-1.12C6.204 0 7.136 0 9 0s2.795 0 3.486.394a3 3 0 0 1 1.12 1.12C14 2.204 14 3.136 14 5s0 2.795-.394 3.486a3 3 0 0 1-1.12 1.12c-.555.317-1.266.379-2.491.391l.002.003c-.012 1.222-.075 1.932-.391 2.486a3 3 0 0 1-1.12 1.12C7.796 14 6.864 14 5 14s-2.795 0-3.486-.394a3 3 0 0 1-1.12-1.12C0 11.796 0 10.864 0 9s0-2.795.394-3.486a3 3 0 0 1 1.12-1.12c.554-.316 1.264-.379 2.486-.391l.003.002ZM9 8.5c-.959 0-1.58-.001-2.05-.043-.45-.04-.613-.109-.693-.154a1.5 1.5 0 0 1-.56-.56c-.045-.08-.113-.243-.154-.693C5.501 6.58 5.5 5.959 5.5 5c0-.959.001-1.58.043-2.05.04-.45.109-.613.154-.693a1.5 1.5 0 0 1 .56-.56c.08-.045.243-.113.693-.154C7.42 1.501 8.041 1.5 9 1.5c.959 0 1.58.001 2.05.043.45.04.613.109.693.154a1.5 1.5 0 0 1 .56.56c.045.08.113.243.154.693.042.47.043 1.091.043 2.05 0 .959-.001 1.58-.043 2.05-.04.45-.109.613-.154.693a1.5 1.5 0 0 1-.56.56c-.08.045-.242.113-.693.154-.47.042-1.091.043-2.05.043ZM4 5.503a13.77 13.77 0 0 0-1.05.04c-.45.04-.613.109-.693.154a1.5 1.5 0 0 0-.56.56c-.045.08-.113.243-.154.693C1.501 7.42 1.5 8.041 1.5 9c0 .959.001 1.58.043 2.05.04.45.109.613.154.693a1.5 1.5 0 0 0 .56.56c.08.045.243.113.693.154.47.042 1.091.043 2.05.043.959 0 1.58-.001 2.05-.043.45-.04.613-.109.693-.154a1.5 1.5 0 0 0 .56-.56c.045-.08.113-.242.154-.693.025-.283.035-.619.04-1.05-1.534-.003-2.358-.037-2.983-.394a3 3 0 0 1-1.12-1.12c-.357-.625-.39-1.449-.394-2.983Z\" clip-rule=\"evenodd\"/></svg>`,\n    ACCOUNT_DISCONNECT: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"14\" fill=\"none\" viewBox=\"0 0 16 14\"><path fill=\"#fff\" d=\"M9.677 1.5h-2.61c-1.261 0-2.107.001-2.757.06-.629.056-.926.157-1.122.268a2.5 2.5 0 0 0-.933.933c-.112.196-.212.493-.269 1.122-.058.65-.06 1.496-.06 2.757v.72c0 1.26.002 2.107.06 2.756.057.63.157.927.27 1.123a2.5 2.5 0 0 0 .932.933c.196.111.493.212 1.122.268.65.059 1.496.06 2.757.06h2.61a.75.75 0 1 1 0 1.5h-2.61c-2.467 0-3.7 0-4.622-.525a4 4 0 0 1-1.493-1.493C.427 11.06.427 9.827.427 7.36v-.72c0-2.467 0-3.7.525-4.622A4 4 0 0 1 2.445.525C3.366 0 4.6 0 7.067 0h2.61a.75.75 0 1 1 0 1.5Z\"/><path fill=\"#fff\" d=\"M10.896 11.03a.75.75 0 0 1 0-1.06l1.793-1.793a.25.25 0 0 0-.176-.427H8.177a.75.75 0 0 1 0-1.5h4.336a.25.25 0 0 0 .176-.427L10.896 4.03a.75.75 0 0 1 1.061-1.06l3.323 3.323a1 1 0 0 1 0 1.414l-3.323 3.323a.75.75 0 0 1-1.06 0Z\"/></svg>`,\n    GLOBE_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M15.5 8a7.5 7.5 0 1 1-15 0 7.5 7.5 0 0 1 15 0Zm-2.113.75c.301 0 .535.264.47.558a6.01 6.01 0 0 1-2.867 3.896c-.203.116-.42-.103-.334-.32.409-1.018.691-2.274.797-3.657a.512.512 0 0 1 .507-.477h1.427Zm.47-2.058c.065.294-.169.558-.47.558H11.96a.512.512 0 0 1-.507-.477c-.106-1.383-.389-2.638-.797-3.656-.087-.217.13-.437.333-.32a6.01 6.01 0 0 1 2.868 3.895Zm-4.402.558c.286 0 .515-.24.49-.525-.121-1.361-.429-2.534-.83-3.393-.279-.6-.549-.93-.753-1.112a.535.535 0 0 0-.724 0c-.204.182-.474.513-.754 1.112-.4.859-.708 2.032-.828 3.393a.486.486 0 0 0 .49.525h2.909Zm-5.415 0c.267 0 .486-.21.507-.477.106-1.383.389-2.638.797-3.656.087-.217-.13-.437-.333-.32a6.01 6.01 0 0 0-2.868 3.895c-.065.294.169.558.47.558H4.04ZM2.143 9.308c-.065-.294.169-.558.47-.558H4.04c.267 0 .486.21.507.477.106 1.383.389 2.639.797 3.657.087.217-.13.436-.333.32a6.01 6.01 0 0 1-2.868-3.896Zm3.913-.033a.486.486 0 0 1 .49-.525h2.909c.286 0 .515.24.49.525-.121 1.361-.428 2.535-.83 3.394-.279.6-.549.93-.753 1.112a.535.535 0 0 1-.724 0c-.204-.182-.474-.513-.754-1.112-.4-.859-.708-2.033-.828-3.394Z\" clip-rule=\"evenodd\"/></svg>`\n  },\n  wa = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-toolbar-placeholder{top:0;bottom:0;left:0;right:0;width:100%;position:absolute;display:block;pointer-events:none;height:100px;border-radius:calc(var(--w3m-background-border-radius) * .9);background-color:var(--w3m-background-color);background-image:var(--w3m-background-image-url);background-position:center;background-size:cover}.w3m-toolbar{height:38px;display:flex;position:relative;margin:5px 15px 5px 5px;justify-content:space-between;align-items:center}.w3m-toolbar img,.w3m-toolbar svg{height:28px;object-position:left center;object-fit:contain}#w3m-wc-logo path{fill:var(--w3m-accent-fill-color)}button{width:28px;height:28px;border-radius:var(--w3m-icon-button-border-radius);border:0;display:flex;justify-content:center;align-items:center;cursor:pointer;background-color:var(--w3m-color-bg-1);box-shadow:0 0 0 1px var(--w3m-color-overlay)}button:active{background-color:var(--w3m-color-bg-2)}button svg{display:block;object-position:center}button path{fill:var(--w3m-color-fg-1)}.w3m-toolbar div{display:flex}.w3m-toolbar div button:first-child{margin-right:16px}.w3m-help-active button:first-child{background-color:var(--w3m-color-fg-1)}.w3m-help-active button:first-child path{fill:var(--w3m-color-bg-1)}@media(hover:hover){button:hover{background-color:var(--w3m-color-bg-2)}}`;\nvar pa = Object.defineProperty,\n  ga = Object.getOwnPropertyDescriptor,\n  Ee = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ga(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && pa(a, o, e), e;\n  };\nlet Tt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isHelp = !1, this.unsubscribeRouter = void 0, this.unsubscribeRouter = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].subscribe(t => {\n      this.isHelp = t.view === \"Help\";\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeRouter) == null || t.call(this);\n  }\n  onHelp() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"Help\");\n  }\n  logoTemplate() {\n    var t;\n    const a = (t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state.themeVariables) == null ? void 0 : t[\"--w3m-logo-image-url\"];\n    return a ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<img crossorigin=\"anonymous\" src=\"${a}\" data-testid=\"component-modal-backcard\">` : w.WALLET_CONNECT_LOGO;\n  }\n  render() {\n    const t = {\n      \"w3m-help-active\": this.isHelp\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"w3m-toolbar-placeholder\"></div><div class=\"w3m-toolbar\">${this.logoTemplate()}<div class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\"><button @click=\"${this.onHelp}\">${w.HELP_ICON}</button> <button @click=\"${_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].close}\">${w.CROSS_ICON}</button></div></div>`;\n  }\n};\nTt.styles = [p.globalCss, wa], Ee([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Tt.prototype, \"isHelp\", 2), Tt = Ee([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal-backcard\")], Tt);\nconst ua = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`main{padding:20px;padding-top:0;width:100%}`;\nvar va = Object.defineProperty,\n  ba = Object.getOwnPropertyDescriptor,\n  fa = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ba(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && va(a, o, e), e;\n  };\nlet Jt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<main data-testid=\"component-modal-content\"><slot></slot></main>`;\n  }\n};\nJt.styles = [p.globalCss, ua], Jt = fa([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal-content\")], Jt);\nconst xa = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`footer{padding:10px;display:flex;flex-direction:column;align-items:inherit;justify-content:inherit;border-top:1px solid var(--w3m-color-bg-2)}`;\nvar ya = Object.defineProperty,\n  Ca = Object.getOwnPropertyDescriptor,\n  $a = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ca(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ya(a, o, e), e;\n  };\nlet te = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<footer data-testid=\"component-modal-footer\"><slot></slot></footer>`;\n  }\n};\nte.styles = [p.globalCss, xa], te = $a([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal-footer\")], te);\nconst ka = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`header{display:flex;justify-content:center;align-items:center;padding:20px;position:relative}.w3m-border{border-bottom:1px solid var(--w3m-color-bg-2);margin-bottom:20px}header button{padding:15px 20px}header button:active{opacity:.5}@media(hover:hover){header button:hover{opacity:.5}}.w3m-back-btn{position:absolute;left:0}.w3m-action-btn{position:absolute;right:0}path{fill:var(--w3m-accent-color)}`;\nvar Oa = Object.defineProperty,\n  Ia = Object.getOwnPropertyDescriptor,\n  xt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ia(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Oa(a, o, e), e;\n  };\nlet Q = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.title = \"\", this.onAction = void 0, this.actionIcon = void 0, this.border = !1;\n  }\n  backBtnTemplate() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button class=\"w3m-back-btn\" data-testid=\"component-header-back-button\" @click=\"${_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].goBack}\">${w.BACK_ICON}</button>`;\n  }\n  actionBtnTemplate() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button class=\"w3m-action-btn\" data-testid=\"component-header-action-button\" @click=\"${this.onAction}\">${this.actionIcon}</button>`;\n  }\n  render() {\n    const t = {\n        \"w3m-border\": this.border\n      },\n      a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].state.history.length > 1,\n      o = this.title ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-text variant=\"big-bold\">${this.title}</w3m-text>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<slot></slot>`;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<header class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\">${a ? this.backBtnTemplate() : null} ${o} ${this.onAction ? this.actionBtnTemplate() : null}</header>`;\n  }\n};\nQ.styles = [p.globalCss, ka], xt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"title\", 2), xt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"onAction\", 2), xt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"actionIcon\", 2), xt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"border\", 2), Q = xt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal-header\")], Q);\nconst Ea = {\n    1: \"692ed6ba-e569-459a-556a-776476829e00\",\n    42161: \"600a9a04-c1b9-42ca-6785-9b4b6ff85200\",\n    43114: \"30c46e53-e989-45fb-4549-be3bd4eb3b00\",\n    56: \"93564157-2e8e-4ce7-81df-b264dbee9b00\",\n    250: \"06b26297-fe0c-4733-5d6b-ffa5498aac00\",\n    10: \"ab9c186a-c52f-464b-2906-ca59d760a400\",\n    137: \"41d04d42-da3b-4453-8506-668cc0727900\",\n    100: \"02b53f6a-e3d4-479e-1cb4-21178987d100\",\n    9001: \"f926ff41-260d-4028-635e-91913fc28e00\",\n    324: \"b310f07f-4ef7-49f3-7073-2a0a39685800\",\n    314: \"5a73b3dd-af74-424e-cae0-0de859ee9400\",\n    4689: \"34e68754-e536-40da-c153-6ef2e7188a00\",\n    1088: \"3897a66d-40b9-4833-162f-a2c90531c900\",\n    1284: \"161038da-44ae-4ec7-1208-0ea569454b00\",\n    1285: \"f1d73bb6-5450-4e18-38f7-fb6484264a00\"\n  },\n  Wa = {\n    ETH: {\n      icon: \"692ed6ba-e569-459a-556a-776476829e00\"\n    },\n    WETH: {\n      icon: \"692ed6ba-e569-459a-556a-776476829e00\"\n    },\n    AVAX: {\n      icon: \"30c46e53-e989-45fb-4549-be3bd4eb3b00\"\n    },\n    FTM: {\n      icon: \"06b26297-fe0c-4733-5d6b-ffa5498aac00\"\n    },\n    BNB: {\n      icon: \"93564157-2e8e-4ce7-81df-b264dbee9b00\"\n    },\n    MATIC: {\n      icon: \"41d04d42-da3b-4453-8506-668cc0727900\"\n    },\n    OP: {\n      icon: \"ab9c186a-c52f-464b-2906-ca59d760a400\"\n    },\n    xDAI: {\n      icon: \"02b53f6a-e3d4-479e-1cb4-21178987d100\"\n    },\n    EVMOS: {\n      icon: \"f926ff41-260d-4028-635e-91913fc28e00\"\n    },\n    METIS: {\n      icon: \"3897a66d-40b9-4833-162f-a2c90531c900\"\n    },\n    IOTX: {\n      icon: \"34e68754-e536-40da-c153-6ef2e7188a00\"\n    }\n  },\n  R = {\n    externalWallets() {\n      let t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().getConnectors();\n      return t = t.filter(a => a.id !== \"injected\"), t;\n    },\n    manualWallets() {\n      var t, a;\n      const {\n          mobileWallets: o,\n          desktopWallets: r\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state,\n        e = (t = R.recentWallet()) == null ? void 0 : t.id,\n        i = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile() ? o : r,\n        l = i === null || i === void 0 ? void 0 : i.filter(d => e !== d.id);\n      return (a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile() ? l === null || l === void 0 ? void 0 : l.map(({\n        id: d,\n        name: v,\n        links: x\n      }) => ({\n        id: d,\n        name: v,\n        mobile: x,\n        links: x\n      })) : l === null || l === void 0 ? void 0 : l.map(({\n        id: d,\n        name: v,\n        links: x\n      }) => ({\n        id: d,\n        name: v,\n        desktop: x,\n        links: x\n      }))) != null ? a : [];\n    },\n    installedInjectedWallets() {\n      if (!_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().isInjectedProviderInstalled()) return [];\n      const {\n          namespace: t\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client(),\n        {\n          injectedWallets: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state;\n      let o = a.filter(({\n        injected: r\n      }) => Boolean(r.some(e => _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().safeCheckInjectedProvider(e.injected_id) && e.namespace === t)));\n      return o.length > 1 && (o = o.filter(({\n        injected: r\n      }) => {\n        const e = r.map(({\n          injected_id: i\n        }) => i);\n        return Boolean(e.every(i => i !== \"isMetaMask\"));\n      })), o.length ? o : [{\n        name: \"Browser\",\n        id: \"browser\",\n        image_id: void 0\n      }];\n    },\n    injectedWallets() {\n      const {\n          explorerExcludedWalletIds: t,\n          explorerRecommendedWalletIds: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state,\n        o = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile();\n      if (t === \"ALL\" || o) return [];\n      const {\n          namespace: r\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client(),\n        {\n          injectedWallets: e\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state;\n      return e.filter(({\n        id: i,\n        injected: l\n      }) => {\n        const d = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isArray(t) ? t : [],\n          v = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isArray(a) ? a : [];\n        return Boolean(l.some(x => x.namespace === r && !d.includes(i) && !v.includes(i)));\n      });\n    },\n    recentWallet() {\n      return s.getRecentWallet();\n    },\n    recomendedWallets(t = !1) {\n      var a;\n      const o = R.installedInjectedWallets().map(({\n          id: l\n        }) => l),\n        r = t || (a = R.recentWallet()) == null ? void 0 : a.id,\n        e = [...o, r],\n        {\n          recomendedWallets: i\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state;\n      return i.filter(l => !e.includes(l.id));\n    }\n  },\n  s = {\n    MOBILE_BREAKPOINT: 600,\n    W3M_RECENT_WALLET_INFO: \"W3M_RECENT_WALLET_INFO\",\n    EXPLORER_WALLET_URL: \"https://explorer.walletconnect.com/?type=wallet\",\n    WAGMI_WALLET: \"wagmi.wallet\",\n    getShadowRootElement(t, a) {\n      const o = t.renderRoot.querySelector(a);\n      if (!o) throw new Error(`${a} not found`);\n      return o;\n    },\n    getWalletIcon({\n      id: t,\n      image_id: a\n    }) {\n      const {\n        walletImages: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state;\n      return o != null && o[t] ? o[t] : a ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].getWalletImageUrl(a) : \"\";\n    },\n    getWalletName(t, a = !1) {\n      return a && t.length > 8 ? `${t.substring(0, 8)}..` : t;\n    },\n    getChainIcon(t) {\n      var a;\n      const o = Ea[t],\n        {\n          projectId: r,\n          chainImages: e\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state;\n      return (a = e === null || e === void 0 ? void 0 : e[t]) != null ? a : r && o ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].getAssetImageUrl(o) : \"\";\n    },\n    getTokenIcon(t) {\n      var a, o;\n      const r = (a = Wa[t]) == null ? void 0 : a.icon,\n        {\n          projectId: e,\n          tokenImages: i\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state;\n      return (o = i === null || i === void 0 ? void 0 : i[t]) != null ? o : e && r ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].getAssetImageUrl(r) : \"\";\n    },\n    isMobileAnimation() {\n      return window.innerWidth <= s.MOBILE_BREAKPOINT;\n    },\n    async preloadImage(t) {\n      const a = new Promise((o, r) => {\n        const e = new Image();\n        e.onload = o, e.onerror = r, e.crossOrigin = \"anonymous\", e.src = t;\n      });\n      return Promise.race([a, _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].wait(3e3)]);\n    },\n    getErrorMessage(t) {\n      return t instanceof Error ? t.message : \"Unknown Error\";\n    },\n    debounce(t, a = 500) {\n      let o;\n      return (...r) => {\n        function e() {\n          t(...r);\n        }\n        o && clearTimeout(o), o = setTimeout(e, a);\n      };\n    },\n    handleMobileLinking(t) {\n      const {\n          pairingUri: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state,\n        {\n          mobile: o,\n          name: r\n        } = t,\n        e = o === null || o === void 0 ? void 0 : o.native,\n        i = o === null || o === void 0 ? void 0 : o.universal;\n      s.setRecentWallet(t);\n      function l(d) {\n        let v = \"\";\n        e ? v = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].formatUniversalUrl(e, d, r) : i && (v = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].formatNativeUrl(i, d, r)), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(v, \"_self\");\n      }\n      l(a);\n    },\n    handleAndroidLinking() {\n      const {\n        pairingUri: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state;\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].setWalletConnectAndroidDeepLink(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(t, \"_self\");\n    },\n    async handleUriCopy() {\n      try {\n        const {\n          pairingUri: t\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state;\n        await navigator.clipboard.writeText(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Link copied\", \"success\");\n      } catch {\n        _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Failed to copy\", \"error\");\n      }\n    },\n    async handleConnectorConnection(t, a) {\n      try {\n        const {\n          selectedChain: o\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state;\n        await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().connectConnector(t, o === null || o === void 0 ? void 0 : o.id), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].close();\n      } catch (o) {\n        console.error(o), a ? a() : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(s.getErrorMessage(o), \"error\");\n      }\n    },\n    getCustomImageUrls() {\n      const {\n          chainImages: t,\n          walletImages: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state,\n        o = Object.values(t !== null && t !== void 0 ? t : {}),\n        r = Object.values(a !== null && a !== void 0 ? a : {});\n      return Object.values([...o, ...r]);\n    },\n    truncate(t, a = 8) {\n      return t.length <= a ? t : `${t.substring(0, 4)}...${t.substring(t.length - 4)}`;\n    },\n    generateAvatarColors(t) {\n      var a;\n      const o = (a = t.match(/.{1,7}/g)) == null ? void 0 : a.splice(0, 5),\n        r = [];\n      o === null || o === void 0 ? void 0 : o.forEach(i => {\n        let l = 0;\n        for (let v = 0; v < i.length; v += 1) l = i.charCodeAt(v) + ((l << 5) - l), l = l & l;\n        const d = [0, 0, 0];\n        for (let v = 0; v < 3; v += 1) {\n          const x = l >> v * 8 & 255;\n          d[v] = x;\n        }\n        r.push(`rgb(${d[0]}, ${d[1]}, ${d[2]})`);\n      });\n      const e = document.querySelector(\":root\");\n      if (e) {\n        const i = {\n          \"--w3m-color-av-1\": r[0],\n          \"--w3m-color-av-2\": r[1],\n          \"--w3m-color-av-3\": r[2],\n          \"--w3m-color-av-4\": r[3],\n          \"--w3m-color-av-5\": r[4]\n        };\n        Object.entries(i).forEach(([l, d]) => e.style.setProperty(l, d));\n      }\n    },\n    setRecentWallet(t) {\n      try {\n        localStorage.setItem(s.W3M_RECENT_WALLET_INFO, JSON.stringify(t));\n      } catch {\n        console.info(\"Unable to set recent wallet\");\n      }\n    },\n    getRecentWallet() {\n      try {\n        const t = localStorage.getItem(s.W3M_RECENT_WALLET_INFO);\n        return t ? JSON.parse(t) : void 0;\n      } catch {\n        console.info(\"Unable to get recent wallet\");\n      }\n    },\n    caseSafeIncludes(t, a) {\n      return t.toUpperCase().includes(a.toUpperCase());\n    },\n    openWalletExplorerUrl() {\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(s.EXPLORER_WALLET_URL, \"_blank\");\n    },\n    getCachedRouterWalletPlatforms() {\n      const {\n          id: t,\n          desktop: a,\n          mobile: o,\n          injected: r\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n        e = R.installedInjectedWallets(),\n        i = Boolean(r === null || r === void 0 ? void 0 : r.length),\n        l = e.some(H => H.id === t),\n        d = Boolean(a === null || a === void 0 ? void 0 : a.native),\n        v = Boolean(a === null || a === void 0 ? void 0 : a.universal),\n        x = Boolean(o === null || o === void 0 ? void 0 : o.native) || Boolean(o === null || o === void 0 ? void 0 : o.universal);\n      return {\n        isInjectedInstalled: l,\n        isInjected: i,\n        isDesktop: d,\n        isMobile: x,\n        isWeb: v\n      };\n    },\n    goToConnectingView(t) {\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].setData({\n        Wallet: t\n      });\n      const a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile(),\n        {\n          isDesktop: o,\n          isWeb: r,\n          isMobile: e,\n          isInjectedInstalled: i\n        } = s.getCachedRouterWalletPlatforms();\n      a ? i ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"InjectedConnecting\") : e ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"MobileConnecting\") : r ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"WebConnecting\") : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"InstallWallet\") : i ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"InjectedConnecting\") : o ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"DesktopConnecting\") : r ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"WebConnecting\") : e ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"MobileQrcodeConnecting\") : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"InstallWallet\");\n    },\n    getWagmiWalletType() {\n      return localStorage.getItem(s.WAGMI_WALLET);\n    }\n  },\n  Aa = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-router{overflow:hidden;will-change:transform}.w3m-content{display:flex;flex-direction:column}`;\nvar ja = Object.defineProperty,\n  Ma = Object.getOwnPropertyDescriptor,\n  ee = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ma(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ja(a, o, e), e;\n  };\nlet yt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.view = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].state.view, this.prevView = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].state.view, this.unsubscribe = void 0, this.oldHeight = \"0px\", this.resizeObserver = void 0, this.unsubscribe = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].subscribe(t => {\n      this.view !== t.view && this.onChangeRoute();\n    });\n  }\n  firstUpdated() {\n    this.resizeObserver = new ResizeObserver(([t]) => {\n      const a = `${t.contentRect.height}px`;\n      this.oldHeight !== \"0px\" && Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.routerEl, {\n        height: [this.oldHeight, a]\n      }, {\n        duration: .2\n      }), this.oldHeight = a;\n    }), this.resizeObserver.observe(this.contentEl);\n  }\n  disconnectedCallback() {\n    var t, a;\n    (t = this.unsubscribe) == null || t.call(this), (a = this.resizeObserver) == null || a.disconnect();\n  }\n  get routerEl() {\n    return s.getShadowRootElement(this, \".w3m-router\");\n  }\n  get contentEl() {\n    return s.getShadowRootElement(this, \".w3m-content\");\n  }\n  viewTemplate() {\n    switch (this.view) {\n      case \"ConnectWallet\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-connect-wallet-view></w3m-connect-wallet-view>`;\n      case \"SelectNetwork\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-select-network-view></w3m-select-network-view>`;\n      case \"InjectedConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-injected-connecting-view></w3m-injected-connecting-view>`;\n      case \"DesktopConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-desktop-connecting-view></w3m-desktop-connecting-view>`;\n      case \"MobileConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-mobile-connecting-view></w3m-mobile-connecting-view>`;\n      case \"WebConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-web-connecting-view></w3m-web-connecting-view>`;\n      case \"MobileQrcodeConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-mobile-qr-connecting-view></w3m-mobile-qr-connecting-view>`;\n      case \"GetWallet\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-get-wallet-view></w3m-get-wallet-view>`;\n      case \"WalletExplorer\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-explorer-view></w3m-wallet-explorer-view>`;\n      case \"Qrcode\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-qrcode-view></w3m-qrcode-view>`;\n      case \"Help\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-help-view></w3m-help-view>`;\n      case \"Account\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-account-view></w3m-account-view>`;\n      case \"SwitchNetwork\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-switch-network-view></w3m-switch-network-view>`;\n      case \"InstallWallet\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-install-wallet-view></w3m-install-wallet-view>`;\n      default:\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div>Not Found</div>`;\n    }\n  }\n  async onChangeRoute() {\n    await Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.routerEl, {\n      opacity: [1, 0],\n      scale: [1, 1.02]\n    }, {\n      duration: .15,\n      delay: .1\n    }).finished, this.view = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].state.view, Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.routerEl, {\n      opacity: [0, 1],\n      scale: [.99, 1]\n    }, {\n      duration: .37,\n      delay: .05\n    });\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"w3m-router\"><div class=\"w3m-content\">${this.viewTemplate()}</div></div>`;\n  }\n};\nyt.styles = [p.globalCss, Aa], ee([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], yt.prototype, \"view\", 2), ee([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], yt.prototype, \"prevView\", 2), yt = ee([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal-router\")], yt);\nconst Pa = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{height:36px;width:max-content;display:flex;justify-content:center;align-items:center;padding:9px 15px 11px;position:absolute;top:12px;box-shadow:0 6px 14px -6px rgba(10,16,31,.3),0 10px 32px -4px rgba(10,16,31,.15);z-index:2;left:50%;transform:translateX(-50%);pointer-events:none;backdrop-filter:blur(20px) saturate(1.8);-webkit-backdrop-filter:blur(20px) saturate(1.8);border-radius:var(--w3m-notification-border-radius);border:1px solid var(--w3m-color-overlay);background-color:var(--w3m-color-overlay)}svg{margin-right:5px}@-moz-document url-prefix(){div{background-color:var(--w3m-color-bg-3)}}.w3m-success path{fill:var(--w3m-accent-color)}.w3m-error path{fill:var(--w3m-error-color)}`;\nvar La = Object.defineProperty,\n  Ta = Object.getOwnPropertyDescriptor,\n  We = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ta(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && La(a, o, e), e;\n  };\nlet _t = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.open = !1, this.unsubscribe = void 0, this.timeout = void 0, this.unsubscribe = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].subscribe(t => {\n      t.open ? (this.open = !0, this.timeout = setTimeout(() => _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].closeToast(), 2200)) : (this.open = !1, clearTimeout(this.timeout));\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribe) == null || t.call(this), clearTimeout(this.timeout), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].closeToast();\n  }\n  render() {\n    const {\n        message: t,\n        variant: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].state,\n      o = {\n        \"w3m-success\": a === \"success\",\n        \"w3m-error\": a === \"error\"\n      };\n    return this.open ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div data-testid=\"component-modal-toast\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(o)}\">${a === \"success\" ? w.CHECKMARK_ICON : null} ${a === \"error\" ? w.CROSS_ICON : null}<w3m-text variant=\"small-regular\">${t}</w3m-text></div>` : null;\n  }\n};\n_t.styles = [p.globalCss, Pa], We([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], _t.prototype, \"open\", 2), _t = We([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal-toast\")], _t);\nconst _a = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{padding:5px;border-radius:var(--w3m-button-hover-highlight-border-radius);display:flex;flex-direction:column;align-items:center;justify-content:center;width:80px;height:90px;position:relative}w3m-network-image{width:54px;height:59px}w3m-text{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center;margin-top:5px}button:active{background-color:var(--w3m-color-overlay)}.w3m-unsupported{opacity:.3}@media(hover:hover){button:hover{background-color:var(--w3m-color-overlay)}}`;\nvar Na = Object.defineProperty,\n  Ra = Object.getOwnPropertyDescriptor,\n  Ct = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ra(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Na(a, o, e), e;\n  };\nlet X = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.onClick = () => null, this.name = \"\", this.chainId = \"\", this.unsupported = !1;\n  }\n  render() {\n    const t = {\n      \"w3m-unsupported\": this.unsupported\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button data-testid=\"component-network-button\" @click=\"${this.onClick}\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\"><w3m-network-image chainId=\"${this.chainId}\"></w3m-network-image><w3m-text variant=\"xsmall-regular\">${this.name}</w3m-text></button>`;\n  }\n};\nX.styles = [p.globalCss, _a], Ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], X.prototype, \"onClick\", 2), Ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], X.prototype, \"name\", 2), Ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], X.prototype, \"chainId\", 2), Ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], X.prototype, \"unsupported\", 2), X = Ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-network-button\")], X);\nconst Da = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes loading{to{stroke-dashoffset:0}}:host{width:inherit;height:inherit;position:relative}path{stroke:var(--w3m-color-overlay)}svg{width:100%;height:100%;margin:0}#network-placeholder-fill{fill:var(--w3m-color-bg-3)}#network-placeholder-dash{stroke:var(--w3m-color-overlay)}image{clip-path:path('M17.033 4.964c3.852-2.262 5.778-3.393 7.84-3.77a11.807 11.807 0 0 1 4.254 0c2.062.377 3.988 1.508 7.84 3.77l6.066 3.562c3.852 2.263 5.777 3.394 7.13 5.022a12.268 12.268 0 0 1 2.127 3.747c.71 2.006.71 4.268.71 8.793v7.124c0 4.525 0 6.787-.71 8.793a12.268 12.268 0 0 1-2.126 3.747c-1.354 1.628-3.28 2.76-7.131 5.022l-6.066 3.562c-3.852 2.262-5.778 3.393-7.84 3.771a11.814 11.814 0 0 1-4.254 0c-2.062-.378-3.988-1.509-7.84-3.77l-6.066-3.563c-3.852-2.263-5.778-3.394-7.13-5.022a12.268 12.268 0 0 1-2.127-3.747C1 40 1 37.737 1 33.212v-7.124c0-4.525 0-6.787.71-8.793a12.268 12.268 0 0 1 2.127-3.747c1.352-1.628 3.278-2.76 7.13-5.022l6.066-3.562Z')}`;\nvar Za = Object.defineProperty,\n  Ha = Object.getOwnPropertyDescriptor,\n  Ae = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ha(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Za(a, o, e), e;\n  };\nlet Nt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.chainId = \"\";\n  }\n  render() {\n    const t = s.getChainIcon(this.chainId);\n    return t ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<svg width=\"54\" height=\"59\" viewBox=\"0 0 54 59\" fill=\"none\" data-testid=\"component-network-logo-svg\"><image href=\"${t}\"/><image href=\"${t}\" width=\"54\" height=\"59\"/><path d=\"M17.22 5.295c3.877-2.277 5.737-3.363 7.72-3.726a11.44 11.44 0 0 1 4.12 0c1.983.363 3.844 1.45 7.72 3.726l6.065 3.562c3.876 2.276 5.731 3.372 7.032 4.938a11.896 11.896 0 0 1 2.06 3.63c.683 1.928.688 4.11.688 8.663v7.124c0 4.553-.005 6.735-.688 8.664a11.896 11.896 0 0 1-2.06 3.63c-1.3 1.565-3.156 2.66-7.032 4.937l-6.065 3.563c-3.877 2.276-5.737 3.362-7.72 3.725a11.46 11.46 0 0 1-4.12 0c-1.983-.363-3.844-1.449-7.72-3.726l-6.065-3.562c-3.876-2.276-5.731-3.372-7.032-4.938a11.885 11.885 0 0 1-2.06-3.63c-.682-1.928-.688-4.11-.688-8.663v-7.124c0-4.553.006-6.735.688-8.664a11.885 11.885 0 0 1 2.06-3.63c1.3-1.565 3.156-2.66 7.032-4.937l6.065-3.562Z\"/></svg>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${w.NETWORK_PLACEHOLDER}`;\n  }\n};\nNt.styles = [p.globalCss, Da], Ae([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Nt.prototype, \"chainId\", 2), Nt = Ae([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-network-image\")], Nt);\nconst Ba = .1,\n  je = 2.5,\n  U = 7;\nfunction ae(t, a, o) {\n  return t === a ? !1 : (t - a < 0 ? a - t : t - a) <= o + Ba;\n}\nfunction Sa(t, a) {\n  const o = Array.prototype.slice.call(qrcode__WEBPACK_IMPORTED_MODULE_6___default.a.create(t, {\n      errorCorrectionLevel: a\n    }).modules.data, 0),\n    r = Math.sqrt(o.length);\n  return o.reduce((e, i, l) => (l % r === 0 ? e.push([i]) : e[e.length - 1].push(i)) && e, []);\n}\nconst Ua = {\n    generate(t, a, o) {\n      const r = \"#141414\",\n        e = \"#ffffff\",\n        i = [],\n        l = Sa(t, \"Q\"),\n        d = a / l.length,\n        v = [{\n          x: 0,\n          y: 0\n        }, {\n          x: 1,\n          y: 0\n        }, {\n          x: 0,\n          y: 1\n        }];\n      v.forEach(({\n        x: E,\n        y: C\n      }) => {\n        const T = (l.length - U) * d * E,\n          k = (l.length - U) * d * C,\n          N = .45;\n        for (let B = 0; B < v.length; B += 1) {\n          const nt = d * (U - B * 2);\n          i.push(lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<rect fill=\"${B % 2 === 0 ? r : e}\" height=\"${nt}\" rx=\"${nt * N}\" ry=\"${nt * N}\" width=\"${nt}\" x=\"${T + d * B}\" y=\"${k + d * B}\">`);\n        }\n      });\n      const x = Math.floor((o + 25) / d),\n        H = l.length / 2 - x / 2,\n        Z = l.length / 2 + x / 2 - 1,\n        _ = [];\n      l.forEach((E, C) => {\n        E.forEach((T, k) => {\n          if (l[C][k] && !(C < U && k < U || C > l.length - (U + 1) && k < U || C < U && k > l.length - (U + 1)) && !(C > H && C < Z && k > H && k < Z)) {\n            const N = C * d + d / 2,\n              B = k * d + d / 2;\n            _.push([N, B]);\n          }\n        });\n      });\n      const vt = {};\n      return _.forEach(([E, C]) => {\n        vt[E] ? vt[E].push(C) : vt[E] = [C];\n      }), Object.entries(vt).map(([E, C]) => {\n        const T = C.filter(k => C.every(N => !ae(k, N, d)));\n        return [Number(E), T];\n      }).forEach(([E, C]) => {\n        C.forEach(T => {\n          i.push(lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<circle cx=\"${E}\" cy=\"${T}\" fill=\"${r}\" r=\"${d / je}\">`);\n        });\n      }), Object.entries(vt).filter(([E, C]) => C.length > 1).map(([E, C]) => {\n        const T = C.filter(k => C.some(N => ae(k, N, d)));\n        return [Number(E), T];\n      }).map(([E, C]) => {\n        C.sort((k, N) => k < N ? -1 : 1);\n        const T = [];\n        for (const k of C) {\n          const N = T.find(B => B.some(nt => ae(k, nt, d)));\n          N ? N.push(k) : T.push([k]);\n        }\n        return [E, T.map(k => [k[0], k[k.length - 1]])];\n      }).forEach(([E, C]) => {\n        C.forEach(([T, k]) => {\n          i.push(lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<line x1=\"${E}\" x2=\"${E}\" y1=\"${T}\" y2=\"${k}\" stroke=\"${r}\" stroke-width=\"${d / (je / 2)}\" stroke-linecap=\"round\">`);\n        });\n      }), i;\n    }\n  },\n  Va = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}div{position:relative;user-select:none;display:block;overflow:hidden;aspect-ratio:1/1;animation:fadeIn ease .2s}.w3m-dark{background-color:#fff;border-radius:var(--w3m-container-border-radius);padding:18px;box-shadow:0 2px 5px #000}svg:first-child,w3m-wallet-image{position:absolute;top:50%;left:50%;transform:translateY(-50%) translateX(-50%)}w3m-wallet-image{transform:translateY(-50%) translateX(-50%)}w3m-wallet-image{width:25%;height:25%;border-radius:var(--w3m-wallet-icon-border-radius)}svg:first-child{transform:translateY(-50%) translateX(-50%) scale(.9)}svg:first-child path:first-child{fill:var(--w3m-accent-color)}svg:first-child path:last-child{stroke:var(--w3m-color-overlay)}`;\nvar za = Object.defineProperty,\n  Ga = Object.getOwnPropertyDescriptor,\n  ct = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ga(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && za(a, o, e), e;\n  };\nlet F = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.uri = \"\", this.size = 0, this.imageId = void 0, this.walletId = void 0, this.imageUrl = void 0;\n  }\n  svgTemplate() {\n    const t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state.themeMode === \"light\" ? this.size : this.size - 36;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<svg height=\"${t}\" width=\"${t}\" data-testid=\"component-qrcode-svg\">${Ua.generate(this.uri, t, t / 4)}</svg>`;\n  }\n  render() {\n    const t = {\n      \"w3m-dark\": _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state.themeMode === \"dark\"\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div style=\"${`width: ${this.size}px`}\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\">${this.walletId || this.imageUrl ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-image walletId=\"${this.walletId}\" imageId=\"${this.imageId}\" imageUrl=\"${this.imageUrl}\"></w3m-wallet-image>` : w.WALLET_CONNECT_ICON_COLORED} ${this.svgTemplate()}</div>`;\n  }\n};\nF.styles = [p.globalCss, Va], ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], F.prototype, \"uri\", 2), ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Number\n})], F.prototype, \"size\", 2), ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], F.prototype, \"imageId\", 2), ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], F.prototype, \"walletId\", 2), ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], F.prototype, \"imageUrl\", 2), F = ct([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-qrcode\")], F);\nconst Fa = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{position:relative;height:28px;width:80%}input{width:100%;height:100%;line-height:28px!important;border-radius:var(--w3m-input-border-radius);font-style:normal;font-family:-apple-system,system-ui,BlinkMacSystemFont,'Segoe UI',Roboto,Ubuntu,'Helvetica Neue',sans-serif;font-feature-settings:'case' on;font-weight:500;font-size:16px;letter-spacing:-.03em;padding:0 10px 0 34px;transition:.2s all ease;color:var(--w3m-color-fg-1);background-color:var(--w3m-color-bg-3);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);caret-color:var(--w3m-accent-color)}input::placeholder{color:var(--w3m-color-fg-2)}svg{left:10px;top:4px;pointer-events:none;position:absolute;width:20px;height:20px}input:focus-within{box-shadow:inset 0 0 0 1px var(--w3m-accent-color)}path{fill:var(--w3m-color-fg-2)}`;\nvar qa = Object.defineProperty,\n  Ka = Object.getOwnPropertyDescriptor,\n  Me = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ka(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && qa(a, o, e), e;\n  };\nlet Rt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.onChange = () => null;\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<input type=\"text\" @input=\"${this.onChange}\" placeholder=\"Search wallets\" data-testid=\"component-search-input\"> ${w.SEARCH_ICON}`;\n  }\n};\nRt.styles = [p.globalCss, Fa], Me([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Rt.prototype, \"onChange\", 2), Rt = Me([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-search-input\")], Rt);\nconst Ya = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes rotate{100%{transform:rotate(360deg)}}@keyframes dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}100%{stroke-dasharray:90,150;stroke-dashoffset:-124}}:host{width:100%;height:100%;display:flex;justify-content:center;align-items:center}svg{animation:rotate 2s linear infinite;display:flex;justify-content:center;align-items:center}svg circle{stroke-linecap:round;animation:dash 1.5s ease infinite}.accent{stroke:var(--w3m-accent-color)}.fill{stroke:var(--w3m-accent-fill-color)}`;\nvar Qa = Object.defineProperty,\n  Xa = Object.getOwnPropertyDescriptor,\n  oe = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Xa(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Qa(a, o, e), e;\n  };\nlet $t = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.color = \"accent\", this.size = 24;\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<svg viewBox=\"0 0 50 50\" width=\"${this.size}\" height=\"${this.size}\" data-testid=\"component-spinner-svg\"><circle class=\"${this.color}\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"4\" stroke=\"#fff\"/></svg>`;\n  }\n};\n$t.styles = [p.globalCss, Ya], oe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], $t.prototype, \"color\", 2), oe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Number\n})], $t.prototype, \"size\", 2), $t = oe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-spinner\")], $t);\nconst Ja = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`span{font-style:normal;font-family:var(--w3m-font-family);font-feature-settings:var(--w3m-font-feature-settings)}.w3m-xsmall-bold{font-family:var(--w3m-text-xsmall-bold-font-family);font-weight:var(--w3m-text-xsmall-bold-weight);font-size:var(--w3m-text-xsmall-bold-size);line-height:var(--w3m-text-xsmall-bold-line-height);letter-spacing:var(--w3m-text-xsmall-bold-letter-spacing);text-transform:var(--w3m-text-xsmall-bold-text-transform)}.w3m-xsmall-regular{font-family:var(--w3m-text-xsmall-regular-font-family);font-weight:var(--w3m-text-xsmall-regular-weight);font-size:var(--w3m-text-xsmall-regular-size);line-height:var(--w3m-text-xsmall-regular-line-height);letter-spacing:var(--w3m-text-xsmall-regular-letter-spacing);text-transform:var(--w3m-text-xsmall-regular-text-transform)}.w3m-small-thin{font-family:var(--w3m-text-small-thin-font-family);font-weight:var(--w3m-text-small-thin-weight);font-size:var(--w3m-text-small-thin-size);line-height:var(--w3m-text-small-thin-line-height);letter-spacing:var(--w3m-text-small-thin-letter-spacing);text-transform:var(--w3m-text-small-thin-text-transform)}.w3m-small-regular{font-family:var(--w3m-text-small-regular-font-family);font-weight:var(--w3m-text-small-regular-weight);font-size:var(--w3m-text-small-regular-size);line-height:var(--w3m-text-small-regular-line-height);letter-spacing:var(--w3m-text-small-regular-letter-spacing);text-transform:var(--w3m-text-small-regular-text-transform)}.w3m-medium-regular{font-family:var(--w3m-text-medium-regular-font-family);font-weight:var(--w3m-text-medium-regular-weight);font-size:var(--w3m-text-medium-regular-size);line-height:var(--w3m-text-medium-regular-line-height);letter-spacing:var(--w3m-text-medium-regular-letter-spacing);text-transform:var(--w3m-text-medium-regular-text-transform)}.w3m-big-bold{font-family:var(--w3m-text-big-bold-font-family);font-weight:var(--w3m-text-big-bold-weight);font-size:var(--w3m-text-big-bold-size);line-height:var(--w3m-text-big-bold-line-height);letter-spacing:var(--w3m-text-big-bold-letter-spacing);text-transform:var(--w3m-text-big-bold-text-transform)}:host(*){color:var(--w3m-color-fg-1)}.w3m-color-primary{color:var(--w3m-color-fg-1)}.w3m-color-secondary{color:var(--w3m-color-fg-2)}.w3m-color-tertiary{color:var(--w3m-color-fg-3)}.w3m-color-inverse{color:var(--w3m-accent-fill-color)}.w3m-color-accnt{color:var(--w3m-accent-color)}.w3m-color-error{color:var(--w3m-error-color)}`;\nvar to = Object.defineProperty,\n  eo = Object.getOwnPropertyDescriptor,\n  re = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? eo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && to(a, o, e), e;\n  };\nlet kt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.variant = \"medium-regular\", this.color = \"primary\";\n  }\n  render() {\n    const t = {\n      \"w3m-big-bold\": this.variant === \"big-bold\",\n      \"w3m-medium-regular\": this.variant === \"medium-regular\",\n      \"w3m-small-regular\": this.variant === \"small-regular\",\n      \"w3m-small-thin\": this.variant === \"small-thin\",\n      \"w3m-xsmall-regular\": this.variant === \"xsmall-regular\",\n      \"w3m-xsmall-bold\": this.variant === \"xsmall-bold\",\n      \"w3m-color-primary\": this.color === \"primary\",\n      \"w3m-color-secondary\": this.color === \"secondary\",\n      \"w3m-color-tertiary\": this.color === \"tertiary\",\n      \"w3m-color-inverse\": this.color === \"inverse\",\n      \"w3m-color-accnt\": this.color === \"accent\",\n      \"w3m-color-error\": this.color === \"error\"\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<span data-testid=\"component-text\"><slot class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\"></slot></span>`;\n  }\n};\nkt.styles = [p.globalCss, Ja], re([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], kt.prototype, \"variant\", 2), re([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], kt.prototype, \"color\", 2), kt = re([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-text\")], kt);\nconst ao = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{overflow:hidden;position:relative;border-radius:50%}div::after{content:'';position:absolute;top:0;bottom:0;left:0;right:0;border-radius:50%;border:1px solid var(--w3m-color-overlay)}div img{width:100%;height:100%;object-fit:cover;object-position:center}svg{width:100%;height:100%}#token-placeholder-fill{fill:var(--w3m-color-bg-3)}#token-placeholder-dash{stroke:var(--w3m-color-overlay)}`;\nvar oo = Object.defineProperty,\n  ro = Object.getOwnPropertyDescriptor,\n  Pe = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ro(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && oo(a, o, e), e;\n  };\nlet Dt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.symbol = void 0;\n  }\n  render() {\n    var t;\n    const a = s.getTokenIcon((t = this.symbol) != null ? t : \"\");\n    return a ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><img crossorigin=\"anonymous\" src=\"${a}\" alt=\"${this.id}\" data-testid=\"component-token-image\"></div>` : w.TOKEN_PLACEHOLDER;\n  }\n};\nDt.styles = [p.globalCss, ao], Pe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Dt.prototype, \"symbol\", 2), Dt = Pe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-token-image\")], Dt);\nconst io = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{width:100%;height:100%;border-radius:var(--w3m-button-hover-highlight-border-radius);display:flex;align-items:flex-start}button:active{background-color:var(--w3m-color-overlay)}@media(hover:hover){button:hover{background-color:var(--w3m-color-overlay)}}button>div{width:80px;padding:5px 0;display:flex;flex-direction:column;align-items:center}w3m-text{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center}w3m-wallet-image{height:60px;width:60px;transition:all .2s ease;border-radius:var(--w3m-wallet-icon-border-radius);margin-bottom:5px}.w3m-sublabel{margin-top:2px}`;\nvar lo = Object.defineProperty,\n  no = Object.getOwnPropertyDescriptor,\n  q = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? no(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && lo(a, o, e), e;\n  };\nlet S = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.onClick = () => null, this.name = \"\", this.walletId = \"\", this.label = void 0, this.imageId = void 0, this.installed = !1, this.recent = !1;\n  }\n  sublabelTemplate() {\n    return this.recent ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-text class=\"w3m-sublabel\" variant=\"xsmall-bold\" color=\"tertiary\">RECENT</w3m-text>` : this.installed ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-text class=\"w3m-sublabel\" variant=\"xsmall-bold\" color=\"tertiary\">INSTALLED</w3m-text>` : null;\n  }\n  handleClick() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].click({\n      name: \"WALLET_BUTTON\",\n      walletId: this.walletId\n    }), this.onClick();\n  }\n  render() {\n    var t;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button @click=\"${this.handleClick.bind(this)}\" data-testid=\"component-wallet-button-${this.name.toLowerCase()}\"><div><w3m-wallet-image walletId=\"${this.walletId}\" imageId=\"${this.imageId}\"></w3m-wallet-image><w3m-text variant=\"xsmall-regular\">${(t = this.label) != null ? t : s.getWalletName(this.name, !0)}</w3m-text>${this.sublabelTemplate()}</div></button>`;\n  }\n};\nS.styles = [p.globalCss, io], q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"onClick\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"name\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"walletId\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"label\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"imageId\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"installed\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"recent\", 2), S = q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-wallet-button\")], S);\nconst so = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{display:block}div{overflow:hidden;position:relative;border-radius:inherit;width:100%;height:100%;background-color:var(--w3m-color-overlay)}svg{position:relative;width:100%;height:100%}div::after{content:'';position:absolute;top:0;bottom:0;left:0;right:0;border-radius:inherit;border:1px solid var(--w3m-color-overlay)}div img{width:100%;height:100%;object-fit:cover;object-position:center}#wallet-placeholder-fill{fill:var(--w3m-color-bg-3)}#wallet-placeholder-dash{stroke:var(--w3m-color-overlay)}`;\nvar co = Object.defineProperty,\n  mo = Object.getOwnPropertyDescriptor,\n  Zt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? mo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && co(a, o, e), e;\n  };\nlet dt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.walletId = \"\", this.imageId = void 0, this.imageUrl = void 0;\n  }\n  render() {\n    var t;\n    const a = (t = this.imageUrl) != null && t.length ? this.imageUrl : s.getWalletIcon({\n      id: this.walletId,\n      image_id: this.imageId\n    });\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${a.length ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><img crossorigin=\"anonymous\" src=\"${a}\" alt=\"${this.id}\"></div>` : w.WALLET_PLACEHOLDER}`;\n  }\n};\ndt.styles = [p.globalCss, so], Zt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], dt.prototype, \"walletId\", 2), Zt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], dt.prototype, \"imageId\", 2), Zt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], dt.prototype, \"imageUrl\", 2), dt = Zt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-wallet-image\")], dt);\nvar ho = Object.defineProperty,\n  wo = Object.getOwnPropertyDescriptor,\n  po = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? wo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ho(a, o, e), e;\n  };\nlet Le = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.unwatchAccount = void 0, _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].getAccount(), this.fetchProfile(), this.fetchBalance(), this.unwatchAccount = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().watchAccount(t => {\n      const {\n        address: a,\n        isConnected: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state;\n      t.isConnected && t.address !== a && (this.fetchProfile(t.address), this.fetchBalance(t.address), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].setAddress(t.address)), t.isConnected || _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].resetAccount(), o !== t.isConnected && _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].close(), !o && t.isConnected ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].track({\n        name: \"ACCOUNT_CONNECTED\"\n      }) : o && !t.isConnected && _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].track({\n        name: \"ACCOUNT_DISCONNECTED\"\n      }), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].setIsConnected(t.isConnected);\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unwatchAccount) == null || t.call(this);\n  }\n  async fetchProfile(t) {\n    var a;\n    const o = (a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state.chains) == null ? void 0 : a.find(r => r.id === 1);\n    if (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state.enableAccountView && o) try {\n      await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].fetchProfile(s.preloadImage, t);\n    } catch (r) {\n      console.error(r), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(s.getErrorMessage(r), \"error\");\n    }\n  }\n  async fetchBalance(t) {\n    if (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state.enableAccountView) try {\n      await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].fetchBalance(t);\n    } catch (a) {\n      console.error(a), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(s.getErrorMessage(a), \"error\");\n    }\n  }\n};\nLe = po([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-account-context\")], Le);\nvar go = Object.defineProperty,\n  uo = Object.getOwnPropertyDescriptor,\n  Te = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? uo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && go(a, o, e), e;\n  };\nlet ie = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.preload = !0, this.preloadData();\n  }\n  async loadImages(t) {\n    try {\n      t != null && t.length && (await Promise.all(t.map(async a => s.preloadImage(a))));\n    } catch {\n      console.info(\"Unsuccessful attempt at preloading some images\", t);\n    }\n  }\n  async preloadListings() {\n    var t;\n    if (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state.enableExplorer) {\n      const {\n        chains: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state;\n      await Promise.all([_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].getRecomendedWallets(), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].getInjectedWallets()]), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].setIsDataLoaded(!0);\n      const {\n          recomendedWallets: o\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state,\n        r = R.installedInjectedWallets(),\n        e = (t = a === null || a === void 0 ? void 0 : a.map(d => s.getChainIcon(d.id))) != null ? t : [],\n        i = o.map(d => s.getWalletIcon(d)),\n        l = r.map(d => s.getWalletIcon(d));\n      await this.loadImages([...e, ...i, ...l]);\n    } else _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].setIsDataLoaded(!0);\n  }\n  async preloadCustomImages() {\n    const t = s.getCustomImageUrls();\n    await this.loadImages(t);\n  }\n  async preloadData() {\n    try {\n      this.preload && (this.preload = !1, await Promise.all([this.preloadListings(), this.preloadCustomImages()]));\n    } catch (t) {\n      console.error(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Failed preloading\", \"error\");\n    }\n  }\n};\nTe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ie.prototype, \"preload\", 2), ie = Te([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-explorer-context\")], ie);\nvar vo = Object.defineProperty,\n  bo = Object.getOwnPropertyDescriptor,\n  _e = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? bo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && vo(a, o, e), e;\n  };\nlet le = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.activeChainId = void 0, this.unwatchNetwork = void 0;\n    const t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].getSelectedChain();\n    this.activeChainId = t === null || t === void 0 ? void 0 : t.id, this.unwatchNetwork = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().watchNetwork(a => {\n      const o = a.chain;\n      o && this.activeChainId !== o.id && (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].setSelectedChain(o), this.activeChainId = o.id, _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].resetBalance(), this.fetchBalance());\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unwatchNetwork) == null || t.call(this);\n  }\n  async fetchBalance() {\n    if (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state.enableAccountView) try {\n      await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].fetchBalance();\n    } catch (t) {\n      console.error(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(s.getErrorMessage(t), \"error\");\n    }\n  }\n};\n_e([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], le.prototype, \"activeChainId\", 2), le = _e([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-network-context\")], le);\nvar fo = Object.defineProperty,\n  xo = Object.getOwnPropertyDescriptor,\n  yo = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? xo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && fo(a, o, e), e;\n  };\nlet Ne = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.unsubscribeTheme = void 0, p.setTheme(), this.unsubscribeTheme = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].subscribe(p.setTheme), this.preloadThemeImages();\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeTheme) == null || t.call(this);\n  }\n  async preloadThemeImages() {\n    try {\n      const {\n          themeVariables: t\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state,\n        a = [t === null || t === void 0 ? void 0 : t[\"--w3m-background-image-url\"], t === null || t === void 0 ? void 0 : t[\"--w3m-logo-image-url\"]].filter(Boolean);\n      a.length && (await Promise.all(a.map(async o => s.preloadImage(o))));\n    } catch {\n      console.info(\"Unsuccessful attempt at preloading some images\");\n    }\n  }\n};\nNe = yo([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-theme-context\")], Ne);\nvar Co = Object.defineProperty,\n  $o = Object.getOwnPropertyDescriptor,\n  ko = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? $o(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Co(a, o, e), e;\n  };\nconst Oo = 24e4,\n  Io = 1e3;\nvar Re;\nlet De = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.unwatchOptions = void 0, this.unwatchAccount = void 0, this.unwatchWcConnection = void 0, this.timeout = void 0, this.isGenerated = !1, this.selectedChainId = (Re = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state.selectedChain) == null ? void 0 : Re.id, this.isAccountConnected = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.isConnected, this.lastRetry = Date.now(), this.unwatchOptions = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].subscribe(t => {\n      var a, o;\n      ((a = t.selectedChain) == null ? void 0 : a.id) !== this.selectedChainId && (this.selectedChainId = (o = t.selectedChain) == null ? void 0 : o.id, this.connectAndWait());\n    }), this.unwatchAccount = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].subscribe(t => {\n      (this.isAccountConnected !== t.isConnected || !this.isGenerated) && (this.isAccountConnected = t.isConnected, this.connectAndWait());\n    }), this.unwatchWcConnection = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].subscribe(t => {\n      t.pairingEnabled && !this.isGenerated && this.connectAndWait();\n    });\n  }\n  disconnectedCallback() {\n    var t, a, o;\n    (t = this.unwatchOptions) == null || t.call(this), (a = this.unwatchAccount) == null || a.call(this), (o = this.unwatchWcConnection) == null || o.call(this);\n  }\n  async connectAndWait() {\n    const {\n      pairingEnabled: t\n    } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state;\n    if (clearTimeout(this.timeout), !this.isAccountConnected && t) {\n      this.isGenerated = !0, this.timeout = setTimeout(this.connectAndWait.bind(this), Oo);\n      try {\n        const {\n          selectedChain: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state;\n        await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().connectWalletConnect(o => _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].setPairingUri(o), a === null || a === void 0 ? void 0 : a.id);\n      } catch (a) {\n        console.error(a), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].setPairingError(!0), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Connection request declined\", \"error\"), Date.now() - this.lastRetry >= Io && (this.lastRetry = Date.now(), this.connectAndWait());\n      }\n    }\n  }\n};\nDe = ko([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-wc-connection-context\")], De);\nconst Eo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{all:initial}div{display:flex;align-items:center;background-color:var(--w3m-color-overlay);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);border-radius:var(--w3m-button-border-radius);padding:4px 4px 4px 8px}div button{border-radius:var(--w3m-secondary-button-border-radius);padding:4px 8px;padding-left:4px;height:auto;margin-left:10px;color:var(--w3m-accent-fill-color);background-color:var(--w3m-accent-color)}.w3m-no-avatar{padding-left:8px}button::after{content:'';top:0;bottom:0;left:0;right:0;position:absolute;background-color:transparent;border-radius:inherit;transition:background-color .2s ease;border:1px solid var(--w3m-color-overlay)}button:hover::after{background-color:var(--w3m-color-overlay)}w3m-avatar{margin-right:6px}w3m-button-big w3m-avatar{margin-left:-5px}`;\nvar Wo = Object.defineProperty,\n  Ao = Object.getOwnPropertyDescriptor,\n  ne = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ao(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Wo(a, o, e), e;\n  };\nlet Ot = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.balance = \"hide\", this.avatar = \"show\";\n  }\n  onOpen() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].click({\n      name: \"ACCOUNT_BUTTON\"\n    }), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].open({\n      route: \"Account\"\n    });\n  }\n  accountTemplate() {\n    const t = this.avatar === \"show\";\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${t ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-avatar data-testid=\"partial-account-avatar\"></w3m-avatar>` : null}<w3m-address-text data-testid=\"partial-account-address\"></w3m-address-text>`;\n  }\n  render() {\n    const t = this.balance === \"show\",\n      a = {\n        \"w3m-no-avatar\": this.avatar === \"hide\"\n      };\n    return t ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><w3m-balance data-testid=\"partial-account-balance\"></w3m-balance><button @click=\"${this.onOpen}\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(a)}\" data-testid=\"partial-account-open-button\">${this.accountTemplate()}</button></div>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button-big @click=\"${this.onOpen}\" data-testid=\"partial-account-open-button\">${this.accountTemplate()}</w3m-button-big>`;\n  }\n};\nOt.styles = [p.globalCss, Eo], ne([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Ot.prototype, \"balance\", 2), ne([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Ot.prototype, \"avatar\", 2), Ot = ne([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-account-button\")], Ot);\nconst jo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{display:flex;border-radius:var(--w3m-button-hover-highlight-border-radius);flex-direction:column;justify-content:center;padding:5px;width:100px}button:active{background-color:var(--w3m-color-overlay)}@media(hover:hover){button:hover{background-color:var(--w3m-color-overlay)}}button:disabled{pointer-events:none}w3m-network-image{width:32px;height:32px}w3m-text{margin-top:4px}`;\nvar Mo = Object.defineProperty,\n  Po = Object.getOwnPropertyDescriptor,\n  se = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Po(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Mo(a, o, e), e;\n  };\nlet It = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.chainId = 0, this.label = \"\", this.unsubscribeNetwork = void 0;\n    const {\n      selectedChain: t\n    } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state;\n    this.chainId = t === null || t === void 0 ? void 0 : t.id, this.label = t === null || t === void 0 ? void 0 : t.name, this.unsubscribeNetwork = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].subscribe(({\n      selectedChain: a\n    }) => {\n      this.chainId = a === null || a === void 0 ? void 0 : a.id, this.label = a === null || a === void 0 ? void 0 : a.name;\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeNetwork) == null || t.call(this);\n  }\n  onClick() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"SelectNetwork\");\n  }\n  render() {\n    const {\n        chains: t,\n        selectedChain: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state,\n      o = t === null || t === void 0 ? void 0 : t.map(i => i.id),\n      r = a && (o === null || o === void 0 ? void 0 : o.includes(a.id)),\n      e = t && t.length <= 1 && r;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button @click=\"${this.onClick}\" ?disabled=\"${e}\"><w3m-network-image chainId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.chainId)}\"></w3m-network-image><w3m-text variant=\"xsmall-regular\" color=\"accent\">${this.label}</w3m-text></button>`;\n  }\n};\nIt.styles = [p.globalCss, jo], se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], It.prototype, \"chainId\", 2), se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], It.prototype, \"label\", 2), It = se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-account-network-button\")], It);\nconst Lo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes slide{0%{background-position:0 0}100%{background-position:200px 0}}w3m-text{padding:1px 0}.w3m-loading{background:linear-gradient(270deg,var(--w3m-color-fg-1) 36.33%,var(--w3m-color-fg-3) 42.07%,var(--w3m-color-fg-1) 83.3%);background-size:200px 100%;background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent;animation-name:slide;animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:linear}`;\nvar To = Object.defineProperty,\n  _o = Object.getOwnPropertyDescriptor,\n  Et = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? _o(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && To(a, o, e), e;\n  };\nlet J = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.address = void 0, this.name = void 0, this.loading = !0, this.variant = \"button\", this.unsubscribeAccount = void 0, this.address = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.address, this.name = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.profileName, this.loading = Boolean(_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.profileLoading), this.unsubscribeAccount = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].subscribe(({\n      address: t,\n      profileName: a,\n      profileLoading: o\n    }) => {\n      this.address = t, this.name = a, this.loading = Boolean(o);\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeAccount) == null || t.call(this);\n  }\n  render() {\n    var t;\n    const a = this.variant === \"button\",\n      o = {\n        \"w3m-loading\": this.loading\n      };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-text class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(o)}\" data-testid=\"partial-address-text\" variant=\"${a ? \"medium-regular\" : \"big-bold\"}\" color=\"${a ? \"inverse\" : \"primary\"}\">${this.name ? this.name : s.truncate((t = this.address) != null ? t : \"\")}</w3m-text>`;\n  }\n};\nJ.styles = [p.globalCss, Lo], Et([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], J.prototype, \"address\", 2), Et([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], J.prototype, \"name\", 2), Et([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], J.prototype, \"loading\", 2), Et([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], J.prototype, \"variant\", 2), J = Et([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-address-text\")], J);\nconst P = {\n    onConnecting(t) {\n      s.goToConnectingView(t);\n    },\n    onExternal(t) {\n      s.handleConnectorConnection(t);\n    },\n    manualWalletsTemplate() {\n      return R.manualWallets().map(t => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button walletId=\"${t.id}\" name=\"${t.name}\" .onClick=\"${() => this.onConnecting(t)}\"></w3m-wallet-button>`);\n    },\n    recomendedWalletsTemplate(t = !1) {\n      return R.recomendedWallets(t).map(a => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button name=\"${a.name}\" walletId=\"${a.id}\" imageId=\"${a.image_id}\" .onClick=\"${() => this.onConnecting(a)}\"></w3m-wallet-button>`);\n    },\n    externalWalletsTemplate() {\n      return R.externalWallets().map(t => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button name=\"${t.name}\" walletId=\"${t.id}\" .onClick=\"${() => this.onExternal(t.id)}\"></w3m-wallet-button>`);\n    },\n    recentWalletTemplate() {\n      const t = R.recentWallet();\n      if (t) return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button name=\"${t.name}\" walletId=\"${t.id}\" imageId=\"${t.image_id}\" .recent=\"${!0}\" .onClick=\"${() => this.onConnecting(t)}\"></w3m-wallet-button>`;\n    },\n    installedInjectedWalletsTemplate() {\n      return R.installedInjectedWallets().map(t => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button .installed=\"${!0}\" name=\"${t.name}\" walletId=\"${t.id}\" imageId=\"${t.image_id}\" .onClick=\"${() => this.onConnecting(t)}\"></w3m-wallet-button>`);\n    },\n    injectedWalletsTemplate() {\n      return R.injectedWallets().map(t => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button name=\"${t.name}\" walletId=\"${t.id}\" imageId=\"${t.image_id}\" .onClick=\"${() => this.onConnecting(t)}\"></w3m-wallet-button>`);\n    }\n  },\n  No = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes scroll{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(calc(-70px * 9),0,0)}}.w3m-slider{position:relative;overflow-x:hidden;padding:10px 0;margin:0 -20px;width:calc(100% + 40px)}.w3m-track{display:flex;width:calc(70px * 18);animation:scroll 20s linear infinite;opacity:.7}.w3m-track svg{margin:0 5px}w3m-wallet-image{width:60px;height:60px;margin:0 5px;border-radius:var(--w3m-wallet-icon-border-radius)}.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between}.w3m-title{display:flex;align-items:center;margin-bottom:10px}.w3m-title svg{margin-right:6px}.w3m-title path{fill:var(--w3m-accent-color)}w3m-modal-footer .w3m-title{padding:0 10px}w3m-button-big{position:absolute;top:50%;left:50%;transform:translateY(-50%) translateX(-50%);filter:drop-shadow(0 0 17px var(--w3m-color-bg-1))}w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-info-footer w3m-text{text-align:center;margin-bottom:15px}#wallet-placeholder-fill{fill:var(--w3m-color-bg-3)}#wallet-placeholder-dash{stroke:var(--w3m-color-overlay)}`;\nvar Ro = Object.defineProperty,\n  Do = Object.getOwnPropertyDescriptor,\n  Zo = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Do(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Ro(a, o, e), e;\n  };\nlet ce = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onGoToQrcode() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"Qrcode\");\n  }\n  onGetWallet() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"GetWallet\");\n  }\n  render() {\n    const {\n        recomendedWallets: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state,\n      a = [...t, ...t],\n      o = P.externalWalletsTemplate(),\n      r = P.installedInjectedWalletsTemplate(),\n      e = [...r, ...o].length > 0,\n      i = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].RECOMMENDED_WALLET_AMOUNT * 2;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"Connect your wallet\" .onAction=\"${this.onGoToQrcode}\" .actionIcon=\"${w.QRCODE_ICON}\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-title\">${w.MOBILE_ICON}<w3m-text variant=\"small-regular\" color=\"accent\">WalletConnect</w3m-text></div><div class=\"w3m-slider\"><div class=\"w3m-track\">${[...Array(i)].map((l, d) => {\n      const v = a[d % a.length];\n      return v ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-image walletId=\"${v.id}\" imageId=\"${v.image_id}\"></w3m-wallet-image>` : w.WALLET_PLACEHOLDER;\n    })}</div><w3m-button-big @click=\"${s.handleAndroidLinking}\" data-testid=\"partial-android-wallet-button\"><w3m-text variant=\"medium-regular\" color=\"inverse\">Select Wallet</w3m-text></w3m-button-big></div></w3m-modal-content>${e ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-footer data-testid=\"partial-android-footer\"><div class=\"w3m-title\">${w.WALLET_ICON}<w3m-text variant=\"small-regular\" color=\"accent\">Other</w3m-text></div><div class=\"w3m-grid\">${r} ${o}</div></w3m-modal-footer>` : null}<w3m-info-footer><w3m-text color=\"secondary\" variant=\"small-thin\">${`Choose WalletConnect to see supported apps on your device${e ? \", or select from other options\" : \"\"}`}</w3m-text><w3m-button variant=\"outline\" .iconRight=\"${w.ARROW_UP_RIGHT_ICON}\" .onClick=\"${() => this.onGetWallet()}\" data-testid=\"partial-android-nowallet-button\">I don't have a wallet</w3m-button></w3m-info-footer>`;\n  }\n};\nce.styles = [p.globalCss, No], ce = Zo([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-android-wallet-selection\")], ce);\nconst Ho = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes slide{0%{transform:translateX(-50px)}100%{transform:translateX(200px)}}.w3m-placeholder,img{border-radius:50%;box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);display:block;position:relative;overflow:hidden!important;background-color:var(--w3m-color-av-1);background-image:radial-gradient(at 66% 77%,var(--w3m-color-av-2) 0,transparent 50%),radial-gradient(at 29% 97%,var(--w3m-color-av-3) 0,transparent 50%),radial-gradient(at 99% 86%,var(--w3m-color-av-4) 0,transparent 50%),radial-gradient(at 29% 88%,var(--w3m-color-av-5) 0,transparent 50%);transform:translateZ(0)}.w3m-loader{width:50px;height:100%;background:linear-gradient(270deg,transparent 0,rgba(255,255,255,.4) 30%,transparent 100%);animation-name:slide;animation-duration:1.5s;transform:translateX(-50px);animation-iteration-count:infinite;animation-timing-function:linear;animation-delay:.55s}.w3m-small{width:24px;height:24px}.w3m-medium{width:60px;height:60px}`;\nvar Bo = Object.defineProperty,\n  So = Object.getOwnPropertyDescriptor,\n  Wt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? So(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Bo(a, o, e), e;\n  };\nlet tt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.address = void 0, this.avatar = void 0, this.loading = !0, this.size = \"small\", this.unsubscribeAccount = void 0, this.address = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.address, this.avatar = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.profileAvatar, this.loading = Boolean(_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.profileLoading), this.unsubscribeAccount = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].subscribe(({\n      address: t,\n      profileAvatar: a,\n      profileLoading: o\n    }) => {\n      this.address = t, this.avatar = a, this.loading = Boolean(o);\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeAccount) == null || t.call(this);\n  }\n  render() {\n    const t = {\n      \"w3m-placeholder\": !0,\n      \"w3m-small\": this.size === \"small\",\n      \"w3m-medium\": this.size === \"medium\"\n    };\n    return this.avatar ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<img crossorigin=\"anonymous\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\" src=\"${this.avatar}\" data-testid=\"partial-avatar-image\">` : this.address ? (s.generateAvatarColors(this.address), lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\">${this.loading ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"w3m-loader\"></div>` : null}</div>`) : null;\n  }\n};\ntt.styles = [p.globalCss, Ho], Wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], tt.prototype, \"address\", 2), Wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], tt.prototype, \"avatar\", 2), Wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], tt.prototype, \"loading\", 2), Wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], tt.prototype, \"size\", 2), tt = Wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-avatar\")], tt);\nconst Uo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{display:flex;align-items:center}w3m-token-image{width:28px;height:28px;margin-right:6px}`;\nvar Vo = Object.defineProperty,\n  zo = Object.getOwnPropertyDescriptor,\n  de = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? zo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Vo(a, o, e), e;\n  };\nlet At = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    var t, a;\n    super(), this.symbol = void 0, this.amount = void 0, this.unsubscribeAccount = void 0, this.symbol = (t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.balance) == null ? void 0 : t.symbol, this.amount = (a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.balance) == null ? void 0 : a.amount, this.unsubscribeAccount = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].subscribe(({\n      balance: o\n    }) => {\n      this.symbol = o === null || o === void 0 ? void 0 : o.symbol, this.amount = o === null || o === void 0 ? void 0 : o.amount;\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeAccount) == null || t.call(this);\n  }\n  render() {\n    let t = \"_._\";\n    return this.amount === \"0.0\" ? t = \"0\" : typeof this.amount == \"string\" && this.amount.length > 6 ? t = this.amount.substring(0, 6) : typeof this.amount == \"string\" && (t = this.amount), lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><w3m-token-image symbol=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.symbol)}\" data-testid=\"partial-balance-token-image\"></w3m-token-image><w3m-text variant=\"medium-regular\" color=\"primary\" data-testid=\"partial-balance-token-text\">${t} ${this.symbol}</w3m-text></div>`;\n  }\n};\nAt.styles = [p.globalCss, Uo], de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], At.prototype, \"symbol\", 2), de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], At.prototype, \"amount\", 2), At = de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-balance\")], At);\nconst Go = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{all:initial}svg{width:28px;height:20px;margin:-1px 3px 0 -5px}svg path{fill:var(--w3m-accent-fill-color)}button:disabled svg path{fill:var(--w3m-color-fg-3)}w3m-spinner{margin:0 10px 0 0}`;\nvar Fo = Object.defineProperty,\n  qo = Object.getOwnPropertyDescriptor,\n  Ht = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? qo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Fo(a, o, e), e;\n  };\nlet mt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.loading = !1, this.label = \"Connect Wallet\", this.icon = \"show\", this.modalUnsub = void 0, this.modalUnsub = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].subscribe(t => {\n      t.open && (this.loading = !0), t.open || (this.loading = !1);\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.modalUnsub) == null || t.call(this);\n  }\n  iconTemplate() {\n    return this.icon === \"show\" ? w.WALLET_CONNECT_ICON : null;\n  }\n  onClick() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.isConnected ? this.onDisconnect() : this.onConnect();\n  }\n  async onConnect() {\n    this.loading = !0, _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].click({\n      name: \"CONNECT_BUTTON\"\n    }), await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].open(), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].state.open || (this.loading = !1);\n  }\n  async onDisconnect() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].click({\n      name: \"DISCONNECT_BUTTON\"\n    }), await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().disconnect();\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button-big .disabled=\"${this.loading}\" @click=\"${this.onClick}\" data-testid=\"partial-connect-button\">${this.loading ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-spinner data-testid=\"partial-connect-spinner\"></w3m-spinner><w3m-text variant=\"medium-regular\" color=\"accent\" data-testid=\"partial-connect-text\">Connecting...</w3m-text>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${this.iconTemplate()}<w3m-text variant=\"medium-regular\" color=\"inverse\" data-testid=\"partial-connect-text\">${this.label}</w3m-text>`}</w3m-button-big>`;\n  }\n};\nmt.styles = [p.globalCss, Go], Ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], mt.prototype, \"loading\", 2), Ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], mt.prototype, \"label\", 2), Ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], mt.prototype, \"icon\", 2), mt = Ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-connect-button\")], mt);\nconst Ko = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes loading{to{stroke-dashoffset:0}}@keyframes shake{10%,90%{transform:translate3d(-1px,0,0)}20%,80%{transform:translate3d(1px,0,0)}30%,50%,70%{transform:translate3d(-2px,0,0)}40%,60%{transform:translate3d(2px,0,0)}}:host{display:flex;flex-direction:column;align-items:center}div{position:relative;width:110px;height:110px;display:flex;justify-content:center;align-items:center;margin:40px 0 20px 0;transform:translate3d(0,0,0)}svg{position:absolute;width:110px;height:110px;fill:none;stroke:transparent;stroke-linecap:round;stroke-width:2px;top:0;left:0}use{stroke:var(--w3m-accent-color);animation:loading 1s linear infinite}w3m-wallet-image{border-radius:var(--w3m-wallet-icon-large-border-radius);width:90px;height:90px}w3m-text{margin-bottom:40px}.w3m-error svg{stroke:var(--w3m-error-color)}.w3m-error use{display:none}.w3m-error{animation:shake .4s cubic-bezier(.36,.07,.19,.97) both}.w3m-stale svg,.w3m-stale use{display:none}`;\nvar Yo = Object.defineProperty,\n  Qo = Object.getOwnPropertyDescriptor,\n  ht = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Qo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Yo(a, o, e), e;\n  };\nlet K = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.walletId = void 0, this.imageId = void 0, this.isError = !1, this.isStale = !1, this.label = \"\";\n  }\n  svgLoaderTemplate() {\n    var t, a;\n    const o = (a = (t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ThemeCtrl\"].state.themeVariables) == null ? void 0 : t[\"--w3m-wallet-icon-large-border-radius\"]) != null ? a : p.getPreset(\"--w3m-wallet-icon-large-border-radius\");\n    let r = 0;\n    o.includes(\"%\") ? r = 88 / 100 * parseInt(o, 10) : r = parseInt(o, 10), r *= 1.17;\n    const e = 317 - r * 1.57,\n      i = 425 - r * 1.8;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<svg viewBox=\"0 0 110 110\" width=\"110\" height=\"110\"><rect id=\"w3m-loader\" x=\"2\" y=\"2\" width=\"106\" height=\"106\" rx=\"${r}\"/><use xlink:href=\"#w3m-loader\" stroke-dasharray=\"106 ${e}\" stroke-dashoffset=\"${i}\"></use></svg>`;\n  }\n  render() {\n    const t = {\n      \"w3m-error\": this.isError,\n      \"w3m-stale\": this.isStale\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\">${this.svgLoaderTemplate()}<w3m-wallet-image walletId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.walletId)}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.imageId)}\" data-useid=\"partial-connector-wallet-image\"></w3m-wallet-image></div><w3m-text variant=\"medium-regular\" color=\"${this.isError ? \"error\" : \"primary\"}\" data-useid=\"partial-connector-error-text\">${this.isError ? \"Connection declined\" : this.label}</w3m-text>`;\n  }\n};\nK.styles = [p.globalCss, Ko], ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], K.prototype, \"walletId\", 2), ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], K.prototype, \"imageId\", 2), ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], K.prototype, \"isError\", 2), ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], K.prototype, \"isStale\", 2), ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], K.prototype, \"label\", 2), K = ht([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-connector-waiting\")], K);\nvar Xo = Object.defineProperty,\n  Jo = Object.getOwnPropertyDescriptor,\n  wt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Jo(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Xo(a, o, e), e;\n  };\nlet et = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isConnected = !1, this.label = \"Connect Wallet\", this.icon = \"show\", this.avatar = \"show\", this.balance = \"hide\", this.unsubscribeAccount = void 0, this.isConnected = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.isConnected, this.unsubscribeAccount = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].subscribe(({\n      isConnected: t\n    }) => {\n      this.isConnected = t;\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeAccount) == null || t.call(this);\n  }\n  render() {\n    const {\n        enableAccountView: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state,\n      a = this.balance,\n      o = this.label,\n      r = this.icon,\n      e = this.avatar;\n    return this.isConnected && t ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-account-button .balance=\"${a}\" .avatar=\"${e}\" data-testid=\"partial-core-account-button\"></w3m-account-button>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-connect-button label=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.isConnected ? \"Disconnect\" : o)}\" .icon=\"${r}\" data-testid=\"partial-core-connect-button\"></w3m-connect-button>`;\n  }\n};\nwt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], et.prototype, \"isConnected\", 2), wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], et.prototype, \"label\", 2), wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], et.prototype, \"icon\", 2), wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], et.prototype, \"avatar\", 2), wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], et.prototype, \"balance\", 2), et = wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-core-button\")], et);\nconst tr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between}.w3m-desktop-title,.w3m-mobile-title{display:flex;align-items:center}.w3m-mobile-title{justify-content:space-between;margin-bottom:20px;margin-top:-10px}.w3m-desktop-title{margin-bottom:10px;padding:0 10px}.w3m-subtitle{display:flex;align-items:center}.w3m-subtitle:last-child path{fill:var(--w3m-color-fg-3)}.w3m-desktop-title svg,.w3m-mobile-title svg{margin-right:6px}.w3m-desktop-title path,.w3m-mobile-title path{fill:var(--w3m-accent-color)}`;\nvar er = Object.defineProperty,\n  ar = Object.getOwnPropertyDescriptor,\n  or = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ar(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && er(a, o, e), e;\n  };\nlet me = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    const {\n        explorerExcludedWalletIds: t,\n        enableExplorer: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state,\n      o = t !== \"ALL\" && a,\n      r = P.manualWalletsTemplate(),\n      e = P.recomendedWalletsTemplate(),\n      i = P.externalWalletsTemplate(),\n      l = P.recentWalletTemplate();\n    let d = [...P.installedInjectedWalletsTemplate(), l, ...i, ...r, ...e];\n    d = d.filter(Boolean);\n    const v = d.length > 4 || o;\n    let x = [];\n    v ? x = d.slice(0, 3) : x = d;\n    const H = Boolean(x.length);\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header .border=\"${!0}\" title=\"Connect your wallet\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${w.COPY_ICON}\" data-testid=\"partial-desktop-wallet-selection-header\"></w3m-modal-header><w3m-modal-content data-testid=\"partial-desktop-wallet-selection-content\"><div class=\"w3m-mobile-title\"><div class=\"w3m-subtitle\">${w.MOBILE_ICON}<w3m-text variant=\"small-regular\" color=\"accent\">Mobile</w3m-text></div><div class=\"w3m-subtitle\">${w.SCAN_ICON}<w3m-text variant=\"small-regular\" color=\"secondary\">Scan with your wallet</w3m-text></div></div><w3m-walletconnect-qr></w3m-walletconnect-qr></w3m-modal-content>${H ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-footer data-testid=\"partial-desktop-wallet-selection-footer\"><div class=\"w3m-desktop-title\">${w.DESKTOP_ICON}<w3m-text variant=\"small-regular\" color=\"accent\">Desktop</w3m-text></div><div class=\"w3m-grid\">${x} ${v ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-view-all-wallets-button></w3m-view-all-wallets-button>` : null}</div></w3m-modal-footer>` : null}`;\n  }\n};\nme.styles = [p.globalCss, tr], me = or([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-desktop-wallet-selection\")], me);\nconst rr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{background-color:var(--w3m-color-bg-2);padding:10px 20px 15px 20px;border-top:1px solid var(--w3m-color-bg-3);text-align:center}a{color:var(--w3m-accent-color);text-decoration:none;transition:opacity .2s ease-in-out;display:inline}a:active{opacity:.8}@media(hover:hover){a:hover{opacity:.8}}`;\nvar ir = Object.defineProperty,\n  lr = Object.getOwnPropertyDescriptor,\n  nr = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? lr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ir(a, o, e), e;\n  };\nlet he = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    const {\n      termsOfServiceUrl: t,\n      privacyPolicyUrl: a\n    } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state;\n    return (t !== null && t !== void 0 ? t : a) ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><w3m-text variant=\"small-regular\" color=\"secondary\">By connecting your wallet to this app, you agree to the app's ${t ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<a href=\"${t}\" target=\"_blank\" rel=\"noopener noreferrer\">Terms of Service</a>` : null} ${t && a ? \"and\" : null} ${a ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<a href=\"${a}\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>` : null}</w3m-text></div>` : null;\n  }\n};\nhe.styles = [p.globalCss, rr], he = nr([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-legal-notice\")], he);\nconst sr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{display:grid;grid-template-columns:repeat(4,80px);margin:0 -10px;justify-content:space-between;row-gap:10px}`;\nvar cr = Object.defineProperty,\n  dr = Object.getOwnPropertyDescriptor,\n  mr = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? dr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && cr(a, o, e), e;\n  };\nlet we = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onQrcode() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"Qrcode\");\n  }\n  render() {\n    const {\n        explorerExcludedWalletIds: t,\n        enableExplorer: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state,\n      o = t !== \"ALL\" && a,\n      r = P.manualWalletsTemplate(),\n      e = P.recomendedWalletsTemplate(),\n      i = P.externalWalletsTemplate(),\n      l = P.recentWalletTemplate();\n    let d = [...P.installedInjectedWalletsTemplate(), l, ...i, ...r, ...e];\n    d = d.filter(Boolean);\n    const v = d.length > 8 || o;\n    let x = [];\n    v ? x = d.slice(0, 7) : x = d;\n    const H = Boolean(x.length);\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"Connect your wallet\" .onAction=\"${this.onQrcode}\" .actionIcon=\"${w.QRCODE_ICON}\" data-testid=\"partial-mobile-wallet-selection-header\"></w3m-modal-header>${H ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-content data-testid=\"partial-mobile-wallet-selection-content\"><div>${x} ${v ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-view-all-wallets-button></w3m-view-all-wallets-button>` : null}</div></w3m-modal-content>` : null}`;\n  }\n};\nwe.styles = [p.globalCss, sr], we = mr([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-mobile-wallet-selection\")], we);\nconst hr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{all:initial}.w3m-overlay{top:0;bottom:0;left:0;right:0;position:fixed;z-index:var(--w3m-z-index);overflow:hidden;display:flex;justify-content:center;align-items:center;opacity:0;pointer-events:none;background-color:var(--w3m-overlay-background-color);backdrop-filter:var(--w3m-overlay-backdrop-filter)}@media(max-height:720px) and (orientation:landscape){.w3m-overlay{overflow:scroll;align-items:flex-start;padding:20px 0}}.w3m-active{pointer-events:auto}.w3m-container{position:relative;max-width:360px;width:100%;outline:0;border-radius:var(--w3m-background-border-radius) var(--w3m-background-border-radius) var(--w3m-container-border-radius) var(--w3m-container-border-radius);border:1px solid var(--w3m-color-overlay);overflow:hidden}.w3m-card{width:100%;position:relative;border-radius:var(--w3m-container-border-radius);overflow:hidden;box-shadow:0 6px 14px -6px rgba(10,16,31,.12),0 10px 32px -4px rgba(10,16,31,.1),0 0 0 1px var(--w3m-color-overlay);background-color:var(--w3m-color-bg-1);color:var(--w3m-color-fg-1)}@media(max-width:600px){.w3m-container{max-width:440px;border-radius:var(--w3m-background-border-radius) var(--w3m-background-border-radius) 0 0}.w3m-card{border-radius:var(--w3m-container-border-radius) var(--w3m-container-border-radius) 0 0}.w3m-overlay{align-items:flex-end}}@media(max-width:440px){.w3m-container{border:0}}`;\nvar wr = Object.defineProperty,\n  pr = Object.getOwnPropertyDescriptor,\n  pe = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? pr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && wr(a, o, e), e;\n  };\nlet jt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.open = !1, this.active = !1, this.unsubscribeModal = void 0, this.abortController = void 0, this.unsubscribeModal = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].subscribe(t => {\n      t.open ? this.onOpenModalEvent() : this.onCloseModalEvent();\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeModal) == null || t.call(this);\n  }\n  get overlayEl() {\n    return s.getShadowRootElement(this, \".w3m-overlay\");\n  }\n  get containerEl() {\n    return s.getShadowRootElement(this, \".w3m-container\");\n  }\n  toggleBodyScroll(t) {\n    if (document.querySelector(\"body\")) if (t) {\n      const a = document.getElementById(\"w3m-styles\");\n      a === null || a === void 0 ? void 0 : a.remove();\n    } else document.head.insertAdjacentHTML(\"beforeend\", '<style id=\"w3m-styles\">html,body{touch-action:none;overflow:hidden;overscroll-behavior:contain;}</style>');\n  }\n  onCloseModal(t) {\n    t.target === t.currentTarget && _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].close();\n  }\n  onOpenModalEvent() {\n    this.toggleBodyScroll(!1), this.addKeyboardEvents(), this.open = !0, setTimeout(async () => {\n      const t = s.isMobileAnimation() ? {\n          y: [\"50vh\", \"0vh\"]\n        } : {\n          scale: [.98, 1]\n        },\n        a = .1,\n        o = .2;\n      await Promise.all([Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.overlayEl, {\n        opacity: [0, 1]\n      }, {\n        delay: a,\n        duration: o\n      }).finished, Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.containerEl, t, {\n        delay: a,\n        duration: o\n      }).finished]), this.active = !0;\n    }, 0);\n  }\n  async onCloseModalEvent() {\n    this.toggleBodyScroll(!0), this.removeKeyboardEvents();\n    const t = s.isMobileAnimation() ? {\n        y: [\"0vh\", \"50vh\"]\n      } : {\n        scale: [1, .98]\n      },\n      a = .2;\n    await Promise.all([Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.overlayEl, {\n      opacity: [1, 0]\n    }, {\n      duration: a\n    }).finished, Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.containerEl, t, {\n      duration: a\n    }).finished]), this.containerEl.removeAttribute(\"style\"), this.active = !1, this.open = !1;\n  }\n  addKeyboardEvents() {\n    this.abortController = new AbortController(), window.addEventListener(\"keydown\", t => {\n      var a;\n      t.key === \"Escape\" ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].close() : t.key === \"Tab\" && ((a = t.target) != null && a.tagName.includes(\"W3M-\") || this.containerEl.focus());\n    }, this.abortController), this.containerEl.focus();\n  }\n  removeKeyboardEvents() {\n    var t;\n    (t = this.abortController) == null || t.abort(), this.abortController = void 0;\n  }\n  render() {\n    const t = {\n      \"w3m-overlay\": !0,\n      \"w3m-active\": this.active\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-explorer-context data-id=\"partial-modal-explorer-context\"></w3m-explorer-context><w3m-theme-context data-id=\"partial-modal-theme-context\"></w3m-theme-context><w3m-wc-connection-context data-id=\"partial-modal-connection-context\"></w3m-wc-connection-context><w3m-account-context data-id=\"partial-modal-account-context\"></w3m-account-context><w3m-network-context data-id=\"partial-modal-network-context\"></w3m-network-context><div id=\"w3m-modal\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\" @click=\"${this.onCloseModal}\" role=\"alertdialog\" aria-modal=\"true\"><div class=\"w3m-container\" tabindex=\"0\">${this.open ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-backcard></w3m-modal-backcard><div class=\"w3m-card\"><w3m-modal-router></w3m-modal-router><w3m-modal-toast></w3m-modal-toast></div>` : null}</div></div>`;\n  }\n};\njt.styles = [p.globalCss, hr], pe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], jt.prototype, \"open\", 2), pe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], jt.prototype, \"active\", 2), jt = pe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-modal\")], jt);\nconst gr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{all:initial}w3m-network-image{margin-left:-6px;margin-right:6px;width:28px;height:28px}`;\nvar ur = Object.defineProperty,\n  vr = Object.getOwnPropertyDescriptor,\n  Bt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? vr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ur(a, o, e), e;\n  };\nlet pt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.chainId = \"\", this.label = \"\", this.wrongNetwork = !1, this.unsubscribeNetwork = void 0;\n    const {\n      selectedChain: t\n    } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state;\n    this.onSetChainData(t), this.unsubscribeNetwork = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].subscribe(({\n      selectedChain: a\n    }) => {\n      this.onSetChainData(a);\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unsubscribeNetwork) == null || t.call(this);\n  }\n  onSetChainData(t) {\n    if (t) {\n      const {\n          chains: a\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state,\n        o = a === null || a === void 0 ? void 0 : a.map(r => r.id);\n      this.chainId = t.id.toString(), this.wrongNetwork = !(o != null && o.includes(t.id)), this.label = this.wrongNetwork ? \"Wrong Network\" : t.name;\n    }\n  }\n  onClick() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"EventsCtrl\"].click({\n      name: \"NETWORK_BUTTON\"\n    }), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].open({\n      route: \"SelectNetwork\"\n    });\n  }\n  render() {\n    var t;\n    const {\n        chains: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state,\n      o = a && a.length > 1;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button-big @click=\"${this.onClick}\" ?disabled=\"${!o}\" data-testid=\"partial-network-switch-button\"><w3m-network-image chainId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.chainId)}\" data-testid=\"partial-network-switch-image\"></w3m-network-image><w3m-text variant=\"medium-regular\" color=\"inverse\" data-testid=\"partial-network-switch-text\">${(t = this.label) != null && t.length ? this.label : \"Select Network\"}</w3m-text></w3m-button-big>`;\n  }\n};\npt.styles = [p.globalCss, gr], Bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], pt.prototype, \"chainId\", 2), Bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], pt.prototype, \"label\", 2), Bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], pt.prototype, \"wrongNetwork\", 2), pt = Bt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-network-switch\")], pt);\nconst br = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes loading{to{stroke-dashoffset:0}}@keyframes shake{10%,90%{transform:translate3d(-1px,0,0)}20%,80%{transform:translate3d(1px,0,0)}30%,50%,70%{transform:translate3d(-2px,0,0)}40%,60%{transform:translate3d(2px,0,0)}}:host{display:flex;flex-direction:column;align-items:center}div{position:relative;width:110px;height:110px;display:flex;justify-content:center;align-items:center;margin:40px 0 20px 0;transform:translate3d(0,0,0)}svg{position:absolute;width:110px;height:110px;fill:none;stroke:transparent;stroke-linecap:round;stroke-width:1px;top:0;left:0}use{stroke:var(--w3m-accent-color);animation:loading 1s linear infinite}w3m-network-image{width:92px;height:92px}w3m-text{margin-bottom:40px}.w3m-error svg{stroke:var(--w3m-error-color)}.w3m-error use{display:none}.w3m-error{animation:shake .4s cubic-bezier(.36,.07,.19,.97) both}`;\nvar fr = Object.defineProperty,\n  xr = Object.getOwnPropertyDescriptor,\n  St = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? xr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && fr(a, o, e), e;\n  };\nlet gt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.chainId = void 0, this.isError = !1, this.label = \"\";\n  }\n  svgLoaderTemplate() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<svg width=\"54\" height=\"59\" viewBox=\"0 0 54 59\" fill=\"none\" class=\"w3m-loader\" data-testid=\"partial-network-waiting-svg\"><path id=\"w3m-loader-path\" d=\"M17.22 5.295c3.877-2.277 5.737-3.363 7.72-3.726a11.44 11.44 0 0 1 4.12 0c1.983.363 3.844 1.45 7.72 3.726l6.065 3.562c3.876 2.276 5.731 3.372 7.032 4.938a11.896 11.896 0 0 1 2.06 3.63c.683 1.928.688 4.11.688 8.663v7.124c0 4.553-.005 6.735-.688 8.664a11.896 11.896 0 0 1-2.06 3.63c-1.3 1.565-3.156 2.66-7.032 4.937l-6.065 3.563c-3.877 2.276-5.737 3.362-7.72 3.725a11.46 11.46 0 0 1-4.12 0c-1.983-.363-3.844-1.449-7.72-3.726l-6.065-3.562c-3.876-2.276-5.731-3.372-7.032-4.938a11.885 11.885 0 0 1-2.06-3.63c-.682-1.928-.688-4.11-.688-8.663v-7.124c0-4.553.006-6.735.688-8.664a11.885 11.885 0 0 1 2.06-3.63c1.3-1.565 3.156-2.66 7.032-4.937l6.065-3.562Z\"/><use xlink:href=\"#w3m-loader-path\" stroke-dasharray=\"54 118\" stroke-dashoffset=\"172\"></use></svg>`;\n  }\n  render() {\n    const t = {\n      \"w3m-error\": this.isError\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(t)}\">${this.svgLoaderTemplate()}<w3m-network-image chainId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_7__[\"ifDefined\"])(this.chainId)}\" data-testid=\"partial-network-waiting-image\"></w3m-network-image></div><w3m-text variant=\"medium-regular\" color=\"${this.isError ? \"error\" : \"primary\"}\" data-testid=\"partial-network-waiting-text\">${this.isError ? \"Switch declined\" : this.label}</w3m-text>`;\n  }\n};\ngt.styles = [p.globalCss, br], St([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], gt.prototype, \"chainId\", 2), St([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], gt.prototype, \"isError\", 2), St([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], gt.prototype, \"label\", 2), gt = St([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-network-waiting\")], gt);\nconst yr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{display:flex;margin-top:15px}slot{display:inline-block;margin:0 5px}w3m-button{margin:0 5px}`;\nvar Cr = Object.defineProperty,\n  $r = Object.getOwnPropertyDescriptor,\n  at = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? $r(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Cr(a, o, e), e;\n  };\nlet V = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.isMobile = !1, this.isInjected = !1, this.isInjectedInstalled = !1, this.isDesktop = !1, this.isWeb = !1, this.isRetry = !1;\n  }\n  onMobile() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile() ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].replace(\"MobileConnecting\") : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].replace(\"MobileQrcodeConnecting\");\n  }\n  onInjected() {\n    this.isInjectedInstalled ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].replace(\"InjectedConnecting\") : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].replace(\"InstallWallet\");\n  }\n  onDesktop() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].replace(\"DesktopConnecting\");\n  }\n  onWeb() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].replace(\"WebConnecting\");\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div>${this.isRetry ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<slot></slot>` : null} ${this.isMobile ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button .onClick=\"${this.onMobile}\" .iconLeft=\"${w.MOBILE_ICON}\" variant=\"outline\">Mobile</w3m-button>` : null} ${this.isInjected ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button .onClick=\"${this.onInjected}\" .iconLeft=\"${w.WALLET_ICON}\" variant=\"outline\">Browser</w3m-button>` : null} ${this.isDesktop ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button .onClick=\"${this.onDesktop}\" .iconLeft=\"${w.DESKTOP_ICON}\" variant=\"outline\">Desktop</w3m-button>` : null} ${this.isWeb ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-button .onClick=\"${this.onWeb}\" .iconLeft=\"${w.GLOBE_ICON}\" variant=\"outline\">Web</w3m-button>` : null}</div>`;\n  }\n};\nV.styles = [p.globalCss, yr], at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], V.prototype, \"isMobile\", 2), at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], V.prototype, \"isInjected\", 2), at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], V.prototype, \"isInjectedInstalled\", 2), at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], V.prototype, \"isDesktop\", 2), at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], V.prototype, \"isWeb\", 2), at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], V.prototype, \"isRetry\", 2), V = at([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-platform-selection\")], V);\nconst kr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{display:flex;flex-direction:column;padding:5px 10px;border-radius:var(--w3m-button-hover-highlight-border-radius);height:100%;justify-content:flex-start}.w3m-icons{width:60px;height:60px;display:flex;flex-wrap:wrap;padding:7px;border-radius:var(--w3m-wallet-icon-border-radius);justify-content:space-between;align-items:center;margin-bottom:5px;background-color:var(--w3m-color-bg-2);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay)}button:active{background-color:var(--w3m-color-overlay)}@media(hover:hover){button:hover{background-color:var(--w3m-color-overlay)}}.w3m-icons img{width:21px;height:21px;object-fit:cover;object-position:center;border-radius:calc(var(--w3m-wallet-icon-border-radius)/ 2);border:1px solid var(--w3m-color-overlay)}.w3m-icons svg{width:21px;height:21px}.w3m-icons img:nth-child(1),.w3m-icons img:nth-child(2),.w3m-icons svg:nth-child(1),.w3m-icons svg:nth-child(2){margin-bottom:4px}w3m-text{width:100%;text-align:center}#wallet-placeholder-fill{fill:var(--w3m-color-bg-3)}#wallet-placeholder-dash{stroke:var(--w3m-color-overlay)}`;\nvar Or = Object.defineProperty,\n  Ir = Object.getOwnPropertyDescriptor,\n  Er = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ir(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Or(a, o, e), e;\n  };\nlet ge = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onClick() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"WalletExplorer\");\n  }\n  render() {\n    const {\n        recomendedWallets: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state,\n      a = R.manualWallets(),\n      o = [...t, ...a].reverse().slice(0, 4);\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button @click=\"${this.onClick}\" data-testid=\"partial-all-wallets-button\"><div class=\"w3m-icons\">${o.map(r => {\n      const e = s.getWalletIcon(r);\n      if (e) return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<img crossorigin=\"anonymous\" src=\"${e}\">`;\n      const i = s.getWalletIcon({\n        id: r.id\n      });\n      return i ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<img crossorigin=\"anonymous\" src=\"${i}\">` : w.WALLET_PLACEHOLDER;\n    })} ${[...Array(4 - o.length)].map(() => w.WALLET_PLACEHOLDER)}</div><w3m-text variant=\"xsmall-regular\">View All</w3m-text></button>`;\n  }\n};\nge.styles = [p.globalCss, kr], ge = Er([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-view-all-wallets-button\")], ge);\nconst Wr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-qr-container{width:100%;display:flex;justify-content:center;align-items:center;aspect-ratio:1/1}`;\nvar Ar = Object.defineProperty,\n  jr = Object.getOwnPropertyDescriptor,\n  Ut = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? jr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Ar(a, o, e), e;\n  };\nlet ut = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.walletId = \"\", this.imageId = \"\", this.uri = \"\", this.unwatchWcConnection = void 0, setTimeout(() => {\n      const {\n        pairingUri: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state;\n      this.uri = t;\n    }, 0), this.unwatchWcConnection = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].subscribe(t => {\n      t.pairingUri && (this.uri = t.pairingUri);\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unwatchWcConnection) == null || t.call(this);\n  }\n  get overlayEl() {\n    return s.getShadowRootElement(this, \".w3m-qr-container\");\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"w3m-qr-container\">${this.uri ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-qrcode size=\"${this.overlayEl.offsetWidth}\" uri=\"${this.uri}\" walletId=\"${this.walletId}\" imageId=\"${this.imageId}\" data-testid=\"partial-qr-code\"></w3m-qrcode>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-spinner data-testid=\"partial-qr-spinner\"></w3m-spinner>`}</div>`;\n  }\n};\nut.styles = [p.globalCss, Wr], Ut([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], ut.prototype, \"walletId\", 2), Ut([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], ut.prototype, \"imageId\", 2), Ut([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ut.prototype, \"uri\", 2), ut = Ut([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-walletconnect-qr\")], ut);\nconst Mr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-profile{display:flex;justify-content:space-between;align-items:flex-start;padding-top:20px}.w3m-connection-badge{background-color:var(--w3m-color-bg-2);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);padding:6px 10px 6px 26px;position:relative;border-radius:28px}.w3m-connection-badge::before{content:'';position:absolute;width:10px;height:10px;left:10px;background-color:var(--w3m-success-color);border-radius:50%;top:50%;margin-top:-5px;box-shadow:0 1px 4px 1px var(--w3m-success-color),inset 0 0 0 1px var(--w3m-color-overlay)}.w3m-footer{display:flex;justify-content:space-between}w3m-address-text{margin-top:10px;display:block}.w3m-balance{border-top:1px solid var(--w3m-color-bg-2);padding:11px 20px}`;\nvar Pr = Object.defineProperty,\n  Lr = Object.getOwnPropertyDescriptor,\n  Ze = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Lr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Pr(a, o, e), e;\n  };\nlet Vt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.loading = !1;\n  }\n  async onDisconnect() {\n    this.loading || (this.loading = !0, await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().disconnect(), this.loading = !1);\n  }\n  async onCopyAddress() {\n    var t;\n    try {\n      await navigator.clipboard.writeText((t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state.address) != null ? t : \"\"), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Address copied\", \"success\");\n    } catch {\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Failed to copy\", \"error\");\n    }\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-content data-testid=\"view-account-content\"><div class=\"w3m-profile\"><div class=\"w3m-info\"><w3m-avatar size=\"medium\" data-testid=\"view-account-avatar\"></w3m-avatar><w3m-address-text variant=\"modal\" data-testid=\"view-account-address-text\"></w3m-address-text></div><div class=\"w3m-connection-badge\"><w3m-text variant=\"small-regular\" color=\"secondary\" data-testid=\"view-account-connection-badge\">Connected</w3m-text></div></div></w3m-modal-content><div class=\"w3m-balance\"><w3m-balance data-testid=\"view-account-balance\"></w3m-balance></div><w3m-modal-footer data-testid=\"view-account-footer\"><div class=\"w3m-footer\"><w3m-account-network-button data-testid=\"view-account-network-button\"></w3m-account-network-button><w3m-box-button label=\"Copy Address\" .onClick=\"${this.onCopyAddress}\" .icon=\"${w.ACCOUNT_COPY}\" data-testid=\"view-account-copy-button\"></w3m-box-button><w3m-box-button label=\"Disconnect\" .loading=\"${this.loading}\" .onClick=\"${this.onDisconnect}\" .icon=\"${w.ACCOUNT_DISCONNECT}\" data-testid=\"view-account-disconnect-button\"></w3m-box-button></div></w3m-modal-footer>`;\n  }\n};\nVt.styles = [p.globalCss, Mr], Ze([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Vt.prototype, \"loading\", 2), Vt = Ze([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-account-view\")], Vt);\nvar Tr = Object.defineProperty,\n  _r = Object.getOwnPropertyDescriptor,\n  Nr = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? _r(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Tr(a, o, e), e;\n  };\nlet ue = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  viewTemplate() {\n    return _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isAndroid() ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-android-wallet-selection></w3m-android-wallet-selection>` : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile() ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-mobile-wallet-selection></w3m-mobile-wallet-selection>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-desktop-wallet-selection></w3m-desktop-wallet-selection>`;\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${this.viewTemplate()}<w3m-legal-notice></w3m-legal-notice>`;\n  }\n};\nue.styles = [p.globalCss], ue = Nr([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-connect-wallet-view\")], ue);\nconst Rr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-text{text-align:center}`;\nvar Dr = Object.defineProperty,\n  Zr = Object.getOwnPropertyDescriptor,\n  He = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Zr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Dr(a, o, e), e;\n  };\nlet zt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.unwatchConnection = void 0, this.openDesktopApp(), this.unwatchConnection = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].subscribe(t => {\n      this.isError = t.pairingError;\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unwatchConnection) == null || t.call(this);\n  }\n  onFormatAndRedirect(t) {\n    const {\n        desktop: a,\n        name: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      r = a === null || a === void 0 ? void 0 : a.native;\n    if (r) {\n      const e = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].formatNativeUrl(r, t, o);\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(e, \"_self\");\n    }\n  }\n  openDesktopApp() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].setPairingError(!1);\n    const {\n        pairingUri: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state,\n      a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData();\n    s.setRecentWallet(a), this.onFormatAndRedirect(t);\n  }\n  render() {\n    const {\n        name: t,\n        id: a,\n        image_id: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isMobile: r,\n        isInjected: e,\n        isWeb: i\n      } = s.getCachedRouterWalletPlatforms();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${t}\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${w.COPY_ICON}\" data-testid=\"view-desktop-connecting-header\"></w3m-modal-header><w3m-modal-content><w3m-connector-waiting walletId=\"${a}\" imageId=\"${o}\" label=\"${`Continue in ${t}...`}\" .isError=\"${this.isError}\" data-testid=\"view-desktop-connecting-waiting\"></w3m-connector-waiting></w3m-modal-content><w3m-info-footer data-testid=\"view-desktop-connecting-footer\"><w3m-text color=\"secondary\" variant=\"small-thin\">${`Connection can continue loading if ${t} is not installed on your device`}</w3m-text><w3m-platform-selection .isMobile=\"${r}\" .isInjected=\"${e}\" .isWeb=\"${i}\" .isRetry=\"${!0}\"><w3m-button .onClick=\"${this.openDesktopApp.bind(this)}\" .iconRight=\"${w.RETRY_ICON}\" data-testid=\"view-desktop-connecting-retry-button\">Retry</w3m-button></w3m-platform-selection></w3m-info-footer>`;\n  }\n};\nzt.styles = [p.globalCss, Rr], He([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], zt.prototype, \"isError\", 2), zt = He([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-desktop-connecting-view\")], zt);\nconst Hr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-info-text{margin:5px 0 15px;max-width:320px;text-align:center}.w3m-wallet-item{margin:0 -20px 0 0;padding-right:20px;display:flex;align-items:center;border-bottom:1px solid var(--w3m-color-bg-2)}.w3m-wallet-item:last-child{margin-bottom:-20px;border-bottom:0}.w3m-wallet-content{margin-left:20px;height:60px;display:flex;flex:1;align-items:center;justify-content:space-between}.w3m-footer-actions{display:flex;flex-direction:column;align-items:center;padding:20px 0;border-top:1px solid var(--w3m-color-bg-2)}w3m-wallet-image{display:block;width:40px;height:40px;border-radius:10px}`;\nvar Br = Object.defineProperty,\n  Sr = Object.getOwnPropertyDescriptor,\n  Ur = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Sr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Br(a, o, e), e;\n  };\nlet ve = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onGet(t) {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(t, \"_blank\");\n  }\n  render() {\n    const t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state.recomendedWallets.slice(0, 5),\n      a = R.manualWallets().slice(0, 5),\n      o = t.length,\n      r = a.length;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"Get a wallet\" data-testid=\"view-get-wallet-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-get-wallet-content\">${o ? t.map(e => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"w3m-wallet-item\" data-testid=\"view-get-wallet-${e.id}\"><w3m-wallet-image walletId=\"${e.id}\" imageId=\"${e.image_id}\"></w3m-wallet-image><div class=\"w3m-wallet-content\"><w3m-text variant=\"medium-regular\">${e.name}</w3m-text><w3m-button .iconRight=\"${w.ARROW_RIGHT_ICON}\" .onClick=\"${() => this.onGet(e.homepage)}\" data-testid=\"view-get-wallet-button-${e.id}\">Get</w3m-button></div></div>`) : null} ${r ? a.map(e => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"w3m-wallet-item\" data-testid=\"view-get-wallet-${e.id}\"><w3m-wallet-image walletId=\"${e.id}\"></w3m-wallet-image><div class=\"w3m-wallet-content\"><w3m-text variant=\"medium-regular\">${e.name}</w3m-text><w3m-button .iconRight=\"${w.ARROW_RIGHT_ICON}\" .onClick=\"${() => this.onGet(e.links.universal)}\" data-testid=\"view-get-wallet-button-${e.id}\">Get</w3m-button></div></div>`) : null}</w3m-modal-content><div class=\"w3m-footer-actions\"><w3m-text variant=\"medium-regular\">Not what you're looking for?</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">With hundreds of wallets out there, there's something for everyone</w3m-text><w3m-button .onClick=\"${s.openWalletExplorerUrl}\" .iconRight=\"${w.ARROW_UP_RIGHT_ICON}\" data-testid=\"view-get-wallet-explorer-button\">Explore Wallets</w3m-button></div>`;\n  }\n};\nve.styles = [p.globalCss, Hr], ve = Ur([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-get-wallet-view\")], ve);\nconst Vr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.w3m-footer-actions{display:flex;justify-content:center}.w3m-footer-actions w3m-button{margin:0 5px}.w3m-info-container{display:flex;flex-direction:column;justify-content:center;align-items:center;margin-bottom:20px}.w3m-info-container:last-child{margin-bottom:0}.w3m-info-text{margin-top:5px;text-align:center}.w3m-images svg{margin:0 2px 5px;width:55px;height:55px}.help-img-highlight{stroke:var(--w3m-color-overlay)}`;\nvar zr = Object.defineProperty,\n  Gr = Object.getOwnPropertyDescriptor,\n  Fr = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Gr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && zr(a, o, e), e;\n  };\nlet be = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.learnUrl = \"https://ethereum.org/en/wallets/\";\n  }\n  onGet() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ConfigCtrl\"].state.enableExplorer ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"GetWallet\") : s.openWalletExplorerUrl();\n  }\n  onLearnMore() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(this.learnUrl, \"_blank\");\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"What is a wallet?\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-info-container\"><div class=\"w3m-images\">${w.HELP_CHART_IMG} ${w.HELP_PAINTING_IMG} ${w.HELP_ETH_IMG}</div><w3m-text variant=\"medium-regular\">A home for your digital assets</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">A wallet lets you store, send and receive digital assets like cryptocurrencies and NFTs.</w3m-text></div><div class=\"w3m-info-container\"><div class=\"w3m-images\">${w.HELP_KEY_IMG} ${w.HELP_USER_IMG} ${w.HELP_LOCK_IMG}</div><w3m-text variant=\"medium-regular\">One login for all of web3</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">Log in to any app by connecting your wallet. Say goodbye to countless passwords!</w3m-text></div><div class=\"w3m-info-container\"><div class=\"w3m-images\">${w.HELP_COMPAS_IMG} ${w.HELP_NOUN_IMG} ${w.HELP_DAO_IMG}</div><w3m-text variant=\"medium-regular\">Your gateway to a new web</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">With your wallet, you can explore and interact with DeFi, NFTs, DAOs, and much more.</w3m-text></div><div class=\"w3m-footer-actions\"><w3m-button .onClick=\"${this.onGet.bind(this)}\" .iconLeft=\"${w.WALLET_ICON}\">Get a Wallet</w3m-button><w3m-button .onClick=\"${this.onLearnMore.bind(this)}\" .iconRight=\"${w.ARROW_UP_RIGHT_ICON}\">Learn More</w3m-button></div></w3m-modal-content>`;\n  }\n};\nbe.styles = [p.globalCss, Vr], be = Fr([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-help-view\")], be);\nconst qr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-text{text-align:center}`;\nvar Kr = Object.defineProperty,\n  Yr = Object.getOwnPropertyDescriptor,\n  Be = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Yr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Kr(a, o, e), e;\n  };\nlet Gt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.connector = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().getConnectorById(\"injected\"), this.openInjectedApp();\n  }\n  async openInjectedApp() {\n    const {\n      ready: t\n    } = this.connector;\n    t && (this.isError = !1, await s.handleConnectorConnection(\"injected\", () => {\n      this.isError = !0;\n    }));\n  }\n  render() {\n    const {\n        name: t,\n        id: a,\n        image_id: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isMobile: r,\n        isDesktop: e,\n        isWeb: i\n      } = s.getCachedRouterWalletPlatforms();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${t}\" data-testid=\"view-injected-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-injected-content\"><w3m-connector-waiting walletId=\"${a}\" imageId=\"${o}\" label=\"${`Continue in ${t}...`}\" .isError=\"${this.isError}\"></w3m-connector-waiting></w3m-modal-content><w3m-info-footer data-testid=\"view-injected-footer\"><w3m-text color=\"secondary\" variant=\"small-thin\">Connection can be declined if multiple wallets are installed or previous request is still active</w3m-text><w3m-platform-selection .isMobile=\"${r}\" .isDesktop=\"${e}\" .isWeb=\"${i}\" .isRetry=\"${!0}\"><w3m-button .onClick=\"${this.openInjectedApp.bind(this)}\" .disabled=\"${!this.isError}\" .iconRight=\"${w.RETRY_ICON}\">Retry</w3m-button></w3m-platform-selection></w3m-info-footer>`;\n  }\n};\nGt.styles = [p.globalCss, qr], Be([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Gt.prototype, \"isError\", 2), Gt = Be([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-injected-connecting-view\")], Gt);\nconst Qr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-text{text-align:center}w3m-button{margin-top:15px}`;\nvar Xr = Object.defineProperty,\n  Jr = Object.getOwnPropertyDescriptor,\n  ti = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Jr(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Xr(a, o, e), e;\n  };\nlet fe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onInstall(t) {\n    t && _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(t, \"_blank\");\n  }\n  render() {\n    const {\n      name: t,\n      id: a,\n      image_id: o,\n      homepage: r\n    } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${t}\" data-testid=\"view-install-wallet-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-install-wallet-content\"><w3m-connector-waiting walletId=\"${a}\" imageId=\"${o}\" label=\"Not Detected\" .isStale=\"${!0}\"></w3m-connector-waiting></w3m-modal-content><w3m-info-footer data-testid=\"view-install-wallet-footer\"><w3m-text color=\"secondary\" variant=\"small-thin\">${`Download ${t} to continue. If multiple browser extensions are installed, disable non ${t} ones and try again`}</w3m-text><w3m-button .onClick=\"${() => this.onInstall(r)}\" .iconLeft=\"${w.ARROW_DOWN_ICON}\" data-testid=\"view-install-wallet-download-button\">Download</w3m-button></w3m-info-footer>`;\n  }\n};\nfe.styles = [p.globalCss, Qr], fe = ti([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-install-wallet-view\")], fe);\nconst ei = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-wallet-image{border-radius:var(--w3m-wallet-icon-large-border-radius);width:96px;height:96px;margin-bottom:20px}w3m-info-footer{display:flex;width:100%}.w3m-app-store{justify-content:space-between}.w3m-app-store w3m-wallet-image{margin-right:10px;margin-bottom:0;width:28px;height:28px;border-radius:var(--w3m-wallet-icon-small-border-radius)}.w3m-app-store div{display:flex;align-items:center}.w3m-app-store w3m-button{margin-right:-10px}.w3m-note{flex-direction:column;align-items:center;padding:5px 0}.w3m-note w3m-text{text-align:center}w3m-platform-selection{margin-top:-15px}.w3m-note w3m-text{margin-top:15px}.w3m-note w3m-text span{color:var(--w3m-accent-color)}`;\nvar ai = Object.defineProperty,\n  oi = Object.getOwnPropertyDescriptor,\n  Se = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? oi(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ai(a, o, e), e;\n  };\nlet Ft = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.unwatchConnection = void 0, this.openMobileApp(), this.unwatchConnection = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].subscribe(t => {\n      this.isError = t.pairingError;\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unwatchConnection) == null || t.call(this);\n  }\n  onFormatAndRedirect(t, a = !1) {\n    const {\n        mobile: o,\n        name: r\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      e = o === null || o === void 0 ? void 0 : o.native,\n      i = o === null || o === void 0 ? void 0 : o.universal;\n    if (e && !a) {\n      const l = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].formatNativeUrl(e, t, r);\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(l, \"_self\");\n    } else if (i) {\n      const l = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].formatUniversalUrl(i, t, r);\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(l, \"_self\");\n    }\n  }\n  openMobileApp(t = !1) {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].setPairingError(!1);\n    const {\n        pairingUri: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state,\n      o = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData();\n    s.setRecentWallet(o), this.onFormatAndRedirect(a, t);\n  }\n  onGoToAppStore(t) {\n    t && _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(t, \"_blank\");\n  }\n  render() {\n    const {\n        name: t,\n        id: a,\n        image_id: o,\n        app: r,\n        mobile: e\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isWeb: i\n      } = s.getCachedRouterWalletPlatforms(),\n      l = r === null || r === void 0 ? void 0 : r.ios,\n      d = e === null || e === void 0 ? void 0 : e.universal;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${t}\" data-testid=\"view-mobile-connecting-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-mobile-connecting-content\"><w3m-connector-waiting walletId=\"${a}\" imageId=\"${o}\" label=\"Tap 'Open' to continue…\" .isError=\"${this.isError}\"></w3m-connector-waiting></w3m-modal-content><w3m-info-footer class=\"w3m-note\" data-testid=\"view-mobile-connecting-footer\"><w3m-platform-selection .isWeb=\"${i}\" .isRetry=\"${!0}\"><w3m-button .onClick=\"${() => this.openMobileApp(!1)}\" .iconRight=\"${w.RETRY_ICON}\">Retry</w3m-button></w3m-platform-selection>${d ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-text color=\"secondary\" variant=\"small-thin\">Still doesn't work? <span tabindex=\"0\" @click=\"${() => this.openMobileApp(!0)}\">Try this alternate link</span></w3m-text>` : null}</w3m-info-footer><w3m-info-footer class=\"w3m-app-store\" data-testid=\"view-mobile-connecting-footer\"><div><w3m-wallet-image walletId=\"${a}\" imageId=\"${o}\"></w3m-wallet-image><w3m-text>${`Get ${t}`}</w3m-text></div><w3m-button .iconRight=\"${w.ARROW_RIGHT_ICON}\" .onClick=\"${() => this.onGoToAppStore(l)}\" variant=\"ghost\" data-testid=\"view-mobile-connecting-app-store-button\">App Store</w3m-button></w3m-info-footer>`;\n  }\n};\nFt.styles = [p.globalCss, ei], Se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Ft.prototype, \"isError\", 2), Ft = Se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-mobile-connecting-view\")], Ft);\nconst ri = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-text{text-align:center}`;\nvar ii = Object.defineProperty,\n  li = Object.getOwnPropertyDescriptor,\n  ni = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? li(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && ii(a, o, e), e;\n  };\nlet xe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    const {\n        name: t,\n        id: a,\n        image_id: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isInjected: r,\n        isDesktop: e,\n        isWeb: i\n      } = s.getCachedRouterWalletPlatforms();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${t}\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${w.COPY_ICON}\" data-testid=\"view-mobile-qr-connecting-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-mobile-qr-connecting-content\"><w3m-walletconnect-qr walletId=\"${a}\" imageId=\"${o}\"></w3m-walletconnect-qr></w3m-modal-content><w3m-info-footer data-testid=\"view-mobile-qr-connecting-footer\"><w3m-text color=\"secondary\" variant=\"small-thin\">${`Scan this QR Code with your phone's camera or inside ${t} app`}</w3m-text><w3m-platform-selection .isDesktop=\"${e}\" .isInjected=\"${r}\" .isWeb=\"${i}\"></w3m-platform-selection></w3m-info-footer>`;\n  }\n};\nxe.styles = [p.globalCss, ri], xe = ni([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-mobile-qr-connecting-view\")], xe);\nvar si = Object.defineProperty,\n  ci = Object.getOwnPropertyDescriptor,\n  di = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ci(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && si(a, o, e), e;\n  };\nlet ye = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"Scan the code\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${w.COPY_ICON}\"></w3m-modal-header><w3m-modal-content><w3m-walletconnect-qr></w3m-walletconnect-qr></w3m-modal-content>`;\n  }\n};\nye.styles = [p.globalCss], ye = di([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-qrcode-view\")], ye);\nconst mi = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{display:grid;grid-template-columns:repeat(4,80px);margin:-5px -10px;justify-content:space-between}w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-info-footer w3m-text{text-align:center}`;\nvar Fe = Object.defineProperty,\n  hi = Object.defineProperties,\n  wi = Object.getOwnPropertyDescriptor,\n  pi = Object.getOwnPropertyDescriptors,\n  Ue = Object.getOwnPropertySymbols,\n  gi = Object.prototype.hasOwnProperty,\n  ui = Object.prototype.propertyIsEnumerable,\n  Ve = (t, a, o) => a in t ? Fe(t, a, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: o\n  }) : t[a] = o,\n  vi = (t, a) => {\n    for (var o in a || (a = {})) gi.call(a, o) && Ve(t, o, a[o]);\n    if (Ue) for (var o of Ue(a)) ui.call(a, o) && Ve(t, o, a[o]);\n    return t;\n  },\n  bi = (t, a) => hi(t, pi(a)),\n  Ce = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? wi(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Fe(a, o, e), e;\n  };\nlet Mt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.connectedChains = \"ALL\", this.isUnsupportedChains = !1, this.getConnectedChainIds();\n  }\n  async getConnectedChainIds() {\n    this.connectedChains = await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().getConnectedChainIds();\n  }\n  async onSelectChain(t) {\n    try {\n      const {\n          selectedChain: a,\n          isPreferInjected: o\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state,\n        {\n          isConnected: r\n        } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"AccountCtrl\"].state;\n      r ? (a === null || a === void 0 ? void 0 : a.id) === t.id ? _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].reset(\"Account\") : s.getWagmiWalletType() === '\"walletConnect\"' ? (await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().switchNetwork({\n        chainId: t.id\n      }), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].reset(\"Account\")) : _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"SwitchNetwork\", {\n        SwitchNetwork: t\n      }) : o ? (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].setSelectedChain(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ModalCtrl\"].close()) : (_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].setSelectedChain(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].push(\"ConnectWallet\"));\n    } catch (a) {\n      console.error(a), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(\"Unsupported chain\", \"error\");\n    }\n  }\n  isUnsuportedChainId(t) {\n    return typeof this.connectedChains == \"string\" && this.connectedChains !== \"ALL\" ? (this.isUnsupportedChains = !0, !0) : Array.isArray(this.connectedChains) && !this.connectedChains.includes(String(t)) ? (this.isUnsupportedChains = !0, !0) : !1;\n  }\n  render() {\n    const {\n        chains: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].state,\n      a = t === null || t === void 0 ? void 0 : t.map(r => bi(vi({}, r), {\n        unsupported: this.isUnsuportedChainId(r.id)\n      })),\n      o = a === null || a === void 0 ? void 0 : a.sort((r, e) => Number(r.unsupported) - Number(e.unsupported));\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"Select network\" data-testid=\"view-select-network-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-select-network-content\"><div>${o === null || o === void 0 ? void 0 : o.map(r => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-network-button name=\"${r.name}\" chainId=\"${r.id}\" .unsupported=\"${r.unsupported}\" .onClick=\"${async () => this.onSelectChain(r)}\" data-testid=\"view-select-network-button-${r.id}\">${r.name}</w3m-network-button>`)}</div></w3m-modal-content>${this.isUnsupportedChains ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-info-footer><w3m-text color=\"secondary\" variant=\"small-thin\">Your connected wallet may not support some of the networks available for this dapp</w3m-text></w3m-info-footer>` : null}`;\n  }\n};\nMt.styles = [p.globalCss, mi], Ce([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Mt.prototype, \"connectedChains\", 2), Ce([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Mt.prototype, \"isUnsupportedChains\", 2), Mt = Ce([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-select-network-view\")], Mt);\nconst fi = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-text{text-align:center}w3m-button{margin-top:15px}`;\nvar xi = Object.defineProperty,\n  yi = Object.getOwnPropertyDescriptor,\n  ze = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? yi(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && xi(a, o, e), e;\n  };\nlet qt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.onSwitchNetwork();\n  }\n  async onSwitchNetwork() {\n    try {\n      this.isError = !1;\n      const t = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getSwitchNetworkRouterData();\n      await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ClientCtrl\"].client().switchNetwork({\n        chainId: t.id\n      }), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"OptionsCtrl\"].setSelectedChain(t), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"RouterCtrl\"].reset(\"Account\");\n    } catch {\n      this.isError = !0;\n    }\n  }\n  render() {\n    const {\n      id: t,\n      name: a\n    } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getSwitchNetworkRouterData();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${`Connect to ${a}`}\" data-testid=\"view-switch-network-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-switch-network-content\"><w3m-network-waiting chainId=\"${t}\" label=\"Approve in your wallet\" .isError=\"${this.isError}\"></w3m-network-waiting></w3m-modal-content><w3m-info-footer data-testid=\"view-switch-network-footer\"><w3m-text color=\"secondary\" variant=\"small-thin\">Switch can be declined if chain is not supported by a wallet or previous request is still active</w3m-text><w3m-button .onClick=\"${this.onSwitchNetwork.bind(this)}\" .disabled=\"${!this.isError}\" .iconRight=\"${w.RETRY_ICON}\" data-testid=\"view-switch-network-retry-button\">Try Again</w3m-button></w3m-info-footer>`;\n  }\n};\nqt.styles = [p.globalCss, fi], ze([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], qt.prototype, \"isError\", 2), qt = ze([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-switch-network-view\")], qt);\nconst Ci = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-modal-content{height:clamp(200px,60vh,600px);display:block;overflow:scroll;scrollbar-width:none;position:relative;margin-top:1px}.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between;margin:-15px -10px;padding-top:20px}w3m-modal-content::after,w3m-modal-content::before{content:'';position:fixed;pointer-events:none;z-index:1;width:100%;height:20px;opacity:1}w3m-modal-content::before{box-shadow:0 -1px 0 0 var(--w3m-color-bg-1);background:linear-gradient(var(--w3m-color-bg-1),rgba(255,255,255,0))}w3m-modal-content::after{box-shadow:0 1px 0 0 var(--w3m-color-bg-1);background:linear-gradient(rgba(255,255,255,0),var(--w3m-color-bg-1));top:calc(100% - 20px)}w3m-modal-content::-webkit-scrollbar{display:none}.w3m-placeholder-block{display:flex;justify-content:center;align-items:center;height:100px;overflow:hidden}.w3m-empty,.w3m-loading{display:flex}.w3m-loading .w3m-placeholder-block{height:100%}.w3m-end-reached .w3m-placeholder-block{height:0;opacity:0}.w3m-empty .w3m-placeholder-block{opacity:1;height:100%}w3m-wallet-button{margin:calc((100% - 60px)/ 3) 0}`;\nvar $i = Object.defineProperty,\n  ki = Object.getOwnPropertyDescriptor,\n  Pt = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? ki(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && $i(a, o, e), e;\n  };\nconst $e = 40;\nlet ot = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.loading = !_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state.wallets.listings.length, this.firstFetch = !_web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state.wallets.listings.length, this.search = \"\", this.endReached = !1, this.intersectionObserver = void 0, this.searchDebounce = s.debounce(t => {\n      t.length >= 1 ? (this.firstFetch = !0, this.endReached = !1, this.search = t, _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].resetSearch(), this.fetchWallets()) : this.search && (this.search = \"\", this.endReached = this.isLastPage(), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].resetSearch());\n    });\n  }\n  firstUpdated() {\n    this.createPaginationObserver();\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.intersectionObserver) == null || t.disconnect();\n  }\n  get placeholderEl() {\n    return s.getShadowRootElement(this, \".w3m-placeholder-block\");\n  }\n  createPaginationObserver() {\n    this.intersectionObserver = new IntersectionObserver(([t]) => {\n      t.isIntersecting && !(this.search && this.firstFetch) && this.fetchWallets();\n    }), this.intersectionObserver.observe(this.placeholderEl);\n  }\n  isLastPage() {\n    const {\n        wallets: t,\n        search: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state,\n      {\n        listings: o,\n        total: r\n      } = this.search ? a : t;\n    return r <= $e || o.length >= r;\n  }\n  async fetchWallets() {\n    const {\n        wallets: t,\n        search: a,\n        injectedWallets: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state,\n      {\n        listings: r,\n        total: e,\n        page: i\n      } = this.search ? a : t;\n    if (!this.endReached && (this.firstFetch || e > $e && r.length < e)) try {\n      this.loading = !0;\n      const {\n          listings: l\n        } = await _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].getWallets({\n          page: this.firstFetch ? 1 : i + 1,\n          entries: $e,\n          search: this.search,\n          version: 2\n        }),\n        d = l.map(x => s.getWalletIcon(x)),\n        v = o.map(x => s.getWalletIcon(x));\n      await Promise.all([...d.map(async x => s.preloadImage(x)), ...v.map(async x => s.preloadImage(x)), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].wait(300)]), this.endReached = this.isLastPage();\n    } catch (l) {\n      console.error(l), _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ToastCtrl\"].openToast(s.getErrorMessage(l), \"error\");\n    } finally {\n      this.loading = !1, this.firstFetch = !1;\n    }\n  }\n  onConnect(t) {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isAndroid() ? s.handleMobileLinking(t) : s.goToConnectingView(t);\n  }\n  onSearchChange(t) {\n    const {\n      value: a\n    } = t.target;\n    this.searchDebounce(a);\n  }\n  render() {\n    const {\n        wallets: t,\n        search: a\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"ExplorerCtrl\"].state,\n      {\n        listings: o\n      } = this.search ? a : t,\n      r = this.loading && !o.length,\n      e = this.search.length >= 3;\n    let i = P.injectedWalletsTemplate(),\n      l = P.manualWalletsTemplate(),\n      d = P.recomendedWalletsTemplate(!0);\n    e && (i = i.filter(({\n      values: Z\n    }) => s.caseSafeIncludes(Z[0], this.search)), l = l.filter(({\n      values: Z\n    }) => s.caseSafeIncludes(Z[0], this.search)), d = d.filter(({\n      values: Z\n    }) => s.caseSafeIncludes(Z[0], this.search))), i = i.filter(Z => !d.find(_ => s.caseSafeIncludes(Z.values[0], _.values[0])));\n    const v = !this.loading && !o.length && !i.length && !d.length,\n      x = Math.max(i.length, o.length),\n      H = {\n        \"w3m-loading\": r,\n        \"w3m-end-reached\": this.endReached || !this.loading,\n        \"w3m-empty\": v\n      };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header data-testid=\"view-wallet-explorer-header\"><w3m-search-input .onChange=\"${this.onSearchChange.bind(this)}\"></w3m-search-input></w3m-modal-header><w3m-modal-content class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_3__[\"classMap\"])(H)}\" data-testid=\"view-wallet-explorer-content\"><div class=\"w3m-grid\">${r ? null : d} ${r ? null : [...Array(x)].map((Z, _) => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${l[_]} ${i[_]} ${o[_] ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-wallet-button imageId=\"${o[_].image_id}\" name=\"${o[_].name}\" walletId=\"${o[_].id}\" .onClick=\"${() => this.onConnect(o[_])}\" data-testid=\"view-wallet-explorer-button-${o[_].id}\"></w3m-wallet-button>` : null}`)}</div><div class=\"w3m-placeholder-block\">${v ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-text variant=\"big-bold\" color=\"secondary\">No results found</w3m-text>` : null} ${!v && this.loading ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-spinner></w3m-spinner>` : null}</div></w3m-modal-content>`;\n  }\n};\not.styles = [p.globalCss, Ci], Pt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ot.prototype, \"loading\", 2), Pt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ot.prototype, \"firstFetch\", 2), Pt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ot.prototype, \"search\", 2), Pt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ot.prototype, \"endReached\", 2), ot = Pt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-wallet-explorer-view\")], ot);\nconst Oi = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`w3m-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}w3m-text{text-align:center}`;\nvar Ii = Object.defineProperty,\n  Ei = Object.getOwnPropertyDescriptor,\n  Ge = (t, a, o, r) => {\n    for (var e = r > 1 ? void 0 : r ? Ei(a, o) : a, i = t.length - 1, l; i >= 0; i--) (l = t[i]) && (e = (r ? l(a, o, e) : l(e)) || e);\n    return r && e && Ii(a, o, e), e;\n  };\nlet Kt = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.unwatchConnection = void 0, this.openWebWallet(), this.unwatchConnection = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].subscribe(t => {\n      this.isError = t.pairingError;\n    });\n  }\n  disconnectedCallback() {\n    var t;\n    (t = this.unwatchConnection) == null || t.call(this);\n  }\n  onFormatAndRedirect(t) {\n    const {\n        desktop: a,\n        name: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      r = a === null || a === void 0 ? void 0 : a.universal;\n    if (r) {\n      const e = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].formatUniversalUrl(r, t, o);\n      _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].openHref(e, \"_blank\");\n    }\n  }\n  openWebWallet() {\n    _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].setPairingError(!1);\n    const {\n        pairingUri: t\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"WcConnectionCtrl\"].state,\n      a = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData();\n    s.setRecentWallet(a), this.onFormatAndRedirect(t);\n  }\n  render() {\n    const {\n        name: t,\n        id: a,\n        image_id: o\n      } = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isMobile: r,\n        isInjected: e,\n        isDesktop: i\n      } = s.getCachedRouterWalletPlatforms(),\n      l = _web3modal_core__WEBPACK_IMPORTED_MODULE_2__[\"CoreUtil\"].isMobile();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<w3m-modal-header title=\"${t}\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${w.COPY_ICON}\" data-testid=\"view-web-connecting-header\"></w3m-modal-header><w3m-modal-content data-testid=\"view-web-connecting-content\"><w3m-connector-waiting walletId=\"${a}\" imageId=\"${o}\" label=\"${`Continue in ${t}...`}\" .isError=\"${this.isError}\" data-testid=\"view-web-connecting-waiting\"></w3m-connector-waiting></w3m-modal-content><w3m-info-footer data-testid=\"view-web-connecting-footer\"><w3m-text color=\"secondary\" variant=\"small-thin\">${`${t} web app has opened in a new tab. Go there, accept the connection, and come back`}</w3m-text><w3m-platform-selection .isMobile=\"${r}\" .isInjected=\"${l ? !1 : e}\" .isDesktop=\"${l ? !1 : i}\" .isRetry=\"${!0}\"><w3m-button .onClick=\"${this.openWebWallet.bind(this)}\" .iconRight=\"${w.RETRY_ICON}\" data-testid=\"view-web-connecting-retry-button\">Retry</w3m-button></w3m-platform-selection></w3m-info-footer>`;\n  }\n};\nKt.styles = [p.globalCss, Oi], Ge([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Kt.prototype, \"isError\", 2), Kt = Ge([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"w3m-web-connecting-view\")], Kt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/lit/decorators.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/lit/decorators.js ***!
  \*******************************************************************/
/*! exports provided: customElement, property, state, eventOptions, query, queryAll, queryAsync, queryAssignedElements, queryAssignedNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/custom-element.js */ \"./node_modules/@lit/reactive-element/decorators/custom-element.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"customElement\", function() { return _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__[\"customElement\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/reactive-element/decorators/property.js */ \"./node_modules/@lit/reactive-element/decorators/property.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lit/reactive-element/decorators/state.js */ \"./node_modules/@lit/reactive-element/decorators/state.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"state\", function() { return _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__[\"state\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lit/reactive-element/decorators/event-options.js */ \"./node_modules/@lit/reactive-element/decorators/event-options.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"eventOptions\", function() { return _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__[\"eventOptions\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lit/reactive-element/decorators/query.js */ \"./node_modules/@lit/reactive-element/decorators/query.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__[\"query\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-all.js */ \"./node_modules/@lit/reactive-element/decorators/query-all.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__[\"queryAll\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-async.js */ \"./node_modules/@lit/reactive-element/decorators/query-async.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAsync\", function() { return _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__[\"queryAsync\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-assigned-elements.js */ \"./node_modules/@lit/reactive-element/decorators/query-assigned-elements.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAssignedElements\", function() { return _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__[\"queryAssignedElements\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-assigned-nodes.js */ \"./node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAssignedNodes\", function() { return _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__[\"queryAssignedNodes\"]; });\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9saXQvZGVjb3JhdG9ycy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/lit/decorators.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/lit/directives/class-map.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/lit/directives/class-map.js ***!
  \*****************************************************************************/
/*! exports provided: classMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/class-map.js */ \"./node_modules/lit-html/directives/class-map.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"classMap\", function() { return lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_0__[\"classMap\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9saXQvZGlyZWN0aXZlcy9jbGFzcy1tYXAuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/lit/directives/class-map.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/lit/directives/if-defined.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/lit/directives/if-defined.js ***!
  \******************************************************************************/
/*! exports provided: ifDefined */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/if-defined.js */ \"./node_modules/lit-html/directives/if-defined.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ifDefined\", function() { return lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_0__[\"ifDefined\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9saXQvZGlyZWN0aXZlcy9pZi1kZWZpbmVkLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/lit/directives/if-defined.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/lit/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/lit/index.js ***!
  \**************************************************************/
/*! exports provided: CSSResult, adoptStyles, css, getCompatibleStyle, supportsAdoptingStyleSheets, unsafeCSS, ReactiveElement, defaultConverter, notEqual, _$LH, html, noChange, nothing, render, svg, LitElement, UpdatingElement, _$LE, isServer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element */ \"./node_modules/@lit/reactive-element/reactive-element.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-element/lit-element.js */ \"./node_modules/lit-element/lit-element.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CSSResult\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"adoptStyles\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"adoptStyles\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"css\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getCompatibleStyle\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"getCompatibleStyle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"supportsAdoptingStyleSheets\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"supportsAdoptingStyleSheets\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unsafeCSS\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"unsafeCSS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ReactiveElement\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"ReactiveElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultConverter\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"defaultConverter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notEqual\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"notEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_$LH\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"_$LH\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"html\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noChange\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"svg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LitElement\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"LitElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UpdatingElement\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"UpdatingElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_$LE\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"_$LE\"]; });\n\n/* harmony import */ var lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit-html/is-server.js */ \"./node_modules/lit-html/is-server.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isServer\", function() { return lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__[\"isServer\"]; });\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9saXQvaW5kZXguanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/lit/index.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/browser.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const canPromise = __webpack_require__(/*! ./can-promise */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/can-promise.js\");\nconst QRCode = __webpack_require__(/*! ./core/qrcode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/qrcode.js\");\nconst CanvasRenderer = __webpack_require__(/*! ./renderer/canvas */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/canvas.js\");\nconst SvgRenderer = __webpack_require__(/*! ./renderer/svg-tag.js */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/svg-tag.js\");\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1);\n  const argsNum = args.length;\n  const isLastArgCb = typeof args[argsNum - 1] === 'function';\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument');\n  }\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided');\n    }\n    if (argsNum === 2) {\n      cb = text;\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts;\n        opts = undefined;\n      } else {\n        cb = opts;\n        opts = text;\n        text = canvas;\n        canvas = undefined;\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided');\n    }\n    if (argsNum === 1) {\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text;\n      text = canvas;\n      canvas = undefined;\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts);\n        resolve(renderFunc(data, canvas, opts));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n  try {\n    const data = QRCode.create(text, opts);\n    cb(null, renderFunc(data, canvas, opts));\n  } catch (e) {\n    cb(e);\n  }\n}\nexports.create = QRCode.create;\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9icm93c2VyLmpzPzc4MTAiXSwibmFtZXMiOlsiY2FuUHJvbWlzZSIsInJlcXVpcmUiLCJRUkNvZGUiLCJDYW52YXNSZW5kZXJlciIsIlN2Z1JlbmRlcmVyIiwicmVuZGVyQ2FudmFzIiwicmVuZGVyRnVuYyIsImNhbnZhcyIsInRleHQiLCJvcHRzIiwiY2IiLCJhcmdzIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwiYXJnc051bSIsImxlbmd0aCIsImlzTGFzdEFyZ0NiIiwiRXJyb3IiLCJ1bmRlZmluZWQiLCJnZXRDb250ZXh0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJkYXRhIiwiY3JlYXRlIiwiZSIsImV4cG9ydHMiLCJ0b0NhbnZhcyIsImJpbmQiLCJyZW5kZXIiLCJ0b0RhdGFVUkwiLCJyZW5kZXJUb0RhdGFVUkwiLCJ0b1N0cmluZyIsIl8iXSwibWFwcGluZ3MiOiJBQUNBLE1BQU1BLFVBQVUsR0FBR0MsbUJBQU8sQ0FBQywwRkFBZSxDQUFDO0FBRTNDLE1BQU1DLE1BQU0sR0FBR0QsbUJBQU8sQ0FBQywwRkFBZSxDQUFDO0FBQ3ZDLE1BQU1FLGNBQWMsR0FBR0YsbUJBQU8sQ0FBQyxrR0FBbUIsQ0FBQztBQUNuRCxNQUFNRyxXQUFXLEdBQUdILG1CQUFPLENBQUMsdUdBQXVCLENBQUM7QUFFcEQsU0FBU0ksWUFBWUEsQ0FBRUMsVUFBVSxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxFQUFFLEVBQUU7RUFDekQsTUFBTUMsSUFBSSxHQUFHLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDQyxJQUFJLENBQUNDLFNBQVMsRUFBRSxDQUFDLENBQUM7RUFDeEMsTUFBTUMsT0FBTyxHQUFHSixJQUFJLENBQUNLLE1BQU07RUFDM0IsTUFBTUMsV0FBVyxHQUFHLE9BQU9OLElBQUksQ0FBQ0ksT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLFVBQVU7RUFFM0QsSUFBSSxDQUFDRSxXQUFXLElBQUksQ0FBQ2pCLFVBQVUsQ0FBQyxDQUFDLEVBQUU7SUFDakMsTUFBTSxJQUFJa0IsS0FBSyxDQUFDLG9DQUFvQyxDQUFDO0VBQ3ZEO0VBRUEsSUFBSUQsV0FBVyxFQUFFO0lBQ2YsSUFBSUYsT0FBTyxHQUFHLENBQUMsRUFBRTtNQUNmLE1BQU0sSUFBSUcsS0FBSyxDQUFDLDRCQUE0QixDQUFDO0lBQy9DO0lBRUEsSUFBSUgsT0FBTyxLQUFLLENBQUMsRUFBRTtNQUNqQkwsRUFBRSxHQUFHRixJQUFJO01BQ1RBLElBQUksR0FBR0QsTUFBTTtNQUNiQSxNQUFNLEdBQUdFLElBQUksR0FBR1UsU0FBUztJQUMzQixDQUFDLE1BQU0sSUFBSUosT0FBTyxLQUFLLENBQUMsRUFBRTtNQUN4QixJQUFJUixNQUFNLENBQUNhLFVBQVUsSUFBSSxPQUFPVixFQUFFLEtBQUssV0FBVyxFQUFFO1FBQ2xEQSxFQUFFLEdBQUdELElBQUk7UUFDVEEsSUFBSSxHQUFHVSxTQUFTO01BQ2xCLENBQUMsTUFBTTtRQUNMVCxFQUFFLEdBQUdELElBQUk7UUFDVEEsSUFBSSxHQUFHRCxJQUFJO1FBQ1hBLElBQUksR0FBR0QsTUFBTTtRQUNiQSxNQUFNLEdBQUdZLFNBQVM7TUFDcEI7SUFDRjtFQUNGLENBQUMsTUFBTTtJQUNMLElBQUlKLE9BQU8sR0FBRyxDQUFDLEVBQUU7TUFDZixNQUFNLElBQUlHLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQztJQUMvQztJQUVBLElBQUlILE9BQU8sS0FBSyxDQUFDLEVBQUU7TUFDakJQLElBQUksR0FBR0QsTUFBTTtNQUNiQSxNQUFNLEdBQUdFLElBQUksR0FBR1UsU0FBUztJQUMzQixDQUFDLE1BQU0sSUFBSUosT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDUixNQUFNLENBQUNhLFVBQVUsRUFBRTtNQUM5Q1gsSUFBSSxHQUFHRCxJQUFJO01BQ1hBLElBQUksR0FBR0QsTUFBTTtNQUNiQSxNQUFNLEdBQUdZLFNBQVM7SUFDcEI7SUFFQSxPQUFPLElBQUlFLE9BQU8sQ0FBQyxVQUFVQyxPQUFPLEVBQUVDLE1BQU0sRUFBRTtNQUM1QyxJQUFJO1FBQ0YsTUFBTUMsSUFBSSxHQUFHdEIsTUFBTSxDQUFDdUIsTUFBTSxDQUFDakIsSUFBSSxFQUFFQyxJQUFJLENBQUM7UUFDdENhLE9BQU8sQ0FBQ2hCLFVBQVUsQ0FBQ2tCLElBQUksRUFBRWpCLE1BQU0sRUFBRUUsSUFBSSxDQUFDLENBQUM7TUFDekMsQ0FBQyxDQUFDLE9BQU9pQixDQUFDLEVBQUU7UUFDVkgsTUFBTSxDQUFDRyxDQUFDLENBQUM7TUFDWDtJQUNGLENBQUMsQ0FBQztFQUNKO0VBRUEsSUFBSTtJQUNGLE1BQU1GLElBQUksR0FBR3RCLE1BQU0sQ0FBQ3VCLE1BQU0sQ0FBQ2pCLElBQUksRUFBRUMsSUFBSSxDQUFDO0lBQ3RDQyxFQUFFLENBQUMsSUFBSSxFQUFFSixVQUFVLENBQUNrQixJQUFJLEVBQUVqQixNQUFNLEVBQUVFLElBQUksQ0FBQyxDQUFDO0VBQzFDLENBQUMsQ0FBQyxPQUFPaUIsQ0FBQyxFQUFFO0lBQ1ZoQixFQUFFLENBQUNnQixDQUFDLENBQUM7RUFDUDtBQUNGO0FBRUFDLE9BQU8sQ0FBQ0YsTUFBTSxHQUFHdkIsTUFBTSxDQUFDdUIsTUFBTTtBQUM5QkUsT0FBTyxDQUFDQyxRQUFRLEdBQUd2QixZQUFZLENBQUN3QixJQUFJLENBQUMsSUFBSSxFQUFFMUIsY0FBYyxDQUFDMkIsTUFBTSxDQUFDO0FBQ2pFSCxPQUFPLENBQUNJLFNBQVMsR0FBRzFCLFlBQVksQ0FBQ3dCLElBQUksQ0FBQyxJQUFJLEVBQUUxQixjQUFjLENBQUM2QixlQUFlLENBQUM7O0FBRTNFO0FBQ0FMLE9BQU8sQ0FBQ00sUUFBUSxHQUFHNUIsWUFBWSxDQUFDd0IsSUFBSSxDQUFDLElBQUksRUFBRSxVQUFVTCxJQUFJLEVBQUVVLENBQUMsRUFBRXpCLElBQUksRUFBRTtFQUNsRSxPQUFPTCxXQUFXLENBQUMwQixNQUFNLENBQUNOLElBQUksRUFBRWYsSUFBSSxDQUFDO0FBQ3ZDLENBQUMsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2Jyb3dzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IGNhblByb21pc2UgPSByZXF1aXJlKCcuL2Nhbi1wcm9taXNlJylcblxuY29uc3QgUVJDb2RlID0gcmVxdWlyZSgnLi9jb3JlL3FyY29kZScpXG5jb25zdCBDYW52YXNSZW5kZXJlciA9IHJlcXVpcmUoJy4vcmVuZGVyZXIvY2FudmFzJylcbmNvbnN0IFN2Z1JlbmRlcmVyID0gcmVxdWlyZSgnLi9yZW5kZXJlci9zdmctdGFnLmpzJylcblxuZnVuY3Rpb24gcmVuZGVyQ2FudmFzIChyZW5kZXJGdW5jLCBjYW52YXMsIHRleHQsIG9wdHMsIGNiKSB7XG4gIGNvbnN0IGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSlcbiAgY29uc3QgYXJnc051bSA9IGFyZ3MubGVuZ3RoXG4gIGNvbnN0IGlzTGFzdEFyZ0NiID0gdHlwZW9mIGFyZ3NbYXJnc051bSAtIDFdID09PSAnZnVuY3Rpb24nXG5cbiAgaWYgKCFpc0xhc3RBcmdDYiAmJiAhY2FuUHJvbWlzZSgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYWxsYmFjayByZXF1aXJlZCBhcyBsYXN0IGFyZ3VtZW50JylcbiAgfVxuXG4gIGlmIChpc0xhc3RBcmdDYikge1xuICAgIGlmIChhcmdzTnVtIDwgMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb28gZmV3IGFyZ3VtZW50cyBwcm92aWRlZCcpXG4gICAgfVxuXG4gICAgaWYgKGFyZ3NOdW0gPT09IDIpIHtcbiAgICAgIGNiID0gdGV4dFxuICAgICAgdGV4dCA9IGNhbnZhc1xuICAgICAgY2FudmFzID0gb3B0cyA9IHVuZGVmaW5lZFxuICAgIH0gZWxzZSBpZiAoYXJnc051bSA9PT0gMykge1xuICAgICAgaWYgKGNhbnZhcy5nZXRDb250ZXh0ICYmIHR5cGVvZiBjYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY2IgPSBvcHRzXG4gICAgICAgIG9wdHMgPSB1bmRlZmluZWRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNiID0gb3B0c1xuICAgICAgICBvcHRzID0gdGV4dFxuICAgICAgICB0ZXh0ID0gY2FudmFzXG4gICAgICAgIGNhbnZhcyA9IHVuZGVmaW5lZFxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoYXJnc051bSA8IDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVG9vIGZldyBhcmd1bWVudHMgcHJvdmlkZWQnKVxuICAgIH1cblxuICAgIGlmIChhcmdzTnVtID09PSAxKSB7XG4gICAgICB0ZXh0ID0gY2FudmFzXG4gICAgICBjYW52YXMgPSBvcHRzID0gdW5kZWZpbmVkXG4gICAgfSBlbHNlIGlmIChhcmdzTnVtID09PSAyICYmICFjYW52YXMuZ2V0Q29udGV4dCkge1xuICAgICAgb3B0cyA9IHRleHRcbiAgICAgIHRleHQgPSBjYW52YXNcbiAgICAgIGNhbnZhcyA9IHVuZGVmaW5lZFxuICAgIH1cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBkYXRhID0gUVJDb2RlLmNyZWF0ZSh0ZXh0LCBvcHRzKVxuICAgICAgICByZXNvbHZlKHJlbmRlckZ1bmMoZGF0YSwgY2FudmFzLCBvcHRzKSlcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IFFSQ29kZS5jcmVhdGUodGV4dCwgb3B0cylcbiAgICBjYihudWxsLCByZW5kZXJGdW5jKGRhdGEsIGNhbnZhcywgb3B0cykpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjYihlKVxuICB9XG59XG5cbmV4cG9ydHMuY3JlYXRlID0gUVJDb2RlLmNyZWF0ZVxuZXhwb3J0cy50b0NhbnZhcyA9IHJlbmRlckNhbnZhcy5iaW5kKG51bGwsIENhbnZhc1JlbmRlcmVyLnJlbmRlcilcbmV4cG9ydHMudG9EYXRhVVJMID0gcmVuZGVyQ2FudmFzLmJpbmQobnVsbCwgQ2FudmFzUmVuZGVyZXIucmVuZGVyVG9EYXRhVVJMKVxuXG4vLyBvbmx5IHN2ZyBmb3Igbm93LlxuZXhwb3J0cy50b1N0cmluZyA9IHJlbmRlckNhbnZhcy5iaW5kKG51bGwsIGZ1bmN0aW9uIChkYXRhLCBfLCBvcHRzKSB7XG4gIHJldHVybiBTdmdSZW5kZXJlci5yZW5kZXIoZGF0YSwgb3B0cylcbn0pXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/browser.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/can-promise.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/can-promise.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jYW4tcHJvbWlzZS5qcz9lMDc3Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJQcm9taXNlIiwicHJvdG90eXBlIiwidGhlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBQSxNQUFNLENBQUNDLE9BQU8sR0FBRyxZQUFZO0VBQzNCLE9BQU8sT0FBT0MsT0FBTyxLQUFLLFVBQVUsSUFBSUEsT0FBTyxDQUFDQyxTQUFTLElBQUlELE9BQU8sQ0FBQ0MsU0FBUyxDQUFDQyxJQUFJO0FBQ3JGLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jYW4tcHJvbWlzZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGNhbi1wcm9taXNlIGhhcyBhIGNyYXNoIGluIHNvbWUgdmVyc2lvbnMgb2YgcmVhY3QgbmF0aXZlIHRoYXQgZG9udCBoYXZlXG4vLyBzdGFuZGFyZCBnbG9iYWwgb2JqZWN0c1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NvbGRhaXIvbm9kZS1xcmNvZGUvaXNzdWVzLzE1N1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiBQcm9taXNlID09PSAnZnVuY3Rpb24nICYmIFByb21pc2UucHJvdG90eXBlICYmIFByb21pc2UucHJvdG90eXBlLnRoZW5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/can-promise.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alignment-pattern.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alignment-pattern.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\").getSymbolSize;\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords(version) {\n  if (version === 1) return [];\n  const posCount = Math.floor(version / 7) + 2;\n  const size = getSymbolSize(version);\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n  const positions = [size - 7]; // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals;\n  }\n  positions.push(6); // First coord is always 6\n\n  return positions.reverse();\n};\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions(version) {\n  const coords = [];\n  const pos = exports.getRowColCoords(version);\n  const posLength = pos.length;\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if (i === 0 && j === 0 ||\n      // top-left\n      i === 0 && j === posLength - 1 ||\n      // bottom-left\n      i === posLength - 1 && j === 0) {\n        // top-right\n        continue;\n      }\n      coords.push([pos[i], pos[j]]);\n    }\n  }\n  return coords;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2FsaWdubWVudC1wYXR0ZXJuLmpzPzFlMGMiXSwibmFtZXMiOlsiZ2V0U3ltYm9sU2l6ZSIsInJlcXVpcmUiLCJleHBvcnRzIiwiZ2V0Um93Q29sQ29vcmRzIiwidmVyc2lvbiIsInBvc0NvdW50IiwiTWF0aCIsImZsb29yIiwic2l6ZSIsImludGVydmFscyIsImNlaWwiLCJwb3NpdGlvbnMiLCJpIiwicHVzaCIsInJldmVyc2UiLCJnZXRQb3NpdGlvbnMiLCJjb29yZHMiLCJwb3MiLCJwb3NMZW5ndGgiLCJsZW5ndGgiLCJqIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUEsYUFBYSxHQUFHQyxtQkFBTyxDQUFDLG1GQUFTLENBQUMsQ0FBQ0QsYUFBYTs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRSxPQUFPLENBQUNDLGVBQWUsR0FBRyxTQUFTQSxlQUFlQSxDQUFFQyxPQUFPLEVBQUU7RUFDM0QsSUFBSUEsT0FBTyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUU7RUFFNUIsTUFBTUMsUUFBUSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsT0FBTyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7RUFDNUMsTUFBTUksSUFBSSxHQUFHUixhQUFhLENBQUNJLE9BQU8sQ0FBQztFQUNuQyxNQUFNSyxTQUFTLEdBQUdELElBQUksS0FBSyxHQUFHLEdBQUcsRUFBRSxHQUFHRixJQUFJLENBQUNJLElBQUksQ0FBQyxDQUFDRixJQUFJLEdBQUcsRUFBRSxLQUFLLENBQUMsR0FBR0gsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztFQUNyRixNQUFNTSxTQUFTLEdBQUcsQ0FBQ0gsSUFBSSxHQUFHLENBQUMsQ0FBQyxFQUFDOztFQUU3QixLQUFLLElBQUlJLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR1AsUUFBUSxHQUFHLENBQUMsRUFBRU8sQ0FBQyxFQUFFLEVBQUU7SUFDckNELFNBQVMsQ0FBQ0MsQ0FBQyxDQUFDLEdBQUdELFNBQVMsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHSCxTQUFTO0VBQzdDO0VBRUFFLFNBQVMsQ0FBQ0UsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFDOztFQUVsQixPQUFPRixTQUFTLENBQUNHLE9BQU8sQ0FBQyxDQUFDO0FBQzVCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBWixPQUFPLENBQUNhLFlBQVksR0FBRyxTQUFTQSxZQUFZQSxDQUFFWCxPQUFPLEVBQUU7RUFDckQsTUFBTVksTUFBTSxHQUFHLEVBQUU7RUFDakIsTUFBTUMsR0FBRyxHQUFHZixPQUFPLENBQUNDLGVBQWUsQ0FBQ0MsT0FBTyxDQUFDO0VBQzVDLE1BQU1jLFNBQVMsR0FBR0QsR0FBRyxDQUFDRSxNQUFNO0VBRTVCLEtBQUssSUFBSVAsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTSxTQUFTLEVBQUVOLENBQUMsRUFBRSxFQUFFO0lBQ2xDLEtBQUssSUFBSVEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRixTQUFTLEVBQUVFLENBQUMsRUFBRSxFQUFFO01BQ2xDO01BQ0EsSUFBS1IsQ0FBQyxLQUFLLENBQUMsSUFBSVEsQ0FBQyxLQUFLLENBQUM7TUFBSztNQUN2QlIsQ0FBQyxLQUFLLENBQUMsSUFBSVEsQ0FBQyxLQUFLRixTQUFTLEdBQUcsQ0FBRTtNQUFJO01BQ25DTixDQUFDLEtBQUtNLFNBQVMsR0FBRyxDQUFDLElBQUlFLENBQUMsS0FBSyxDQUFFLEVBQUU7UUFBRTtRQUN0QztNQUNGO01BRUFKLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDLENBQUNJLEdBQUcsQ0FBQ0wsQ0FBQyxDQUFDLEVBQUVLLEdBQUcsQ0FBQ0csQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvQjtFQUNGO0VBRUEsT0FBT0osTUFBTTtBQUNmLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2FsaWdubWVudC1wYXR0ZXJuLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbGlnbm1lbnQgcGF0dGVybiBhcmUgZml4ZWQgcmVmZXJlbmNlIHBhdHRlcm4gaW4gZGVmaW5lZCBwb3NpdGlvbnNcbiAqIGluIGEgbWF0cml4IHN5bWJvbG9neSwgd2hpY2ggZW5hYmxlcyB0aGUgZGVjb2RlIHNvZnR3YXJlIHRvIHJlLXN5bmNocm9uaXNlXG4gKiB0aGUgY29vcmRpbmF0ZSBtYXBwaW5nIG9mIHRoZSBpbWFnZSBtb2R1bGVzIGluIHRoZSBldmVudCBvZiBtb2RlcmF0ZSBhbW91bnRzXG4gKiBvZiBkaXN0b3J0aW9uIG9mIHRoZSBpbWFnZS5cbiAqXG4gKiBBbGlnbm1lbnQgcGF0dGVybnMgYXJlIHByZXNlbnQgb25seSBpbiBRUiBDb2RlIHN5bWJvbHMgb2YgdmVyc2lvbiAyIG9yIGxhcmdlclxuICogYW5kIHRoZWlyIG51bWJlciBkZXBlbmRzIG9uIHRoZSBzeW1ib2wgdmVyc2lvbi5cbiAqL1xuXG5jb25zdCBnZXRTeW1ib2xTaXplID0gcmVxdWlyZSgnLi91dGlscycpLmdldFN5bWJvbFNpemVcblxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIHJvdy9jb2x1bW4gY29vcmRpbmF0ZXMgb2YgdGhlIGNlbnRlciBtb2R1bGUgb2YgZWFjaCBhbGlnbm1lbnQgcGF0dGVyblxuICogZm9yIHRoZSBzcGVjaWZpZWQgUVIgQ29kZSB2ZXJzaW9uLlxuICpcbiAqIFRoZSBhbGlnbm1lbnQgcGF0dGVybnMgYXJlIHBvc2l0aW9uZWQgc3ltbWV0cmljYWxseSBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgZGlhZ29uYWxcbiAqIHJ1bm5pbmcgZnJvbSB0aGUgdG9wIGxlZnQgY29ybmVyIG9mIHRoZSBzeW1ib2wgdG8gdGhlIGJvdHRvbSByaWdodCBjb3JuZXIuXG4gKlxuICogU2luY2UgcG9zaXRpb25zIGFyZSBzaW1tZXRyaWNhbCBvbmx5IGhhbGYgb2YgdGhlIGNvb3JkaW5hdGVzIGFyZSByZXR1cm5lZC5cbiAqIEVhY2ggaXRlbSBvZiB0aGUgYXJyYXkgd2lsbCByZXByZXNlbnQgaW4gdHVybiB0aGUgeCBhbmQgeSBjb29yZGluYXRlLlxuICogQHNlZSB7QGxpbmsgZ2V0UG9zaXRpb25zfVxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge0FycmF5fSAgICAgICAgICBBcnJheSBvZiBjb29yZGluYXRlXG4gKi9cbmV4cG9ydHMuZ2V0Um93Q29sQ29vcmRzID0gZnVuY3Rpb24gZ2V0Um93Q29sQ29vcmRzICh2ZXJzaW9uKSB7XG4gIGlmICh2ZXJzaW9uID09PSAxKSByZXR1cm4gW11cblxuICBjb25zdCBwb3NDb3VudCA9IE1hdGguZmxvb3IodmVyc2lvbiAvIDcpICsgMlxuICBjb25zdCBzaXplID0gZ2V0U3ltYm9sU2l6ZSh2ZXJzaW9uKVxuICBjb25zdCBpbnRlcnZhbHMgPSBzaXplID09PSAxNDUgPyAyNiA6IE1hdGguY2VpbCgoc2l6ZSAtIDEzKSAvICgyICogcG9zQ291bnQgLSAyKSkgKiAyXG4gIGNvbnN0IHBvc2l0aW9ucyA9IFtzaXplIC0gN10gLy8gTGFzdCBjb29yZCBpcyBhbHdheXMgKHNpemUgLSA3KVxuXG4gIGZvciAobGV0IGkgPSAxOyBpIDwgcG9zQ291bnQgLSAxOyBpKyspIHtcbiAgICBwb3NpdGlvbnNbaV0gPSBwb3NpdGlvbnNbaSAtIDFdIC0gaW50ZXJ2YWxzXG4gIH1cblxuICBwb3NpdGlvbnMucHVzaCg2KSAvLyBGaXJzdCBjb29yZCBpcyBhbHdheXMgNlxuXG4gIHJldHVybiBwb3NpdGlvbnMucmV2ZXJzZSgpXG59XG5cbi8qKlxuICogUmV0dXJucyBhbiBhcnJheSBjb250YWluaW5nIHRoZSBwb3NpdGlvbnMgb2YgZWFjaCBhbGlnbm1lbnQgcGF0dGVybi5cbiAqIEVhY2ggYXJyYXkncyBlbGVtZW50IHJlcHJlc2VudCB0aGUgY2VudGVyIHBvaW50IG9mIHRoZSBwYXR0ZXJuIGFzICh4LCB5KSBjb29yZGluYXRlc1xuICpcbiAqIENvb3JkaW5hdGVzIGFyZSBjYWxjdWxhdGVkIGV4cGFuZGluZyB0aGUgcm93L2NvbHVtbiBjb29yZGluYXRlcyByZXR1cm5lZCBieSB7QGxpbmsgZ2V0Um93Q29sQ29vcmRzfVxuICogYW5kIGZpbHRlcmluZyBvdXQgdGhlIGl0ZW1zIHRoYXQgb3ZlcmxhcHMgd2l0aCBmaW5kZXIgcGF0dGVyblxuICpcbiAqIEBleGFtcGxlXG4gKiBGb3IgYSBWZXJzaW9uIDcgc3ltYm9sIHtAbGluayBnZXRSb3dDb2xDb29yZHN9IHJldHVybnMgdmFsdWVzIDYsIDIyIGFuZCAzOC5cbiAqIFRoZSBhbGlnbm1lbnQgcGF0dGVybnMsIHRoZXJlZm9yZSwgYXJlIHRvIGJlIGNlbnRlcmVkIG9uIChyb3csIGNvbHVtbilcbiAqIHBvc2l0aW9ucyAoNiwyMiksICgyMiw2KSwgKDIyLDIyKSwgKDIyLDM4KSwgKDM4LDIyKSwgKDM4LDM4KS5cbiAqIE5vdGUgdGhhdCB0aGUgY29vcmRpbmF0ZXMgKDYsNiksICg2LDM4KSwgKDM4LDYpIGFyZSBvY2N1cGllZCBieSBmaW5kZXIgcGF0dGVybnNcbiAqIGFuZCBhcmUgbm90IHRoZXJlZm9yZSB1c2VkIGZvciBhbGlnbm1lbnQgcGF0dGVybnMuXG4gKlxuICogbGV0IHBvcyA9IGdldFBvc2l0aW9ucyg3KVxuICogLy8gW1s2LDIyXSwgWzIyLDZdLCBbMjIsMjJdLCBbMjIsMzhdLCBbMzgsMjJdLCBbMzgsMzhdXVxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge0FycmF5fSAgICAgICAgICBBcnJheSBvZiBjb29yZGluYXRlc1xuICovXG5leHBvcnRzLmdldFBvc2l0aW9ucyA9IGZ1bmN0aW9uIGdldFBvc2l0aW9ucyAodmVyc2lvbikge1xuICBjb25zdCBjb29yZHMgPSBbXVxuICBjb25zdCBwb3MgPSBleHBvcnRzLmdldFJvd0NvbENvb3Jkcyh2ZXJzaW9uKVxuICBjb25zdCBwb3NMZW5ndGggPSBwb3MubGVuZ3RoXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb3NMZW5ndGg7IGkrKykge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgcG9zTGVuZ3RoOyBqKyspIHtcbiAgICAgIC8vIFNraXAgaWYgcG9zaXRpb24gaXMgb2NjdXBpZWQgYnkgZmluZGVyIHBhdHRlcm5zXG4gICAgICBpZiAoKGkgPT09IDAgJiYgaiA9PT0gMCkgfHwgLy8gdG9wLWxlZnRcbiAgICAgICAgICAoaSA9PT0gMCAmJiBqID09PSBwb3NMZW5ndGggLSAxKSB8fCAvLyBib3R0b20tbGVmdFxuICAgICAgICAgIChpID09PSBwb3NMZW5ndGggLSAxICYmIGogPT09IDApKSB7IC8vIHRvcC1yaWdodFxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBjb29yZHMucHVzaChbcG9zW2ldLCBwb3Nbal1dKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb29yZHNcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alignment-pattern.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alphanumeric-data.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alphanumeric-data.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':'];\nfunction AlphanumericData(data) {\n  this.mode = Mode.ALPHANUMERIC;\n  this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n  return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n  let i;\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11);\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n  }\n};\nmodule.exports = AlphanumericData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2FscGhhbnVtZXJpYy1kYXRhLmpzP2MyMjgiXSwibmFtZXMiOlsiTW9kZSIsInJlcXVpcmUiLCJBTFBIQV9OVU1fQ0hBUlMiLCJBbHBoYW51bWVyaWNEYXRhIiwiZGF0YSIsIm1vZGUiLCJBTFBIQU5VTUVSSUMiLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwiTWF0aCIsImZsb29yIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwidmFsdWUiLCJpbmRleE9mIiwicHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLGlGQUFRLENBQUM7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1DLGVBQWUsR0FBRyxDQUN0QixHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQ2hELEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFDL0QsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUMvRCxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FDNUM7QUFFRCxTQUFTQyxnQkFBZ0JBLENBQUVDLElBQUksRUFBRTtFQUMvQixJQUFJLENBQUNDLElBQUksR0FBR0wsSUFBSSxDQUFDTSxZQUFZO0VBQzdCLElBQUksQ0FBQ0YsSUFBSSxHQUFHQSxJQUFJO0FBQ2xCO0FBRUFELGdCQUFnQixDQUFDSSxhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBRUMsTUFBTSxFQUFFO0VBQy9ELE9BQU8sRUFBRSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0YsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSUEsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBRURMLGdCQUFnQixDQUFDUSxTQUFTLENBQUNDLFNBQVMsR0FBRyxTQUFTQSxTQUFTQSxDQUFBLEVBQUk7RUFDM0QsT0FBTyxJQUFJLENBQUNSLElBQUksQ0FBQ0ksTUFBTTtBQUN6QixDQUFDO0FBRURMLGdCQUFnQixDQUFDUSxTQUFTLENBQUNKLGFBQWEsR0FBRyxTQUFTQSxhQUFhQSxDQUFBLEVBQUk7RUFDbkUsT0FBT0osZ0JBQWdCLENBQUNJLGFBQWEsQ0FBQyxJQUFJLENBQUNILElBQUksQ0FBQ0ksTUFBTSxDQUFDO0FBQ3pELENBQUM7QUFFREwsZ0JBQWdCLENBQUNRLFNBQVMsQ0FBQ0UsS0FBSyxHQUFHLFNBQVNBLEtBQUtBLENBQUVDLFNBQVMsRUFBRTtFQUM1RCxJQUFJQyxDQUFDOztFQUVMO0VBQ0E7RUFDQSxLQUFLQSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQ1gsSUFBSSxDQUFDSSxNQUFNLEVBQUVPLENBQUMsSUFBSSxDQUFDLEVBQUU7SUFDN0M7SUFDQSxJQUFJQyxLQUFLLEdBQUdkLGVBQWUsQ0FBQ2UsT0FBTyxDQUFDLElBQUksQ0FBQ2IsSUFBSSxDQUFDVyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7O0lBRXREO0lBQ0FDLEtBQUssSUFBSWQsZUFBZSxDQUFDZSxPQUFPLENBQUMsSUFBSSxDQUFDYixJQUFJLENBQUNXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzs7SUFFbEQ7SUFDQUQsU0FBUyxDQUFDSSxHQUFHLENBQUNGLEtBQUssRUFBRSxFQUFFLENBQUM7RUFDMUI7O0VBRUE7RUFDQTtFQUNBLElBQUksSUFBSSxDQUFDWixJQUFJLENBQUNJLE1BQU0sR0FBRyxDQUFDLEVBQUU7SUFDeEJNLFNBQVMsQ0FBQ0ksR0FBRyxDQUFDaEIsZUFBZSxDQUFDZSxPQUFPLENBQUMsSUFBSSxDQUFDYixJQUFJLENBQUNXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQ3pEO0FBQ0YsQ0FBQztBQUVESSxNQUFNLENBQUNDLE9BQU8sR0FBR2pCLGdCQUFnQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvYWxwaGFudW1lcmljLWRhdGEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNb2RlID0gcmVxdWlyZSgnLi9tb2RlJylcblxuLyoqXG4gKiBBcnJheSBvZiBjaGFyYWN0ZXJzIGF2YWlsYWJsZSBpbiBhbHBoYW51bWVyaWMgbW9kZVxuICpcbiAqIEFzIHBlciBRUiBDb2RlIHNwZWNpZmljYXRpb24sIHRvIGVhY2ggY2hhcmFjdGVyXG4gKiBpcyBhc3NpZ25lZCBhIHZhbHVlIGZyb20gMCB0byA0NCB3aGljaCBpbiB0aGlzIGNhc2UgY29pbmNpZGVzXG4gKiB3aXRoIHRoZSBhcnJheSBpbmRleFxuICpcbiAqIEB0eXBlIHtBcnJheX1cbiAqL1xuY29uc3QgQUxQSEFfTlVNX0NIQVJTID0gW1xuICAnMCcsICcxJywgJzInLCAnMycsICc0JywgJzUnLCAnNicsICc3JywgJzgnLCAnOScsXG4gICdBJywgJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJyxcbiAgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onLFxuICAnICcsICckJywgJyUnLCAnKicsICcrJywgJy0nLCAnLicsICcvJywgJzonXG5dXG5cbmZ1bmN0aW9uIEFscGhhbnVtZXJpY0RhdGEgKGRhdGEpIHtcbiAgdGhpcy5tb2RlID0gTW9kZS5BTFBIQU5VTUVSSUNcbiAgdGhpcy5kYXRhID0gZGF0YVxufVxuXG5BbHBoYW51bWVyaWNEYXRhLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoIChsZW5ndGgpIHtcbiAgcmV0dXJuIDExICogTWF0aC5mbG9vcihsZW5ndGggLyAyKSArIDYgKiAobGVuZ3RoICUgMilcbn1cblxuQWxwaGFudW1lcmljRGF0YS5wcm90b3R5cGUuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gZ2V0TGVuZ3RoICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YS5sZW5ndGhcbn1cblxuQWxwaGFudW1lcmljRGF0YS5wcm90b3R5cGUuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKCkge1xuICByZXR1cm4gQWxwaGFudW1lcmljRGF0YS5nZXRCaXRzTGVuZ3RoKHRoaXMuZGF0YS5sZW5ndGgpXG59XG5cbkFscGhhbnVtZXJpY0RhdGEucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKGJpdEJ1ZmZlcikge1xuICBsZXQgaVxuXG4gIC8vIElucHV0IGRhdGEgY2hhcmFjdGVycyBhcmUgZGl2aWRlZCBpbnRvIGdyb3VwcyBvZiB0d28gY2hhcmFjdGVyc1xuICAvLyBhbmQgZW5jb2RlZCBhcyAxMS1iaXQgYmluYXJ5IGNvZGVzLlxuICBmb3IgKGkgPSAwOyBpICsgMiA8PSB0aGlzLmRhdGEubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAvLyBUaGUgY2hhcmFjdGVyIHZhbHVlIG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXIgaXMgbXVsdGlwbGllZCBieSA0NVxuICAgIGxldCB2YWx1ZSA9IEFMUEhBX05VTV9DSEFSUy5pbmRleE9mKHRoaXMuZGF0YVtpXSkgKiA0NVxuXG4gICAgLy8gVGhlIGNoYXJhY3RlciB2YWx1ZSBvZiB0aGUgc2Vjb25kIGRpZ2l0IGlzIGFkZGVkIHRvIHRoZSBwcm9kdWN0XG4gICAgdmFsdWUgKz0gQUxQSEFfTlVNX0NIQVJTLmluZGV4T2YodGhpcy5kYXRhW2kgKyAxXSlcblxuICAgIC8vIFRoZSBzdW0gaXMgdGhlbiBzdG9yZWQgYXMgMTEtYml0IGJpbmFyeSBudW1iZXJcbiAgICBiaXRCdWZmZXIucHV0KHZhbHVlLCAxMSlcbiAgfVxuXG4gIC8vIElmIHRoZSBudW1iZXIgb2YgaW5wdXQgZGF0YSBjaGFyYWN0ZXJzIGlzIG5vdCBhIG11bHRpcGxlIG9mIHR3byxcbiAgLy8gdGhlIGNoYXJhY3RlciB2YWx1ZSBvZiB0aGUgZmluYWwgY2hhcmFjdGVyIGlzIGVuY29kZWQgYXMgYSA2LWJpdCBiaW5hcnkgbnVtYmVyLlxuICBpZiAodGhpcy5kYXRhLmxlbmd0aCAlIDIpIHtcbiAgICBiaXRCdWZmZXIucHV0KEFMUEhBX05VTV9DSEFSUy5pbmRleE9mKHRoaXMuZGF0YVtpXSksIDYpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBbHBoYW51bWVyaWNEYXRhXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alphanumeric-data.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-buffer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-buffer.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function BitBuffer() {\n  this.buffer = [];\n  this.length = 0;\n}\nBitBuffer.prototype = {\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;\n  },\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) === 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n};\nmodule.exports = BitBuffer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1idWZmZXIuanM/YmQxOCJdLCJuYW1lcyI6WyJCaXRCdWZmZXIiLCJidWZmZXIiLCJsZW5ndGgiLCJwcm90b3R5cGUiLCJnZXQiLCJpbmRleCIsImJ1ZkluZGV4IiwiTWF0aCIsImZsb29yIiwicHV0IiwibnVtIiwiaSIsInB1dEJpdCIsImdldExlbmd0aEluQml0cyIsImJpdCIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxTQUFTQSxDQUFBLEVBQUk7RUFDcEIsSUFBSSxDQUFDQyxNQUFNLEdBQUcsRUFBRTtFQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBRyxDQUFDO0FBQ2pCO0FBRUFGLFNBQVMsQ0FBQ0csU0FBUyxHQUFHO0VBRXBCQyxHQUFHLEVBQUUsU0FBQUEsQ0FBVUMsS0FBSyxFQUFFO0lBQ3BCLE1BQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNILEtBQUssR0FBRyxDQUFDLENBQUM7SUFDdEMsT0FBTyxDQUFFLElBQUksQ0FBQ0osTUFBTSxDQUFDSyxRQUFRLENBQUMsS0FBTSxDQUFDLEdBQUdELEtBQUssR0FBRyxDQUFFLEdBQUksQ0FBQyxNQUFNLENBQUM7RUFDaEUsQ0FBQztFQUVESSxHQUFHLEVBQUUsU0FBQUEsQ0FBVUMsR0FBRyxFQUFFUixNQUFNLEVBQUU7SUFDMUIsS0FBSyxJQUFJUyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdULE1BQU0sRUFBRVMsQ0FBQyxFQUFFLEVBQUU7TUFDL0IsSUFBSSxDQUFDQyxNQUFNLENBQUMsQ0FBRUYsR0FBRyxLQUFNUixNQUFNLEdBQUdTLENBQUMsR0FBRyxDQUFFLEdBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyRDtFQUNGLENBQUM7RUFFREUsZUFBZSxFQUFFLFNBQUFBLENBQUEsRUFBWTtJQUMzQixPQUFPLElBQUksQ0FBQ1gsTUFBTTtFQUNwQixDQUFDO0VBRURVLE1BQU0sRUFBRSxTQUFBQSxDQUFVRSxHQUFHLEVBQUU7SUFDckIsTUFBTVIsUUFBUSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQyxJQUFJLENBQUNOLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDNUMsSUFBSSxJQUFJLENBQUNELE1BQU0sQ0FBQ0MsTUFBTSxJQUFJSSxRQUFRLEVBQUU7TUFDbEMsSUFBSSxDQUFDTCxNQUFNLENBQUNjLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDckI7SUFFQSxJQUFJRCxHQUFHLEVBQUU7TUFDUCxJQUFJLENBQUNiLE1BQU0sQ0FBQ0ssUUFBUSxDQUFDLElBQUssSUFBSSxLQUFNLElBQUksQ0FBQ0osTUFBTSxHQUFHLENBQUc7SUFDdkQ7SUFFQSxJQUFJLENBQUNBLE1BQU0sRUFBRTtFQUNmO0FBQ0YsQ0FBQztBQUVEYyxNQUFNLENBQUNDLE9BQU8sR0FBR2pCLFNBQVMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1idWZmZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBCaXRCdWZmZXIgKCkge1xuICB0aGlzLmJ1ZmZlciA9IFtdXG4gIHRoaXMubGVuZ3RoID0gMFxufVxuXG5CaXRCdWZmZXIucHJvdG90eXBlID0ge1xuXG4gIGdldDogZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgY29uc3QgYnVmSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOClcbiAgICByZXR1cm4gKCh0aGlzLmJ1ZmZlcltidWZJbmRleF0gPj4+ICg3IC0gaW5kZXggJSA4KSkgJiAxKSA9PT0gMVxuICB9LFxuXG4gIHB1dDogZnVuY3Rpb24gKG51bSwgbGVuZ3RoKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5wdXRCaXQoKChudW0gPj4+IChsZW5ndGggLSBpIC0gMSkpICYgMSkgPT09IDEpXG4gICAgfVxuICB9LFxuXG4gIGdldExlbmd0aEluQml0czogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmxlbmd0aFxuICB9LFxuXG4gIHB1dEJpdDogZnVuY3Rpb24gKGJpdCkge1xuICAgIGNvbnN0IGJ1ZkluZGV4ID0gTWF0aC5mbG9vcih0aGlzLmxlbmd0aCAvIDgpXG4gICAgaWYgKHRoaXMuYnVmZmVyLmxlbmd0aCA8PSBidWZJbmRleCkge1xuICAgICAgdGhpcy5idWZmZXIucHVzaCgwKVxuICAgIH1cblxuICAgIGlmIChiaXQpIHtcbiAgICAgIHRoaXMuYnVmZmVyW2J1ZkluZGV4XSB8PSAoMHg4MCA+Pj4gKHRoaXMubGVuZ3RoICUgOCkpXG4gICAgfVxuXG4gICAgdGhpcy5sZW5ndGgrK1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQml0QnVmZmVyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-buffer.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-matrix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-matrix.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0');\n  }\n  this.size = size;\n  this.data = new Uint8Array(size * size);\n  this.reservedBit = new Uint8Array(size * size);\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col;\n  this.data[index] = value;\n  if (reserved) this.reservedBit[index] = true;\n};\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col];\n};\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value;\n};\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col];\n};\nmodule.exports = BitMatrix;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1tYXRyaXguanM/Yzc3ZiJdLCJuYW1lcyI6WyJCaXRNYXRyaXgiLCJzaXplIiwiRXJyb3IiLCJkYXRhIiwiVWludDhBcnJheSIsInJlc2VydmVkQml0IiwicHJvdG90eXBlIiwic2V0Iiwicm93IiwiY29sIiwidmFsdWUiLCJyZXNlcnZlZCIsImluZGV4IiwiZ2V0IiwieG9yIiwiaXNSZXNlcnZlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTQSxTQUFTQSxDQUFFQyxJQUFJLEVBQUU7RUFDeEIsSUFBSSxDQUFDQSxJQUFJLElBQUlBLElBQUksR0FBRyxDQUFDLEVBQUU7SUFDckIsTUFBTSxJQUFJQyxLQUFLLENBQUMsbURBQW1ELENBQUM7RUFDdEU7RUFFQSxJQUFJLENBQUNELElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNFLElBQUksR0FBRyxJQUFJQyxVQUFVLENBQUNILElBQUksR0FBR0EsSUFBSSxDQUFDO0VBQ3ZDLElBQUksQ0FBQ0ksV0FBVyxHQUFHLElBQUlELFVBQVUsQ0FBQ0gsSUFBSSxHQUFHQSxJQUFJLENBQUM7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FELFNBQVMsQ0FBQ00sU0FBUyxDQUFDQyxHQUFHLEdBQUcsVUFBVUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUFFO0VBQzdELE1BQU1DLEtBQUssR0FBR0osR0FBRyxHQUFHLElBQUksQ0FBQ1AsSUFBSSxHQUFHUSxHQUFHO0VBQ25DLElBQUksQ0FBQ04sSUFBSSxDQUFDUyxLQUFLLENBQUMsR0FBR0YsS0FBSztFQUN4QixJQUFJQyxRQUFRLEVBQUUsSUFBSSxDQUFDTixXQUFXLENBQUNPLEtBQUssQ0FBQyxHQUFHLElBQUk7QUFDOUMsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBWixTQUFTLENBQUNNLFNBQVMsQ0FBQ08sR0FBRyxHQUFHLFVBQVVMLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0VBQzVDLE9BQU8sSUFBSSxDQUFDTixJQUFJLENBQUNLLEdBQUcsR0FBRyxJQUFJLENBQUNQLElBQUksR0FBR1EsR0FBRyxDQUFDO0FBQ3pDLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBVCxTQUFTLENBQUNNLFNBQVMsQ0FBQ1EsR0FBRyxHQUFHLFVBQVVOLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxLQUFLLEVBQUU7RUFDbkQsSUFBSSxDQUFDUCxJQUFJLENBQUNLLEdBQUcsR0FBRyxJQUFJLENBQUNQLElBQUksR0FBR1EsR0FBRyxDQUFDLElBQUlDLEtBQUs7QUFDM0MsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBVixTQUFTLENBQUNNLFNBQVMsQ0FBQ1MsVUFBVSxHQUFHLFVBQVVQLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0VBQ25ELE9BQU8sSUFBSSxDQUFDSixXQUFXLENBQUNHLEdBQUcsR0FBRyxJQUFJLENBQUNQLElBQUksR0FBR1EsR0FBRyxDQUFDO0FBQ2hELENBQUM7QUFFRE8sTUFBTSxDQUFDQyxPQUFPLEdBQUdqQixTQUFTIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9iaXQtbWF0cml4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwZXIgY2xhc3MgdG8gaGFuZGxlIFFSIENvZGUgc3ltYm9sIG1vZHVsZXNcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gc2l6ZSBTeW1ib2wgc2l6ZVxuICovXG5mdW5jdGlvbiBCaXRNYXRyaXggKHNpemUpIHtcbiAgaWYgKCFzaXplIHx8IHNpemUgPCAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdCaXRNYXRyaXggc2l6ZSBtdXN0IGJlIGRlZmluZWQgYW5kIGdyZWF0ZXIgdGhhbiAwJylcbiAgfVxuXG4gIHRoaXMuc2l6ZSA9IHNpemVcbiAgdGhpcy5kYXRhID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSAqIHNpemUpXG4gIHRoaXMucmVzZXJ2ZWRCaXQgPSBuZXcgVWludDhBcnJheShzaXplICogc2l6ZSlcbn1cblxuLyoqXG4gKiBTZXQgYml0IHZhbHVlIGF0IHNwZWNpZmllZCBsb2NhdGlvblxuICogSWYgcmVzZXJ2ZWQgZmxhZyBpcyBzZXQsIHRoaXMgYml0IHdpbGwgYmUgaWdub3JlZCBkdXJpbmcgbWFza2luZyBwcm9jZXNzXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9ICByb3dcbiAqIEBwYXJhbSB7TnVtYmVyfSAgY29sXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHZhbHVlXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHJlc2VydmVkXG4gKi9cbkJpdE1hdHJpeC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKHJvdywgY29sLCB2YWx1ZSwgcmVzZXJ2ZWQpIHtcbiAgY29uc3QgaW5kZXggPSByb3cgKiB0aGlzLnNpemUgKyBjb2xcbiAgdGhpcy5kYXRhW2luZGV4XSA9IHZhbHVlXG4gIGlmIChyZXNlcnZlZCkgdGhpcy5yZXNlcnZlZEJpdFtpbmRleF0gPSB0cnVlXG59XG5cbi8qKlxuICogUmV0dXJucyBiaXQgdmFsdWUgYXQgc3BlY2lmaWVkIGxvY2F0aW9uXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSAgcm93XG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICBjb2xcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbkJpdE1hdHJpeC5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKHJvdywgY29sKSB7XG4gIHJldHVybiB0aGlzLmRhdGFbcm93ICogdGhpcy5zaXplICsgY29sXVxufVxuXG4vKipcbiAqIEFwcGxpZXMgeG9yIG9wZXJhdG9yIGF0IHNwZWNpZmllZCBsb2NhdGlvblxuICogKHVzZWQgZHVyaW5nIG1hc2tpbmcgcHJvY2VzcylcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gIHJvd1xuICogQHBhcmFtIHtOdW1iZXJ9ICBjb2xcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdmFsdWVcbiAqL1xuQml0TWF0cml4LnByb3RvdHlwZS54b3IgPSBmdW5jdGlvbiAocm93LCBjb2wsIHZhbHVlKSB7XG4gIHRoaXMuZGF0YVtyb3cgKiB0aGlzLnNpemUgKyBjb2xdIF49IHZhbHVlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYml0IGF0IHNwZWNpZmllZCBsb2NhdGlvbiBpcyByZXNlcnZlZFxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSAgIHJvd1xuICogQHBhcmFtIHtOdW1iZXJ9ICAgY29sXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5CaXRNYXRyaXgucHJvdG90eXBlLmlzUmVzZXJ2ZWQgPSBmdW5jdGlvbiAocm93LCBjb2wpIHtcbiAgcmV0dXJuIHRoaXMucmVzZXJ2ZWRCaXRbcm93ICogdGhpcy5zaXplICsgY29sXVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJpdE1hdHJpeFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-matrix.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/byte-data.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/byte-data.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const encodeUtf8 = __webpack_require__(/*! encode-utf8 */ \"./node_modules/encode-utf8/index.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\nfunction ByteData(data) {\n  this.mode = Mode.BYTE;\n  if (typeof data === 'string') {\n    data = encodeUtf8(data);\n  }\n  this.data = new Uint8Array(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\nmodule.exports = ByteData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2J5dGUtZGF0YS5qcz9mOGU1Il0sIm5hbWVzIjpbImVuY29kZVV0ZjgiLCJyZXF1aXJlIiwiTW9kZSIsIkJ5dGVEYXRhIiwiZGF0YSIsIm1vZGUiLCJCWVRFIiwiVWludDhBcnJheSIsImdldEJpdHNMZW5ndGgiLCJsZW5ndGgiLCJwcm90b3R5cGUiLCJnZXRMZW5ndGgiLCJ3cml0ZSIsImJpdEJ1ZmZlciIsImkiLCJsIiwicHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxtQkFBTyxDQUFDLHdEQUFhLENBQUM7QUFDekMsTUFBTUMsSUFBSSxHQUFHRCxtQkFBTyxDQUFDLGlGQUFRLENBQUM7QUFFOUIsU0FBU0UsUUFBUUEsQ0FBRUMsSUFBSSxFQUFFO0VBQ3ZCLElBQUksQ0FBQ0MsSUFBSSxHQUFHSCxJQUFJLENBQUNJLElBQUk7RUFDckIsSUFBSSxPQUFRRixJQUFLLEtBQUssUUFBUSxFQUFFO0lBQzlCQSxJQUFJLEdBQUdKLFVBQVUsQ0FBQ0ksSUFBSSxDQUFDO0VBQ3pCO0VBQ0EsSUFBSSxDQUFDQSxJQUFJLEdBQUcsSUFBSUcsVUFBVSxDQUFDSCxJQUFJLENBQUM7QUFDbEM7QUFFQUQsUUFBUSxDQUFDSyxhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBRUMsTUFBTSxFQUFFO0VBQ3ZELE9BQU9BLE1BQU0sR0FBRyxDQUFDO0FBQ25CLENBQUM7QUFFRE4sUUFBUSxDQUFDTyxTQUFTLENBQUNDLFNBQVMsR0FBRyxTQUFTQSxTQUFTQSxDQUFBLEVBQUk7RUFDbkQsT0FBTyxJQUFJLENBQUNQLElBQUksQ0FBQ0ssTUFBTTtBQUN6QixDQUFDO0FBRUROLFFBQVEsQ0FBQ08sU0FBUyxDQUFDRixhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBQSxFQUFJO0VBQzNELE9BQU9MLFFBQVEsQ0FBQ0ssYUFBYSxDQUFDLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxNQUFNLENBQUM7QUFDakQsQ0FBQztBQUVETixRQUFRLENBQUNPLFNBQVMsQ0FBQ0UsS0FBSyxHQUFHLFVBQVVDLFNBQVMsRUFBRTtFQUM5QyxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVDLENBQUMsR0FBRyxJQUFJLENBQUNYLElBQUksQ0FBQ0ssTUFBTSxFQUFFSyxDQUFDLEdBQUdDLENBQUMsRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDaERELFNBQVMsQ0FBQ0csR0FBRyxDQUFDLElBQUksQ0FBQ1osSUFBSSxDQUFDVSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDaEM7QUFDRixDQUFDO0FBRURHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHZixRQUFRIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9ieXRlLWRhdGEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlbmNvZGVVdGY4ID0gcmVxdWlyZSgnZW5jb2RlLXV0ZjgnKVxuY29uc3QgTW9kZSA9IHJlcXVpcmUoJy4vbW9kZScpXG5cbmZ1bmN0aW9uIEJ5dGVEYXRhIChkYXRhKSB7XG4gIHRoaXMubW9kZSA9IE1vZGUuQllURVxuICBpZiAodHlwZW9mIChkYXRhKSA9PT0gJ3N0cmluZycpIHtcbiAgICBkYXRhID0gZW5jb2RlVXRmOChkYXRhKVxuICB9XG4gIHRoaXMuZGF0YSA9IG5ldyBVaW50OEFycmF5KGRhdGEpXG59XG5cbkJ5dGVEYXRhLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoIChsZW5ndGgpIHtcbiAgcmV0dXJuIGxlbmd0aCAqIDhcbn1cblxuQnl0ZURhdGEucHJvdG90eXBlLmdldExlbmd0aCA9IGZ1bmN0aW9uIGdldExlbmd0aCAoKSB7XG4gIHJldHVybiB0aGlzLmRhdGEubGVuZ3RoXG59XG5cbkJ5dGVEYXRhLnByb3RvdHlwZS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAoKSB7XG4gIHJldHVybiBCeXRlRGF0YS5nZXRCaXRzTGVuZ3RoKHRoaXMuZGF0YS5sZW5ndGgpXG59XG5cbkJ5dGVEYXRhLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIChiaXRCdWZmZXIpIHtcbiAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLmRhdGEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgYml0QnVmZmVyLnB1dCh0aGlzLmRhdGFbaV0sIDgpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCeXRlRGF0YVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/byte-data.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-code.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-code.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst EC_BLOCKS_TABLE = [\n// L  M  Q  H\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];\nconst EC_CODEWORDS_TABLE = [\n// L  M  Q  H\n7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];\n\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\nexports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n    case ECLevel.M:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n    case ECLevel.Q:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n    case ECLevel.H:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};\n\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\nexports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n    case ECLevel.M:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n    case ECLevel.Q:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n    case ECLevel.H:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-code.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-level.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-level.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.L = {\n  bit: 1\n};\nexports.M = {\n  bit: 0\n};\nexports.Q = {\n  bit: 3\n};\nexports.H = {\n  bit: 2\n};\nfunction fromString(string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string');\n  }\n  const lcStr = string.toLowerCase();\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L;\n    case 'm':\n    case 'medium':\n      return exports.M;\n    case 'q':\n    case 'quartile':\n      return exports.Q;\n    case 'h':\n    case 'high':\n      return exports.H;\n    default:\n      throw new Error('Unknown EC Level: ' + string);\n  }\n}\nexports.isValid = function isValid(level) {\n  return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;\n};\nexports.from = function from(value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value;\n  }\n  try {\n    return fromString(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Vycm9yLWNvcnJlY3Rpb24tbGV2ZWwuanM/OGVhMCJdLCJuYW1lcyI6WyJleHBvcnRzIiwiTCIsImJpdCIsIk0iLCJRIiwiSCIsImZyb21TdHJpbmciLCJzdHJpbmciLCJFcnJvciIsImxjU3RyIiwidG9Mb3dlckNhc2UiLCJpc1ZhbGlkIiwibGV2ZWwiLCJmcm9tIiwidmFsdWUiLCJkZWZhdWx0VmFsdWUiLCJlIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDQyxDQUFDLEdBQUc7RUFBRUMsR0FBRyxFQUFFO0FBQUUsQ0FBQztBQUN0QkYsT0FBTyxDQUFDRyxDQUFDLEdBQUc7RUFBRUQsR0FBRyxFQUFFO0FBQUUsQ0FBQztBQUN0QkYsT0FBTyxDQUFDSSxDQUFDLEdBQUc7RUFBRUYsR0FBRyxFQUFFO0FBQUUsQ0FBQztBQUN0QkYsT0FBTyxDQUFDSyxDQUFDLEdBQUc7RUFBRUgsR0FBRyxFQUFFO0FBQUUsQ0FBQztBQUV0QixTQUFTSSxVQUFVQSxDQUFFQyxNQUFNLEVBQUU7RUFDM0IsSUFBSSxPQUFPQSxNQUFNLEtBQUssUUFBUSxFQUFFO0lBQzlCLE1BQU0sSUFBSUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0VBQzFDO0VBRUEsTUFBTUMsS0FBSyxHQUFHRixNQUFNLENBQUNHLFdBQVcsQ0FBQyxDQUFDO0VBRWxDLFFBQVFELEtBQUs7SUFDWCxLQUFLLEdBQUc7SUFDUixLQUFLLEtBQUs7TUFDUixPQUFPVCxPQUFPLENBQUNDLENBQUM7SUFFbEIsS0FBSyxHQUFHO0lBQ1IsS0FBSyxRQUFRO01BQ1gsT0FBT0QsT0FBTyxDQUFDRyxDQUFDO0lBRWxCLEtBQUssR0FBRztJQUNSLEtBQUssVUFBVTtNQUNiLE9BQU9ILE9BQU8sQ0FBQ0ksQ0FBQztJQUVsQixLQUFLLEdBQUc7SUFDUixLQUFLLE1BQU07TUFDVCxPQUFPSixPQUFPLENBQUNLLENBQUM7SUFFbEI7TUFDRSxNQUFNLElBQUlHLEtBQUssQ0FBQyxvQkFBb0IsR0FBR0QsTUFBTSxDQUFDO0VBQ2xEO0FBQ0Y7QUFFQVAsT0FBTyxDQUFDVyxPQUFPLEdBQUcsU0FBU0EsT0FBT0EsQ0FBRUMsS0FBSyxFQUFFO0VBQ3pDLE9BQU9BLEtBQUssSUFBSSxPQUFPQSxLQUFLLENBQUNWLEdBQUcsS0FBSyxXQUFXLElBQzlDVSxLQUFLLENBQUNWLEdBQUcsSUFBSSxDQUFDLElBQUlVLEtBQUssQ0FBQ1YsR0FBRyxHQUFHLENBQUM7QUFDbkMsQ0FBQztBQUVERixPQUFPLENBQUNhLElBQUksR0FBRyxTQUFTQSxJQUFJQSxDQUFFQyxLQUFLLEVBQUVDLFlBQVksRUFBRTtFQUNqRCxJQUFJZixPQUFPLENBQUNXLE9BQU8sQ0FBQ0csS0FBSyxDQUFDLEVBQUU7SUFDMUIsT0FBT0EsS0FBSztFQUNkO0VBRUEsSUFBSTtJQUNGLE9BQU9SLFVBQVUsQ0FBQ1EsS0FBSyxDQUFDO0VBQzFCLENBQUMsQ0FBQyxPQUFPRSxDQUFDLEVBQUU7SUFDVixPQUFPRCxZQUFZO0VBQ3JCO0FBQ0YsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvZXJyb3ItY29ycmVjdGlvbi1sZXZlbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuTCA9IHsgYml0OiAxIH1cbmV4cG9ydHMuTSA9IHsgYml0OiAwIH1cbmV4cG9ydHMuUSA9IHsgYml0OiAzIH1cbmV4cG9ydHMuSCA9IHsgYml0OiAyIH1cblxuZnVuY3Rpb24gZnJvbVN0cmluZyAoc3RyaW5nKSB7XG4gIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBFcnJvcignUGFyYW0gaXMgbm90IGEgc3RyaW5nJylcbiAgfVxuXG4gIGNvbnN0IGxjU3RyID0gc3RyaW5nLnRvTG93ZXJDYXNlKClcblxuICBzd2l0Y2ggKGxjU3RyKSB7XG4gICAgY2FzZSAnbCc6XG4gICAgY2FzZSAnbG93JzpcbiAgICAgIHJldHVybiBleHBvcnRzLkxcblxuICAgIGNhc2UgJ20nOlxuICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgICByZXR1cm4gZXhwb3J0cy5NXG5cbiAgICBjYXNlICdxJzpcbiAgICBjYXNlICdxdWFydGlsZSc6XG4gICAgICByZXR1cm4gZXhwb3J0cy5RXG5cbiAgICBjYXNlICdoJzpcbiAgICBjYXNlICdoaWdoJzpcbiAgICAgIHJldHVybiBleHBvcnRzLkhcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gRUMgTGV2ZWw6ICcgKyBzdHJpbmcpXG4gIH1cbn1cblxuZXhwb3J0cy5pc1ZhbGlkID0gZnVuY3Rpb24gaXNWYWxpZCAobGV2ZWwpIHtcbiAgcmV0dXJuIGxldmVsICYmIHR5cGVvZiBsZXZlbC5iaXQgIT09ICd1bmRlZmluZWQnICYmXG4gICAgbGV2ZWwuYml0ID49IDAgJiYgbGV2ZWwuYml0IDwgNFxufVxuXG5leHBvcnRzLmZyb20gPSBmdW5jdGlvbiBmcm9tICh2YWx1ZSwgZGVmYXVsdFZhbHVlKSB7XG4gIGlmIChleHBvcnRzLmlzVmFsaWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiBmcm9tU3RyaW5nKHZhbHVlKVxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-level.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/finder-pattern.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/finder-pattern.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const getSymbolSize = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\").getSymbolSize;\nconst FINDER_PATTERN_SIZE = 7;\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions(version) {\n  const size = getSymbolSize(version);\n  return [\n  // top-left\n  [0, 0],\n  // top-right\n  [size - FINDER_PATTERN_SIZE, 0],\n  // bottom-left\n  [0, size - FINDER_PATTERN_SIZE]];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2ZpbmRlci1wYXR0ZXJuLmpzPzgyNmEiXSwibmFtZXMiOlsiZ2V0U3ltYm9sU2l6ZSIsInJlcXVpcmUiLCJGSU5ERVJfUEFUVEVSTl9TSVpFIiwiZXhwb3J0cyIsImdldFBvc2l0aW9ucyIsInZlcnNpb24iLCJzaXplIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxhQUFhLEdBQUdDLG1CQUFPLENBQUMsbUZBQVMsQ0FBQyxDQUFDRCxhQUFhO0FBQ3RELE1BQU1FLG1CQUFtQixHQUFHLENBQUM7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLE9BQU8sQ0FBQ0MsWUFBWSxHQUFHLFNBQVNBLFlBQVlBLENBQUVDLE9BQU8sRUFBRTtFQUNyRCxNQUFNQyxJQUFJLEdBQUdOLGFBQWEsQ0FBQ0ssT0FBTyxDQUFDO0VBRW5DLE9BQU87RUFDTDtFQUNBLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNOO0VBQ0EsQ0FBQ0MsSUFBSSxHQUFHSixtQkFBbUIsRUFBRSxDQUFDLENBQUM7RUFDL0I7RUFDQSxDQUFDLENBQUMsRUFBRUksSUFBSSxHQUFHSixtQkFBbUIsQ0FBQyxDQUNoQztBQUNILENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2ZpbmRlci1wYXR0ZXJuLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2V0U3ltYm9sU2l6ZSA9IHJlcXVpcmUoJy4vdXRpbHMnKS5nZXRTeW1ib2xTaXplXG5jb25zdCBGSU5ERVJfUEFUVEVSTl9TSVpFID0gN1xuXG4vKipcbiAqIFJldHVybnMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgcG9zaXRpb25zIG9mIGVhY2ggZmluZGVyIHBhdHRlcm4uXG4gKiBFYWNoIGFycmF5J3MgZWxlbWVudCByZXByZXNlbnQgdGhlIHRvcC1sZWZ0IHBvaW50IG9mIHRoZSBwYXR0ZXJuIGFzICh4LCB5KSBjb29yZGluYXRlc1xuICpcbiAqIEBwYXJhbSAge051bWJlcn0gdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge0FycmF5fSAgICAgICAgICBBcnJheSBvZiBjb29yZGluYXRlc1xuICovXG5leHBvcnRzLmdldFBvc2l0aW9ucyA9IGZ1bmN0aW9uIGdldFBvc2l0aW9ucyAodmVyc2lvbikge1xuICBjb25zdCBzaXplID0gZ2V0U3ltYm9sU2l6ZSh2ZXJzaW9uKVxuXG4gIHJldHVybiBbXG4gICAgLy8gdG9wLWxlZnRcbiAgICBbMCwgMF0sXG4gICAgLy8gdG9wLXJpZ2h0XG4gICAgW3NpemUgLSBGSU5ERVJfUEFUVEVSTl9TSVpFLCAwXSxcbiAgICAvLyBib3R0b20tbGVmdFxuICAgIFswLCBzaXplIC0gRklOREVSX1BBVFRFUk5fU0laRV1cbiAgXVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/finder-pattern.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/format-info.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/format-info.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\");\nconst G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\nconst G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\nconst G15_BCH = Utils.getBCHDigit(G15);\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n  const data = errorCorrectionLevel.bit << 3 | mask;\n  let d = data << 10;\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= G15 << Utils.getBCHDigit(d) - G15_BCH;\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return (data << 10 | d) ^ G15_MASK;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Zvcm1hdC1pbmZvLmpzPzVlNGMiXSwibmFtZXMiOlsiVXRpbHMiLCJyZXF1aXJlIiwiRzE1IiwiRzE1X01BU0siLCJHMTVfQkNIIiwiZ2V0QkNIRGlnaXQiLCJleHBvcnRzIiwiZ2V0RW5jb2RlZEJpdHMiLCJlcnJvckNvcnJlY3Rpb25MZXZlbCIsIm1hc2siLCJkYXRhIiwiYml0IiwiZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxtQkFBTyxDQUFDLG1GQUFTLENBQUM7QUFFaEMsTUFBTUMsR0FBRyxHQUFJLENBQUMsSUFBSSxFQUFFLEdBQUssQ0FBQyxJQUFJLENBQUUsR0FBSSxDQUFDLElBQUksQ0FBRSxHQUFJLENBQUMsSUFBSSxDQUFFLEdBQUksQ0FBQyxJQUFJLENBQUUsR0FBSSxDQUFDLElBQUksQ0FBRSxHQUFJLENBQUMsSUFBSSxDQUFFO0FBQ3ZGLE1BQU1DLFFBQVEsR0FBSSxDQUFDLElBQUksRUFBRSxHQUFLLENBQUMsSUFBSSxFQUFHLEdBQUksQ0FBQyxJQUFJLEVBQUcsR0FBSSxDQUFDLElBQUksQ0FBRSxHQUFJLENBQUMsSUFBSSxDQUFFO0FBQ3hFLE1BQU1DLE9BQU8sR0FBR0osS0FBSyxDQUFDSyxXQUFXLENBQUNILEdBQUcsQ0FBQzs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUksT0FBTyxDQUFDQyxjQUFjLEdBQUcsU0FBU0EsY0FBY0EsQ0FBRUMsb0JBQW9CLEVBQUVDLElBQUksRUFBRTtFQUM1RSxNQUFNQyxJQUFJLEdBQUtGLG9CQUFvQixDQUFDRyxHQUFHLElBQUksQ0FBQyxHQUFJRixJQUFLO0VBQ3JELElBQUlHLENBQUMsR0FBR0YsSUFBSSxJQUFJLEVBQUU7RUFFbEIsT0FBT1YsS0FBSyxDQUFDSyxXQUFXLENBQUNPLENBQUMsQ0FBQyxHQUFHUixPQUFPLElBQUksQ0FBQyxFQUFFO0lBQzFDUSxDQUFDLElBQUtWLEdBQUcsSUFBS0YsS0FBSyxDQUFDSyxXQUFXLENBQUNPLENBQUMsQ0FBQyxHQUFHUixPQUFTO0VBQ2hEOztFQUVBO0VBQ0E7RUFDQTtFQUNBLE9BQU8sQ0FBRU0sSUFBSSxJQUFJLEVBQUUsR0FBSUUsQ0FBQyxJQUFJVCxRQUFRO0FBQ3RDLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Zvcm1hdC1pbmZvLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY29uc3QgRzE1ID0gKDEgPDwgMTApIHwgKDEgPDwgOCkgfCAoMSA8PCA1KSB8ICgxIDw8IDQpIHwgKDEgPDwgMikgfCAoMSA8PCAxKSB8ICgxIDw8IDApXG5jb25zdCBHMTVfTUFTSyA9ICgxIDw8IDE0KSB8ICgxIDw8IDEyKSB8ICgxIDw8IDEwKSB8ICgxIDw8IDQpIHwgKDEgPDwgMSlcbmNvbnN0IEcxNV9CQ0ggPSBVdGlscy5nZXRCQ0hEaWdpdChHMTUpXG5cbi8qKlxuICogUmV0dXJucyBmb3JtYXQgaW5mb3JtYXRpb24gd2l0aCByZWxhdGl2ZSBlcnJvciBjb3JyZWN0aW9uIGJpdHNcbiAqXG4gKiBUaGUgZm9ybWF0IGluZm9ybWF0aW9uIGlzIGEgMTUtYml0IHNlcXVlbmNlIGNvbnRhaW5pbmcgNSBkYXRhIGJpdHMsXG4gKiB3aXRoIDEwIGVycm9yIGNvcnJlY3Rpb24gYml0cyBjYWxjdWxhdGVkIHVzaW5nIHRoZSAoMTUsIDUpIEJDSCBjb2RlLlxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gZXJyb3JDb3JyZWN0aW9uTGV2ZWwgRXJyb3IgY29ycmVjdGlvbiBsZXZlbFxuICogQHBhcmFtICB7TnVtYmVyfSBtYXNrICAgICAgICAgICAgICAgICBNYXNrIHBhdHRlcm5cbiAqIEByZXR1cm4ge051bWJlcn0gICAgICAgICAgICAgICAgICAgICAgRW5jb2RlZCBmb3JtYXQgaW5mb3JtYXRpb24gYml0c1xuICovXG5leHBvcnRzLmdldEVuY29kZWRCaXRzID0gZnVuY3Rpb24gZ2V0RW5jb2RlZEJpdHMgKGVycm9yQ29ycmVjdGlvbkxldmVsLCBtYXNrKSB7XG4gIGNvbnN0IGRhdGEgPSAoKGVycm9yQ29ycmVjdGlvbkxldmVsLmJpdCA8PCAzKSB8IG1hc2spXG4gIGxldCBkID0gZGF0YSA8PCAxMFxuXG4gIHdoaWxlIChVdGlscy5nZXRCQ0hEaWdpdChkKSAtIEcxNV9CQ0ggPj0gMCkge1xuICAgIGQgXj0gKEcxNSA8PCAoVXRpbHMuZ2V0QkNIRGlnaXQoZCkgLSBHMTVfQkNIKSlcbiAgfVxuXG4gIC8vIHhvciBmaW5hbCBkYXRhIHdpdGggbWFzayBwYXR0ZXJuIGluIG9yZGVyIHRvIGVuc3VyZSB0aGF0XG4gIC8vIG5vIGNvbWJpbmF0aW9uIG9mIEVycm9yIENvcnJlY3Rpb24gTGV2ZWwgYW5kIGRhdGEgbWFzayBwYXR0ZXJuXG4gIC8vIHdpbGwgcmVzdWx0IGluIGFuIGFsbC16ZXJvIGRhdGEgc3RyaW5nXG4gIHJldHVybiAoKGRhdGEgPDwgMTApIHwgZCkgXiBHMTVfTUFTS1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/format-info.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/galois-field.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/galois-field.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const EXP_TABLE = new Uint8Array(512);\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */;\n(function initTables() {\n  let x = 1;\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x;\n    LOG_TABLE[x] = i;\n    x <<= 1; // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) {\n      // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D;\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255];\n  }\n})();\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log(n) {\n  if (n < 1) throw new Error('log(' + n + ')');\n  return LOG_TABLE[n];\n};\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp(n) {\n  return EXP_TABLE[n];\n};\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul(x, y) {\n  if (x === 0 || y === 0) return 0;\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2dhbG9pcy1maWVsZC5qcz81M2M3Il0sIm5hbWVzIjpbIkVYUF9UQUJMRSIsIlVpbnQ4QXJyYXkiLCJMT0dfVEFCTEUiLCJpbml0VGFibGVzIiwieCIsImkiLCJleHBvcnRzIiwibG9nIiwibiIsIkVycm9yIiwiZXhwIiwibXVsIiwieSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHLElBQUlDLFVBQVUsQ0FBQyxHQUFHLENBQUM7QUFDckMsTUFBTUMsU0FBUyxHQUFHLElBQUlELFVBQVUsQ0FBQyxHQUFHO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FQQTtBQVFFLFVBQVNFLFVBQVVBLENBQUEsRUFBSTtFQUN2QixJQUFJQyxDQUFDLEdBQUcsQ0FBQztFQUNULEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLEdBQUcsRUFBRUEsQ0FBQyxFQUFFLEVBQUU7SUFDNUJMLFNBQVMsQ0FBQ0ssQ0FBQyxDQUFDLEdBQUdELENBQUM7SUFDaEJGLFNBQVMsQ0FBQ0UsQ0FBQyxDQUFDLEdBQUdDLENBQUM7SUFFaEJELENBQUMsS0FBSyxDQUFDLEVBQUM7O0lBRVI7SUFDQTtJQUNBLElBQUlBLENBQUMsR0FBRyxLQUFLLEVBQUU7TUFBRTtNQUNmQSxDQUFDLElBQUksS0FBSztJQUNaO0VBQ0Y7O0VBRUE7RUFDQTtFQUNBO0VBQ0E7RUFDQSxLQUFLLElBQUlDLENBQUMsR0FBRyxHQUFHLEVBQUVBLENBQUMsR0FBRyxHQUFHLEVBQUVBLENBQUMsRUFBRSxFQUFFO0lBQzlCTCxTQUFTLENBQUNLLENBQUMsQ0FBQyxHQUFHTCxTQUFTLENBQUNLLENBQUMsR0FBRyxHQUFHLENBQUM7RUFDbkM7QUFDRixDQUFDLEVBQUMsQ0FBQzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsT0FBTyxDQUFDQyxHQUFHLEdBQUcsU0FBU0EsR0FBR0EsQ0FBRUMsQ0FBQyxFQUFFO0VBQzdCLElBQUlBLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxJQUFJQyxLQUFLLENBQUMsTUFBTSxHQUFHRCxDQUFDLEdBQUcsR0FBRyxDQUFDO0VBQzVDLE9BQU9OLFNBQVMsQ0FBQ00sQ0FBQyxDQUFDO0FBQ3JCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FGLE9BQU8sQ0FBQ0ksR0FBRyxHQUFHLFNBQVNBLEdBQUdBLENBQUVGLENBQUMsRUFBRTtFQUM3QixPQUFPUixTQUFTLENBQUNRLENBQUMsQ0FBQztBQUNyQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FGLE9BQU8sQ0FBQ0ssR0FBRyxHQUFHLFNBQVNBLEdBQUdBLENBQUVQLENBQUMsRUFBRVEsQ0FBQyxFQUFFO0VBQ2hDLElBQUlSLENBQUMsS0FBSyxDQUFDLElBQUlRLENBQUMsS0FBSyxDQUFDLEVBQUUsT0FBTyxDQUFDOztFQUVoQztFQUNBO0VBQ0EsT0FBT1osU0FBUyxDQUFDRSxTQUFTLENBQUNFLENBQUMsQ0FBQyxHQUFHRixTQUFTLENBQUNVLENBQUMsQ0FBQyxDQUFDO0FBQy9DLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2dhbG9pcy1maWVsZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVYUF9UQUJMRSA9IG5ldyBVaW50OEFycmF5KDUxMilcbmNvbnN0IExPR19UQUJMRSA9IG5ldyBVaW50OEFycmF5KDI1Nilcbi8qKlxuICogUHJlY29tcHV0ZSB0aGUgbG9nIGFuZCBhbnRpLWxvZyB0YWJsZXMgZm9yIGZhc3RlciBjb21wdXRhdGlvbiBsYXRlclxuICpcbiAqIEZvciBlYWNoIHBvc3NpYmxlIHZhbHVlIGluIHRoZSBnYWxvaXMgZmllbGQgMl44LCB3ZSB3aWxsIHByZS1jb21wdXRlXG4gKiB0aGUgbG9nYXJpdGhtIGFuZCBhbnRpLWxvZ2FyaXRobSAoZXhwb25lbnRpYWwpIG9mIHRoaXMgdmFsdWVcbiAqXG4gKiByZWYge0BsaW5rIGh0dHBzOi8vZW4ud2lraXZlcnNpdHkub3JnL3dpa2kvUmVlZCVFMiU4MCU5M1NvbG9tb25fY29kZXNfZm9yX2NvZGVycyNJbnRyb2R1Y3Rpb25fdG9fbWF0aGVtYXRpY2FsX2ZpZWxkc31cbiAqL1xuOyhmdW5jdGlvbiBpbml0VGFibGVzICgpIHtcbiAgbGV0IHggPSAxXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMjU1OyBpKyspIHtcbiAgICBFWFBfVEFCTEVbaV0gPSB4XG4gICAgTE9HX1RBQkxFW3hdID0gaVxuXG4gICAgeCA8PD0gMSAvLyBtdWx0aXBseSBieSAyXG5cbiAgICAvLyBUaGUgUVIgY29kZSBzcGVjaWZpY2F0aW9uIHNheXMgdG8gdXNlIGJ5dGUtd2lzZSBtb2R1bG8gMTAwMDExMTAxIGFyaXRobWV0aWMuXG4gICAgLy8gVGhpcyBtZWFucyB0aGF0IHdoZW4gYSBudW1iZXIgaXMgMjU2IG9yIGxhcmdlciwgaXQgc2hvdWxkIGJlIFhPUmVkIHdpdGggMHgxMUQuXG4gICAgaWYgKHggJiAweDEwMCkgeyAvLyBzaW1pbGFyIHRvIHggPj0gMjU2LCBidXQgYSBsb3QgZmFzdGVyIChiZWNhdXNlIDB4MTAwID09IDI1NilcbiAgICAgIHggXj0gMHgxMURcbiAgICB9XG4gIH1cblxuICAvLyBPcHRpbWl6YXRpb246IGRvdWJsZSB0aGUgc2l6ZSBvZiB0aGUgYW50aS1sb2cgdGFibGUgc28gdGhhdCB3ZSBkb24ndCBuZWVkIHRvIG1vZCAyNTUgdG9cbiAgLy8gc3RheSBpbnNpZGUgdGhlIGJvdW5kcyAoYmVjYXVzZSB3ZSB3aWxsIG1haW5seSB1c2UgdGhpcyB0YWJsZSBmb3IgdGhlIG11bHRpcGxpY2F0aW9uIG9mXG4gIC8vIHR3byBHRiBudW1iZXJzLCBubyBtb3JlKS5cbiAgLy8gQHNlZSB7QGxpbmsgbXVsfVxuICBmb3IgKGxldCBpID0gMjU1OyBpIDwgNTEyOyBpKyspIHtcbiAgICBFWFBfVEFCTEVbaV0gPSBFWFBfVEFCTEVbaSAtIDI1NV1cbiAgfVxufSgpKVxuXG4vKipcbiAqIFJldHVybnMgbG9nIHZhbHVlIG9mIG4gaW5zaWRlIEdhbG9pcyBGaWVsZFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gblxuICogQHJldHVybiB7TnVtYmVyfVxuICovXG5leHBvcnRzLmxvZyA9IGZ1bmN0aW9uIGxvZyAobikge1xuICBpZiAobiA8IDEpIHRocm93IG5ldyBFcnJvcignbG9nKCcgKyBuICsgJyknKVxuICByZXR1cm4gTE9HX1RBQkxFW25dXG59XG5cbi8qKlxuICogUmV0dXJucyBhbnRpLWxvZyB2YWx1ZSBvZiBuIGluc2lkZSBHYWxvaXMgRmllbGRcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IG5cbiAqIEByZXR1cm4ge051bWJlcn1cbiAqL1xuZXhwb3J0cy5leHAgPSBmdW5jdGlvbiBleHAgKG4pIHtcbiAgcmV0dXJuIEVYUF9UQUJMRVtuXVxufVxuXG4vKipcbiAqIE11bHRpcGxpZXMgdHdvIG51bWJlciBpbnNpZGUgR2Fsb2lzIEZpZWxkXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB4XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHlcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqL1xuZXhwb3J0cy5tdWwgPSBmdW5jdGlvbiBtdWwgKHgsIHkpIHtcbiAgaWYgKHggPT09IDAgfHwgeSA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBzaG91bGQgYmUgRVhQX1RBQkxFWyhMT0dfVEFCTEVbeF0gKyBMT0dfVEFCTEVbeV0pICUgMjU1XSBpZiBFWFBfVEFCTEUgd2Fzbid0IG92ZXJzaXplZFxuICAvLyBAc2VlIHtAbGluayBpbml0VGFibGVzfVxuICByZXR1cm4gRVhQX1RBQkxFW0xPR19UQUJMRVt4XSArIExPR19UQUJMRVt5XV1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/galois-field.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/kanji-data.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/kanji-data.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\nconst Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\");\nfunction KanjiData(data) {\n  this.mode = Mode.KANJI;\n  this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n  return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n  return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function (bitBuffer) {\n  let i;\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i]);\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140;\n\n      // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140;\n    } else {\n      throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' + 'Make sure your charset is UTF-8');\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff);\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13);\n  }\n};\nmodule.exports = KanjiData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2thbmppLWRhdGEuanM/Y2Y3YiJdLCJuYW1lcyI6WyJNb2RlIiwicmVxdWlyZSIsIlV0aWxzIiwiS2FuamlEYXRhIiwiZGF0YSIsIm1vZGUiLCJLQU5KSSIsImdldEJpdHNMZW5ndGgiLCJsZW5ndGgiLCJwcm90b3R5cGUiLCJnZXRMZW5ndGgiLCJ3cml0ZSIsImJpdEJ1ZmZlciIsImkiLCJ2YWx1ZSIsInRvU0pJUyIsIkVycm9yIiwicHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLGlGQUFRLENBQUM7QUFDOUIsTUFBTUMsS0FBSyxHQUFHRCxtQkFBTyxDQUFDLG1GQUFTLENBQUM7QUFFaEMsU0FBU0UsU0FBU0EsQ0FBRUMsSUFBSSxFQUFFO0VBQ3hCLElBQUksQ0FBQ0MsSUFBSSxHQUFHTCxJQUFJLENBQUNNLEtBQUs7RUFDdEIsSUFBSSxDQUFDRixJQUFJLEdBQUdBLElBQUk7QUFDbEI7QUFFQUQsU0FBUyxDQUFDSSxhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBRUMsTUFBTSxFQUFFO0VBQ3hELE9BQU9BLE1BQU0sR0FBRyxFQUFFO0FBQ3BCLENBQUM7QUFFREwsU0FBUyxDQUFDTSxTQUFTLENBQUNDLFNBQVMsR0FBRyxTQUFTQSxTQUFTQSxDQUFBLEVBQUk7RUFDcEQsT0FBTyxJQUFJLENBQUNOLElBQUksQ0FBQ0ksTUFBTTtBQUN6QixDQUFDO0FBRURMLFNBQVMsQ0FBQ00sU0FBUyxDQUFDRixhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBQSxFQUFJO0VBQzVELE9BQU9KLFNBQVMsQ0FBQ0ksYUFBYSxDQUFDLElBQUksQ0FBQ0gsSUFBSSxDQUFDSSxNQUFNLENBQUM7QUFDbEQsQ0FBQztBQUVETCxTQUFTLENBQUNNLFNBQVMsQ0FBQ0UsS0FBSyxHQUFHLFVBQVVDLFNBQVMsRUFBRTtFQUMvQyxJQUFJQyxDQUFDOztFQUVMO0VBQ0E7RUFDQTtFQUNBLEtBQUtBLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxJQUFJLENBQUNULElBQUksQ0FBQ0ksTUFBTSxFQUFFSyxDQUFDLEVBQUUsRUFBRTtJQUNyQyxJQUFJQyxLQUFLLEdBQUdaLEtBQUssQ0FBQ2EsTUFBTSxDQUFDLElBQUksQ0FBQ1gsSUFBSSxDQUFDUyxDQUFDLENBQUMsQ0FBQzs7SUFFdEM7SUFDQSxJQUFJQyxLQUFLLElBQUksTUFBTSxJQUFJQSxLQUFLLElBQUksTUFBTSxFQUFFO01BQ3RDO01BQ0FBLEtBQUssSUFBSSxNQUFNOztNQUVqQjtJQUNBLENBQUMsTUFBTSxJQUFJQSxLQUFLLElBQUksTUFBTSxJQUFJQSxLQUFLLElBQUksTUFBTSxFQUFFO01BQzdDO01BQ0FBLEtBQUssSUFBSSxNQUFNO0lBQ2pCLENBQUMsTUFBTTtNQUNMLE1BQU0sSUFBSUUsS0FBSyxDQUNiLDBCQUEwQixHQUFHLElBQUksQ0FBQ1osSUFBSSxDQUFDUyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQ2hELGlDQUFpQyxDQUFDO0lBQ3RDOztJQUVBO0lBQ0E7SUFDQUMsS0FBSyxHQUFJLENBQUVBLEtBQUssS0FBSyxDQUFDLEdBQUksSUFBSSxJQUFJLElBQUksSUFBS0EsS0FBSyxHQUFHLElBQUksQ0FBQzs7SUFFeEQ7SUFDQUYsU0FBUyxDQUFDSyxHQUFHLENBQUNILEtBQUssRUFBRSxFQUFFLENBQUM7RUFDMUI7QUFDRixDQUFDO0FBRURJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEIsU0FBUyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUva2FuamktZGF0YS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1vZGUgPSByZXF1aXJlKCcuL21vZGUnKVxuY29uc3QgVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuZnVuY3Rpb24gS2FuamlEYXRhIChkYXRhKSB7XG4gIHRoaXMubW9kZSA9IE1vZGUuS0FOSklcbiAgdGhpcy5kYXRhID0gZGF0YVxufVxuXG5LYW5qaURhdGEuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKGxlbmd0aCkge1xuICByZXR1cm4gbGVuZ3RoICogMTNcbn1cblxuS2FuamlEYXRhLnByb3RvdHlwZS5nZXRMZW5ndGggPSBmdW5jdGlvbiBnZXRMZW5ndGggKCkge1xuICByZXR1cm4gdGhpcy5kYXRhLmxlbmd0aFxufVxuXG5LYW5qaURhdGEucHJvdG90eXBlLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoICgpIHtcbiAgcmV0dXJuIEthbmppRGF0YS5nZXRCaXRzTGVuZ3RoKHRoaXMuZGF0YS5sZW5ndGgpXG59XG5cbkthbmppRGF0YS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoYml0QnVmZmVyKSB7XG4gIGxldCBpXG5cbiAgLy8gSW4gdGhlIFNoaWZ0IEpJUyBzeXN0ZW0sIEthbmppIGNoYXJhY3RlcnMgYXJlIHJlcHJlc2VudGVkIGJ5IGEgdHdvIGJ5dGUgY29tYmluYXRpb24uXG4gIC8vIFRoZXNlIGJ5dGUgdmFsdWVzIGFyZSBzaGlmdGVkIGZyb20gdGhlIEpJUyBYIDAyMDggdmFsdWVzLlxuICAvLyBKSVMgWCAwMjA4IGdpdmVzIGRldGFpbHMgb2YgdGhlIHNoaWZ0IGNvZGVkIHJlcHJlc2VudGF0aW9uLlxuICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHZhbHVlID0gVXRpbHMudG9TSklTKHRoaXMuZGF0YVtpXSlcblxuICAgIC8vIEZvciBjaGFyYWN0ZXJzIHdpdGggU2hpZnQgSklTIHZhbHVlcyBmcm9tIDB4ODE0MCB0byAweDlGRkM6XG4gICAgaWYgKHZhbHVlID49IDB4ODE0MCAmJiB2YWx1ZSA8PSAweDlGRkMpIHtcbiAgICAgIC8vIFN1YnRyYWN0IDB4ODE0MCBmcm9tIFNoaWZ0IEpJUyB2YWx1ZVxuICAgICAgdmFsdWUgLT0gMHg4MTQwXG5cbiAgICAvLyBGb3IgY2hhcmFjdGVycyB3aXRoIFNoaWZ0IEpJUyB2YWx1ZXMgZnJvbSAweEUwNDAgdG8gMHhFQkJGXG4gICAgfSBlbHNlIGlmICh2YWx1ZSA+PSAweEUwNDAgJiYgdmFsdWUgPD0gMHhFQkJGKSB7XG4gICAgICAvLyBTdWJ0cmFjdCAweEMxNDAgZnJvbSBTaGlmdCBKSVMgdmFsdWVcbiAgICAgIHZhbHVlIC09IDB4QzE0MFxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdJbnZhbGlkIFNKSVMgY2hhcmFjdGVyOiAnICsgdGhpcy5kYXRhW2ldICsgJ1xcbicgK1xuICAgICAgICAnTWFrZSBzdXJlIHlvdXIgY2hhcnNldCBpcyBVVEYtOCcpXG4gICAgfVxuXG4gICAgLy8gTXVsdGlwbHkgbW9zdCBzaWduaWZpY2FudCBieXRlIG9mIHJlc3VsdCBieSAweEMwXG4gICAgLy8gYW5kIGFkZCBsZWFzdCBzaWduaWZpY2FudCBieXRlIHRvIHByb2R1Y3RcbiAgICB2YWx1ZSA9ICgoKHZhbHVlID4+PiA4KSAmIDB4ZmYpICogMHhDMCkgKyAodmFsdWUgJiAweGZmKVxuXG4gICAgLy8gQ29udmVydCByZXN1bHQgdG8gYSAxMy1iaXQgYmluYXJ5IHN0cmluZ1xuICAgIGJpdEJ1ZmZlci5wdXQodmFsdWUsIDEzKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gS2FuamlEYXRhXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/kanji-data.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mask-pattern.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mask-pattern.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n};\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid(mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n};\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from(value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined;\n};\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1(data) {\n  const size = data.size;\n  let points = 0;\n  let sameCountCol = 0;\n  let sameCountRow = 0;\n  let lastCol = null;\n  let lastRow = null;\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0;\n    lastCol = lastRow = null;\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col);\n      if (module === lastCol) {\n        sameCountCol++;\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n        lastCol = module;\n        sameCountCol = 1;\n      }\n      module = data.get(col, row);\n      if (module === lastRow) {\n        sameCountRow++;\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n        lastRow = module;\n        sameCountRow = 1;\n      }\n    }\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n  }\n  return points;\n};\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2(data) {\n  const size = data.size;\n  let points = 0;\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);\n      if (last === 4 || last === 0) points++;\n    }\n  }\n  return points * PenaltyScores.N2;\n};\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3(data) {\n  const size = data.size;\n  let points = 0;\n  let bitsCol = 0;\n  let bitsRow = 0;\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0;\n    for (let col = 0; col < size; col++) {\n      bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;\n      bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;\n    }\n  }\n  return points * PenaltyScores.N3;\n};\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4(data) {\n  let darkCount = 0;\n  const modulesCount = data.data.length;\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i];\n  const k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);\n  return k * PenaltyScores.N4;\n};\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt(maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000:\n      return (i + j) % 2 === 0;\n    case exports.Patterns.PATTERN001:\n      return i % 2 === 0;\n    case exports.Patterns.PATTERN010:\n      return j % 3 === 0;\n    case exports.Patterns.PATTERN011:\n      return (i + j) % 3 === 0;\n    case exports.Patterns.PATTERN100:\n      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n    case exports.Patterns.PATTERN101:\n      return i * j % 2 + i * j % 3 === 0;\n    case exports.Patterns.PATTERN110:\n      return (i * j % 2 + i * j % 3) % 2 === 0;\n    case exports.Patterns.PATTERN111:\n      return (i * j % 3 + (i + j) % 2) % 2 === 0;\n    default:\n      throw new Error('bad maskPattern:' + maskPattern);\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask(pattern, data) {\n  const size = data.size;\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue;\n      data.xor(row, col, getMaskAt(pattern, row, col));\n    }\n  }\n};\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask(data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length;\n  let bestPattern = 0;\n  let lowerPenalty = Infinity;\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p);\n    exports.applyMask(p, data);\n\n    // Calculate penalty\n    const penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);\n\n    // Undo previously applied mask\n    exports.applyMask(p, data);\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty;\n      bestPattern = p;\n    }\n  }\n  return bestPattern;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mask-pattern.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const VersionCheck = __webpack_require__(/*! ./version-check */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version-check.js\");\nconst Regex = __webpack_require__(/*! ./regex */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/regex.js\");\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n};\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n};\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n};\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n};\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n};\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode);\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version);\n  }\n  if (version >= 1 && version < 10) return mode.ccBits[0];else if (version < 27) return mode.ccBits[1];\n  return mode.ccBits[2];\n};\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData(dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC;else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;else if (Regex.testKanji(dataStr)) return exports.KANJI;else return exports.BYTE;\n};\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString(mode) {\n  if (mode && mode.id) return mode.id;\n  throw new Error('Invalid mode');\n};\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid(mode) {\n  return mode && mode.bit && mode.ccBits;\n};\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString(string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string');\n  }\n  const lcStr = string.toLowerCase();\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC;\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC;\n    case 'kanji':\n      return exports.KANJI;\n    case 'byte':\n      return exports.BYTE;\n    default:\n      throw new Error('Unknown mode: ' + string);\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from(value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value;\n  }\n  try {\n    return fromString(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/numeric-data.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/numeric-data.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\nfunction NumericData(data) {\n  this.mode = Mode.NUMERIC;\n  this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n  return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n  return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n  let i, group, value;\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3);\n    value = parseInt(group, 10);\n    bitBuffer.put(value, 10);\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i;\n  if (remainingNum > 0) {\n    group = this.data.substr(i);\n    value = parseInt(group, 10);\n    bitBuffer.put(value, remainingNum * 3 + 1);\n  }\n};\nmodule.exports = NumericData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL251bWVyaWMtZGF0YS5qcz85MzY5Il0sIm5hbWVzIjpbIk1vZGUiLCJyZXF1aXJlIiwiTnVtZXJpY0RhdGEiLCJkYXRhIiwibW9kZSIsIk5VTUVSSUMiLCJ0b1N0cmluZyIsImdldEJpdHNMZW5ndGgiLCJsZW5ndGgiLCJNYXRoIiwiZmxvb3IiLCJwcm90b3R5cGUiLCJnZXRMZW5ndGgiLCJ3cml0ZSIsImJpdEJ1ZmZlciIsImkiLCJncm91cCIsInZhbHVlIiwic3Vic3RyIiwicGFyc2VJbnQiLCJwdXQiLCJyZW1haW5pbmdOdW0iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLG1CQUFPLENBQUMsaUZBQVEsQ0FBQztBQUU5QixTQUFTQyxXQUFXQSxDQUFFQyxJQUFJLEVBQUU7RUFDMUIsSUFBSSxDQUFDQyxJQUFJLEdBQUdKLElBQUksQ0FBQ0ssT0FBTztFQUN4QixJQUFJLENBQUNGLElBQUksR0FBR0EsSUFBSSxDQUFDRyxRQUFRLENBQUMsQ0FBQztBQUM3QjtBQUVBSixXQUFXLENBQUNLLGFBQWEsR0FBRyxTQUFTQSxhQUFhQSxDQUFFQyxNQUFNLEVBQUU7RUFDMUQsT0FBTyxFQUFFLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUtBLE1BQU0sR0FBRyxDQUFDLEdBQU1BLE1BQU0sR0FBRyxDQUFDLEdBQUksQ0FBQyxHQUFHLENBQUMsR0FBSSxDQUFDLENBQUM7QUFDbEYsQ0FBQztBQUVETixXQUFXLENBQUNTLFNBQVMsQ0FBQ0MsU0FBUyxHQUFHLFNBQVNBLFNBQVNBLENBQUEsRUFBSTtFQUN0RCxPQUFPLElBQUksQ0FBQ1QsSUFBSSxDQUFDSyxNQUFNO0FBQ3pCLENBQUM7QUFFRE4sV0FBVyxDQUFDUyxTQUFTLENBQUNKLGFBQWEsR0FBRyxTQUFTQSxhQUFhQSxDQUFBLEVBQUk7RUFDOUQsT0FBT0wsV0FBVyxDQUFDSyxhQUFhLENBQUMsSUFBSSxDQUFDSixJQUFJLENBQUNLLE1BQU0sQ0FBQztBQUNwRCxDQUFDO0FBRUROLFdBQVcsQ0FBQ1MsU0FBUyxDQUFDRSxLQUFLLEdBQUcsU0FBU0EsS0FBS0EsQ0FBRUMsU0FBUyxFQUFFO0VBQ3ZELElBQUlDLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxLQUFLOztFQUVuQjtFQUNBO0VBQ0EsS0FBS0YsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUNaLElBQUksQ0FBQ0ssTUFBTSxFQUFFTyxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQzdDQyxLQUFLLEdBQUcsSUFBSSxDQUFDYixJQUFJLENBQUNlLE1BQU0sQ0FBQ0gsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QkUsS0FBSyxHQUFHRSxRQUFRLENBQUNILEtBQUssRUFBRSxFQUFFLENBQUM7SUFFM0JGLFNBQVMsQ0FBQ00sR0FBRyxDQUFDSCxLQUFLLEVBQUUsRUFBRSxDQUFDO0VBQzFCOztFQUVBO0VBQ0E7RUFDQSxNQUFNSSxZQUFZLEdBQUcsSUFBSSxDQUFDbEIsSUFBSSxDQUFDSyxNQUFNLEdBQUdPLENBQUM7RUFDekMsSUFBSU0sWUFBWSxHQUFHLENBQUMsRUFBRTtJQUNwQkwsS0FBSyxHQUFHLElBQUksQ0FBQ2IsSUFBSSxDQUFDZSxNQUFNLENBQUNILENBQUMsQ0FBQztJQUMzQkUsS0FBSyxHQUFHRSxRQUFRLENBQUNILEtBQUssRUFBRSxFQUFFLENBQUM7SUFFM0JGLFNBQVMsQ0FBQ00sR0FBRyxDQUFDSCxLQUFLLEVBQUVJLFlBQVksR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQzVDO0FBQ0YsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR3JCLFdBQVciLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL251bWVyaWMtZGF0YS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1vZGUgPSByZXF1aXJlKCcuL21vZGUnKVxuXG5mdW5jdGlvbiBOdW1lcmljRGF0YSAoZGF0YSkge1xuICB0aGlzLm1vZGUgPSBNb2RlLk5VTUVSSUNcbiAgdGhpcy5kYXRhID0gZGF0YS50b1N0cmluZygpXG59XG5cbk51bWVyaWNEYXRhLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoIChsZW5ndGgpIHtcbiAgcmV0dXJuIDEwICogTWF0aC5mbG9vcihsZW5ndGggLyAzKSArICgobGVuZ3RoICUgMykgPyAoKGxlbmd0aCAlIDMpICogMyArIDEpIDogMClcbn1cblxuTnVtZXJpY0RhdGEucHJvdG90eXBlLmdldExlbmd0aCA9IGZ1bmN0aW9uIGdldExlbmd0aCAoKSB7XG4gIHJldHVybiB0aGlzLmRhdGEubGVuZ3RoXG59XG5cbk51bWVyaWNEYXRhLnByb3RvdHlwZS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAoKSB7XG4gIHJldHVybiBOdW1lcmljRGF0YS5nZXRCaXRzTGVuZ3RoKHRoaXMuZGF0YS5sZW5ndGgpXG59XG5cbk51bWVyaWNEYXRhLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIHdyaXRlIChiaXRCdWZmZXIpIHtcbiAgbGV0IGksIGdyb3VwLCB2YWx1ZVxuXG4gIC8vIFRoZSBpbnB1dCBkYXRhIHN0cmluZyBpcyBkaXZpZGVkIGludG8gZ3JvdXBzIG9mIHRocmVlIGRpZ2l0cyxcbiAgLy8gYW5kIGVhY2ggZ3JvdXAgaXMgY29udmVydGVkIHRvIGl0cyAxMC1iaXQgYmluYXJ5IGVxdWl2YWxlbnQuXG4gIGZvciAoaSA9IDA7IGkgKyAzIDw9IHRoaXMuZGF0YS5sZW5ndGg7IGkgKz0gMykge1xuICAgIGdyb3VwID0gdGhpcy5kYXRhLnN1YnN0cihpLCAzKVxuICAgIHZhbHVlID0gcGFyc2VJbnQoZ3JvdXAsIDEwKVxuXG4gICAgYml0QnVmZmVyLnB1dCh2YWx1ZSwgMTApXG4gIH1cblxuICAvLyBJZiB0aGUgbnVtYmVyIG9mIGlucHV0IGRpZ2l0cyBpcyBub3QgYW4gZXhhY3QgbXVsdGlwbGUgb2YgdGhyZWUsXG4gIC8vIHRoZSBmaW5hbCBvbmUgb3IgdHdvIGRpZ2l0cyBhcmUgY29udmVydGVkIHRvIDQgb3IgNyBiaXRzIHJlc3BlY3RpdmVseS5cbiAgY29uc3QgcmVtYWluaW5nTnVtID0gdGhpcy5kYXRhLmxlbmd0aCAtIGlcbiAgaWYgKHJlbWFpbmluZ051bSA+IDApIHtcbiAgICBncm91cCA9IHRoaXMuZGF0YS5zdWJzdHIoaSlcbiAgICB2YWx1ZSA9IHBhcnNlSW50KGdyb3VwLCAxMClcblxuICAgIGJpdEJ1ZmZlci5wdXQodmFsdWUsIHJlbWFpbmluZ051bSAqIDMgKyAxKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTnVtZXJpY0RhdGFcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/numeric-data.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/polynomial.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/polynomial.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const GF = __webpack_require__(/*! ./galois-field */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/galois-field.js\");\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul(p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1);\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j]);\n    }\n  }\n  return coeff;\n};\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod(divident, divisor) {\n  let result = new Uint8Array(divident);\n  while (result.length - divisor.length >= 0) {\n    const coeff = result[0];\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff);\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0;\n    while (offset < result.length && result[offset] === 0) offset++;\n    result = result.slice(offset);\n  }\n  return result;\n};\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial(degree) {\n  let poly = new Uint8Array([1]);\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]));\n  }\n  return poly;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3BvbHlub21pYWwuanM/ZmQ0NyJdLCJuYW1lcyI6WyJHRiIsInJlcXVpcmUiLCJleHBvcnRzIiwibXVsIiwicDEiLCJwMiIsImNvZWZmIiwiVWludDhBcnJheSIsImxlbmd0aCIsImkiLCJqIiwibW9kIiwiZGl2aWRlbnQiLCJkaXZpc29yIiwicmVzdWx0Iiwib2Zmc2V0Iiwic2xpY2UiLCJnZW5lcmF0ZUVDUG9seW5vbWlhbCIsImRlZ3JlZSIsInBvbHkiLCJleHAiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEVBQUUsR0FBR0MsbUJBQU8sQ0FBQyxpR0FBZ0IsQ0FBQzs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsT0FBTyxDQUFDQyxHQUFHLEdBQUcsU0FBU0EsR0FBR0EsQ0FBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUU7RUFDbEMsTUFBTUMsS0FBSyxHQUFHLElBQUlDLFVBQVUsQ0FBQ0gsRUFBRSxDQUFDSSxNQUFNLEdBQUdILEVBQUUsQ0FBQ0csTUFBTSxHQUFHLENBQUMsQ0FBQztFQUV2RCxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0wsRUFBRSxDQUFDSSxNQUFNLEVBQUVDLENBQUMsRUFBRSxFQUFFO0lBQ2xDLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTCxFQUFFLENBQUNHLE1BQU0sRUFBRUUsQ0FBQyxFQUFFLEVBQUU7TUFDbENKLEtBQUssQ0FBQ0csQ0FBQyxHQUFHQyxDQUFDLENBQUMsSUFBSVYsRUFBRSxDQUFDRyxHQUFHLENBQUNDLEVBQUUsQ0FBQ0ssQ0FBQyxDQUFDLEVBQUVKLEVBQUUsQ0FBQ0ssQ0FBQyxDQUFDLENBQUM7SUFDdEM7RUFDRjtFQUVBLE9BQU9KLEtBQUs7QUFDZCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FKLE9BQU8sQ0FBQ1MsR0FBRyxHQUFHLFNBQVNBLEdBQUdBLENBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFO0VBQzdDLElBQUlDLE1BQU0sR0FBRyxJQUFJUCxVQUFVLENBQUNLLFFBQVEsQ0FBQztFQUVyQyxPQUFRRSxNQUFNLENBQUNOLE1BQU0sR0FBR0ssT0FBTyxDQUFDTCxNQUFNLElBQUssQ0FBQyxFQUFFO0lBQzVDLE1BQU1GLEtBQUssR0FBR1EsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUV2QixLQUFLLElBQUlMLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0ksT0FBTyxDQUFDTCxNQUFNLEVBQUVDLENBQUMsRUFBRSxFQUFFO01BQ3ZDSyxNQUFNLENBQUNMLENBQUMsQ0FBQyxJQUFJVCxFQUFFLENBQUNHLEdBQUcsQ0FBQ1UsT0FBTyxDQUFDSixDQUFDLENBQUMsRUFBRUgsS0FBSyxDQUFDO0lBQ3hDOztJQUVBO0lBQ0EsSUFBSVMsTUFBTSxHQUFHLENBQUM7SUFDZCxPQUFPQSxNQUFNLEdBQUdELE1BQU0sQ0FBQ04sTUFBTSxJQUFJTSxNQUFNLENBQUNDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRUEsTUFBTSxFQUFFO0lBQy9ERCxNQUFNLEdBQUdBLE1BQU0sQ0FBQ0UsS0FBSyxDQUFDRCxNQUFNLENBQUM7RUFDL0I7RUFFQSxPQUFPRCxNQUFNO0FBQ2YsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBWixPQUFPLENBQUNlLG9CQUFvQixHQUFHLFNBQVNBLG9CQUFvQkEsQ0FBRUMsTUFBTSxFQUFFO0VBQ3BFLElBQUlDLElBQUksR0FBRyxJQUFJWixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUM5QixLQUFLLElBQUlFLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR1MsTUFBTSxFQUFFVCxDQUFDLEVBQUUsRUFBRTtJQUMvQlUsSUFBSSxHQUFHakIsT0FBTyxDQUFDQyxHQUFHLENBQUNnQixJQUFJLEVBQUUsSUFBSVosVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFUCxFQUFFLENBQUNvQixHQUFHLENBQUNYLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUMxRDtFQUVBLE9BQU9VLElBQUk7QUFDYixDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9wb2x5bm9taWFsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR0YgPSByZXF1aXJlKCcuL2dhbG9pcy1maWVsZCcpXG5cbi8qKlxuICogTXVsdGlwbGllcyB0d28gcG9seW5vbWlhbHMgaW5zaWRlIEdhbG9pcyBGaWVsZFxuICpcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IHAxIFBvbHlub21pYWxcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IHAyIFBvbHlub21pYWxcbiAqIEByZXR1cm4ge1VpbnQ4QXJyYXl9ICAgIFByb2R1Y3Qgb2YgcDEgYW5kIHAyXG4gKi9cbmV4cG9ydHMubXVsID0gZnVuY3Rpb24gbXVsIChwMSwgcDIpIHtcbiAgY29uc3QgY29lZmYgPSBuZXcgVWludDhBcnJheShwMS5sZW5ndGggKyBwMi5sZW5ndGggLSAxKVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcDEubGVuZ3RoOyBpKyspIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHAyLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb2VmZltpICsgal0gXj0gR0YubXVsKHAxW2ldLCBwMltqXSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29lZmZcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIHJlbWFpbmRlciBvZiBwb2x5bm9taWFscyBkaXZpc2lvblxuICpcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IGRpdmlkZW50IFBvbHlub21pYWxcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IGRpdmlzb3IgIFBvbHlub21pYWxcbiAqIEByZXR1cm4ge1VpbnQ4QXJyYXl9ICAgICAgICAgIFJlbWFpbmRlclxuICovXG5leHBvcnRzLm1vZCA9IGZ1bmN0aW9uIG1vZCAoZGl2aWRlbnQsIGRpdmlzb3IpIHtcbiAgbGV0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGRpdmlkZW50KVxuXG4gIHdoaWxlICgocmVzdWx0Lmxlbmd0aCAtIGRpdmlzb3IubGVuZ3RoKSA+PSAwKSB7XG4gICAgY29uc3QgY29lZmYgPSByZXN1bHRbMF1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGl2aXNvci5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0W2ldIF49IEdGLm11bChkaXZpc29yW2ldLCBjb2VmZilcbiAgICB9XG5cbiAgICAvLyByZW1vdmUgYWxsIHplcm9zIGZyb20gYnVmZmVyIGhlYWRcbiAgICBsZXQgb2Zmc2V0ID0gMFxuICAgIHdoaWxlIChvZmZzZXQgPCByZXN1bHQubGVuZ3RoICYmIHJlc3VsdFtvZmZzZXRdID09PSAwKSBvZmZzZXQrK1xuICAgIHJlc3VsdCA9IHJlc3VsdC5zbGljZShvZmZzZXQpXG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG5cbi8qKlxuICogR2VuZXJhdGUgYW4gaXJyZWR1Y2libGUgZ2VuZXJhdG9yIHBvbHlub21pYWwgb2Ygc3BlY2lmaWVkIGRlZ3JlZVxuICogKHVzZWQgYnkgUmVlZC1Tb2xvbW9uIGVuY29kZXIpXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBkZWdyZWUgRGVncmVlIG9mIHRoZSBnZW5lcmF0b3IgcG9seW5vbWlhbFxuICogQHJldHVybiB7VWludDhBcnJheX0gICAgQnVmZmVyIGNvbnRhaW5pbmcgcG9seW5vbWlhbCBjb2VmZmljaWVudHNcbiAqL1xuZXhwb3J0cy5nZW5lcmF0ZUVDUG9seW5vbWlhbCA9IGZ1bmN0aW9uIGdlbmVyYXRlRUNQb2x5bm9taWFsIChkZWdyZWUpIHtcbiAgbGV0IHBvbHkgPSBuZXcgVWludDhBcnJheShbMV0pXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGVncmVlOyBpKyspIHtcbiAgICBwb2x5ID0gZXhwb3J0cy5tdWwocG9seSwgbmV3IFVpbnQ4QXJyYXkoWzEsIEdGLmV4cChpKV0pKVxuICB9XG5cbiAgcmV0dXJuIHBvbHlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/polynomial.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/qrcode.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/qrcode.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\");\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst BitBuffer = __webpack_require__(/*! ./bit-buffer */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-buffer.js\");\nconst BitMatrix = __webpack_require__(/*! ./bit-matrix */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/bit-matrix.js\");\nconst AlignmentPattern = __webpack_require__(/*! ./alignment-pattern */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alignment-pattern.js\");\nconst FinderPattern = __webpack_require__(/*! ./finder-pattern */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/finder-pattern.js\");\nconst MaskPattern = __webpack_require__(/*! ./mask-pattern */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mask-pattern.js\");\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-code.js\");\nconst ReedSolomonEncoder = __webpack_require__(/*! ./reed-solomon-encoder */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js\");\nconst Version = __webpack_require__(/*! ./version */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version.js\");\nconst FormatInfo = __webpack_require__(/*! ./format-info */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/format-info.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\nconst Segments = __webpack_require__(/*! ./segments */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/segments.js\");\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern(matrix, version) {\n  const size = matrix.size;\n  const pos = FinderPattern.getPositions(version);\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0];\n    const col = pos[i][1];\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue;\n        if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {\n          matrix.set(row + r, col + c, true, true);\n        } else {\n          matrix.set(row + r, col + c, false, true);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern(matrix) {\n  const size = matrix.size;\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0;\n    matrix.set(r, 6, value, true);\n    matrix.set(6, r, value, true);\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern(matrix, version) {\n  const pos = AlignmentPattern.getPositions(version);\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0];\n    const col = pos[i][1];\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {\n          matrix.set(row + r, col + c, true, true);\n        } else {\n          matrix.set(row + r, col + c, false, true);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo(matrix, version) {\n  const size = matrix.size;\n  const bits = Version.getEncodedBits(version);\n  let row, col, mod;\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3);\n    col = i % 3 + size - 8 - 3;\n    mod = (bits >> i & 1) === 1;\n    matrix.set(row, col, mod, true);\n    matrix.set(col, row, mod, true);\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size;\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n  let i, mod;\n  for (i = 0; i < 15; i++) {\n    mod = (bits >> i & 1) === 1;\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true);\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true);\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true);\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true);\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true);\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true);\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true);\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData(matrix, data) {\n  const size = matrix.size;\n  let inc = -1;\n  let row = size - 1;\n  let bitIndex = 7;\n  let byteIndex = 0;\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--;\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false;\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n          }\n          matrix.set(row, col - c, dark);\n          bitIndex--;\n          if (bitIndex === -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n      row += inc;\n      if (row < 0 || size <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData(version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer();\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4);\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version));\n\n    // add binary data sequence to buffer\n    data.write(buffer);\n  });\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version);\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4);\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0);\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n  }\n  return createCodewords(buffer, version, errorCorrectionLevel);\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version);\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords;\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel);\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks;\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount);\n  let offset = 0;\n  const dcData = new Array(ecTotalBlocks);\n  const ecData = new Array(ecTotalBlocks);\n  let maxDataSize = 0;\n  const buffer = new Uint8Array(bitBuffer.buffer);\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize);\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b]);\n    offset += dataSize;\n    maxDataSize = Math.max(maxDataSize, dataSize);\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords);\n  let index = 0;\n  let i, r;\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i];\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i];\n    }\n  }\n  return data;\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol(data, version, errorCorrectionLevel, maskPattern) {\n  let segments;\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data);\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version;\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data);\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40);\n  } else {\n    throw new Error('Invalid data');\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel);\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code');\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion;\n\n    // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' + 'The chosen QR Code version cannot contain this amount of data.\\n' + 'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n  }\n  const dataBits = createData(version, errorCorrectionLevel, segments);\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version);\n  const modules = new BitMatrix(moduleCount);\n\n  // Add function modules\n  setupFinderPattern(modules, version);\n  setupTimingPattern(modules);\n  setupAlignmentPattern(modules, version);\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0);\n  if (version >= 7) {\n    setupVersionInfo(modules, version);\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits);\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules);\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern);\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  };\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create(data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text');\n  }\n  let errorCorrectionLevel = ECLevel.M;\n  let version;\n  let mask;\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);\n    version = Version.from(options.version);\n    mask = MaskPattern.from(options.maskPattern);\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc);\n    }\n  }\n  return createSymbol(data, version, errorCorrectionLevel, mask);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/qrcode.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Polynomial = __webpack_require__(/*! ./polynomial */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/polynomial.js\");\nfunction ReedSolomonEncoder(degree) {\n  this.genPoly = undefined;\n  this.degree = degree;\n  if (this.degree) this.initialize(this.degree);\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree;\n  this.genPoly = Polynomial.generateECPolynomial(this.degree);\n};\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode(data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized');\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree);\n  paddedData.set(data);\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly);\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length;\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree);\n    buff.set(remainder, start);\n    return buff;\n  }\n  return remainder;\n};\nmodule.exports = ReedSolomonEncoder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3JlZWQtc29sb21vbi1lbmNvZGVyLmpzP2M1YWQiXSwibmFtZXMiOlsiUG9seW5vbWlhbCIsInJlcXVpcmUiLCJSZWVkU29sb21vbkVuY29kZXIiLCJkZWdyZWUiLCJnZW5Qb2x5IiwidW5kZWZpbmVkIiwiaW5pdGlhbGl6ZSIsInByb3RvdHlwZSIsImdlbmVyYXRlRUNQb2x5bm9taWFsIiwiZW5jb2RlIiwiZGF0YSIsIkVycm9yIiwicGFkZGVkRGF0YSIsIlVpbnQ4QXJyYXkiLCJsZW5ndGgiLCJzZXQiLCJyZW1haW5kZXIiLCJtb2QiLCJzdGFydCIsImJ1ZmYiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLEdBQUdDLG1CQUFPLENBQUMsNkZBQWMsQ0FBQztBQUUxQyxTQUFTQyxrQkFBa0JBLENBQUVDLE1BQU0sRUFBRTtFQUNuQyxJQUFJLENBQUNDLE9BQU8sR0FBR0MsU0FBUztFQUN4QixJQUFJLENBQUNGLE1BQU0sR0FBR0EsTUFBTTtFQUVwQixJQUFJLElBQUksQ0FBQ0EsTUFBTSxFQUFFLElBQUksQ0FBQ0csVUFBVSxDQUFDLElBQUksQ0FBQ0gsTUFBTSxDQUFDO0FBQy9DOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRCxrQkFBa0IsQ0FBQ0ssU0FBUyxDQUFDRCxVQUFVLEdBQUcsU0FBU0EsVUFBVUEsQ0FBRUgsTUFBTSxFQUFFO0VBQ3JFO0VBQ0EsSUFBSSxDQUFDQSxNQUFNLEdBQUdBLE1BQU07RUFDcEIsSUFBSSxDQUFDQyxPQUFPLEdBQUdKLFVBQVUsQ0FBQ1Esb0JBQW9CLENBQUMsSUFBSSxDQUFDTCxNQUFNLENBQUM7QUFDN0QsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUQsa0JBQWtCLENBQUNLLFNBQVMsQ0FBQ0UsTUFBTSxHQUFHLFNBQVNBLE1BQU1BLENBQUVDLElBQUksRUFBRTtFQUMzRCxJQUFJLENBQUMsSUFBSSxDQUFDTixPQUFPLEVBQUU7SUFDakIsTUFBTSxJQUFJTyxLQUFLLENBQUMseUJBQXlCLENBQUM7RUFDNUM7O0VBRUE7RUFDQTtFQUNBLE1BQU1DLFVBQVUsR0FBRyxJQUFJQyxVQUFVLENBQUNILElBQUksQ0FBQ0ksTUFBTSxHQUFHLElBQUksQ0FBQ1gsTUFBTSxDQUFDO0VBQzVEUyxVQUFVLENBQUNHLEdBQUcsQ0FBQ0wsSUFBSSxDQUFDOztFQUVwQjtFQUNBO0VBQ0EsTUFBTU0sU0FBUyxHQUFHaEIsVUFBVSxDQUFDaUIsR0FBRyxDQUFDTCxVQUFVLEVBQUUsSUFBSSxDQUFDUixPQUFPLENBQUM7O0VBRTFEO0VBQ0E7RUFDQTtFQUNBLE1BQU1jLEtBQUssR0FBRyxJQUFJLENBQUNmLE1BQU0sR0FBR2EsU0FBUyxDQUFDRixNQUFNO0VBQzVDLElBQUlJLEtBQUssR0FBRyxDQUFDLEVBQUU7SUFDYixNQUFNQyxJQUFJLEdBQUcsSUFBSU4sVUFBVSxDQUFDLElBQUksQ0FBQ1YsTUFBTSxDQUFDO0lBQ3hDZ0IsSUFBSSxDQUFDSixHQUFHLENBQUNDLFNBQVMsRUFBRUUsS0FBSyxDQUFDO0lBRTFCLE9BQU9DLElBQUk7RUFDYjtFQUVBLE9BQU9ILFNBQVM7QUFDbEIsQ0FBQztBQUVESSxNQUFNLENBQUNDLE9BQU8sR0FBR25CLGtCQUFrQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvcmVlZC1zb2xvbW9uLWVuY29kZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQb2x5bm9taWFsID0gcmVxdWlyZSgnLi9wb2x5bm9taWFsJylcblxuZnVuY3Rpb24gUmVlZFNvbG9tb25FbmNvZGVyIChkZWdyZWUpIHtcbiAgdGhpcy5nZW5Qb2x5ID0gdW5kZWZpbmVkXG4gIHRoaXMuZGVncmVlID0gZGVncmVlXG5cbiAgaWYgKHRoaXMuZGVncmVlKSB0aGlzLmluaXRpYWxpemUodGhpcy5kZWdyZWUpXG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgZW5jb2Rlci5cbiAqIFRoZSBpbnB1dCBwYXJhbSBzaG91bGQgY29ycmVzcG9uZCB0byB0aGUgbnVtYmVyIG9mIGVycm9yIGNvcnJlY3Rpb24gY29kZXdvcmRzLlxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gZGVncmVlXG4gKi9cblJlZWRTb2xvbW9uRW5jb2Rlci5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uIGluaXRpYWxpemUgKGRlZ3JlZSkge1xuICAvLyBjcmVhdGUgYW4gaXJyZWR1Y2libGUgZ2VuZXJhdG9yIHBvbHlub21pYWxcbiAgdGhpcy5kZWdyZWUgPSBkZWdyZWVcbiAgdGhpcy5nZW5Qb2x5ID0gUG9seW5vbWlhbC5nZW5lcmF0ZUVDUG9seW5vbWlhbCh0aGlzLmRlZ3JlZSlcbn1cblxuLyoqXG4gKiBFbmNvZGVzIGEgY2h1bmsgb2YgZGF0YVxuICpcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IGRhdGEgQnVmZmVyIGNvbnRhaW5pbmcgaW5wdXQgZGF0YVxuICogQHJldHVybiB7VWludDhBcnJheX0gICAgICBCdWZmZXIgY29udGFpbmluZyBlbmNvZGVkIGRhdGFcbiAqL1xuUmVlZFNvbG9tb25FbmNvZGVyLnByb3RvdHlwZS5lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUgKGRhdGEpIHtcbiAgaWYgKCF0aGlzLmdlblBvbHkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0VuY29kZXIgbm90IGluaXRpYWxpemVkJylcbiAgfVxuXG4gIC8vIENhbGN1bGF0ZSBFQyBmb3IgdGhpcyBkYXRhIGJsb2NrXG4gIC8vIGV4dGVuZHMgZGF0YSBzaXplIHRvIGRhdGErZ2VuUG9seSBzaXplXG4gIGNvbnN0IHBhZGRlZERhdGEgPSBuZXcgVWludDhBcnJheShkYXRhLmxlbmd0aCArIHRoaXMuZGVncmVlKVxuICBwYWRkZWREYXRhLnNldChkYXRhKVxuXG4gIC8vIFRoZSBlcnJvciBjb3JyZWN0aW9uIGNvZGV3b3JkcyBhcmUgdGhlIHJlbWFpbmRlciBhZnRlciBkaXZpZGluZyB0aGUgZGF0YSBjb2Rld29yZHNcbiAgLy8gYnkgYSBnZW5lcmF0b3IgcG9seW5vbWlhbFxuICBjb25zdCByZW1haW5kZXIgPSBQb2x5bm9taWFsLm1vZChwYWRkZWREYXRhLCB0aGlzLmdlblBvbHkpXG5cbiAgLy8gcmV0dXJuIEVDIGRhdGEgYmxvY2tzIChsYXN0IG4gYnl0ZSwgd2hlcmUgbiBpcyB0aGUgZGVncmVlIG9mIGdlblBvbHkpXG4gIC8vIElmIGNvZWZmaWNpZW50cyBudW1iZXIgaW4gcmVtYWluZGVyIGFyZSBsZXNzIHRoYW4gZ2VuUG9seSBkZWdyZWUsXG4gIC8vIHBhZCB3aXRoIDBzIHRvIHRoZSBsZWZ0IHRvIHJlYWNoIHRoZSBuZWVkZWQgbnVtYmVyIG9mIGNvZWZmaWNpZW50c1xuICBjb25zdCBzdGFydCA9IHRoaXMuZGVncmVlIC0gcmVtYWluZGVyLmxlbmd0aFxuICBpZiAoc3RhcnQgPiAwKSB7XG4gICAgY29uc3QgYnVmZiA9IG5ldyBVaW50OEFycmF5KHRoaXMuZGVncmVlKVxuICAgIGJ1ZmYuc2V0KHJlbWFpbmRlciwgc3RhcnQpXG5cbiAgICByZXR1cm4gYnVmZlxuICB9XG5cbiAgcmV0dXJuIHJlbWFpbmRlclxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlZWRTb2xvbW9uRW5jb2RlclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/regex.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/regex.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const numeric = '[0-9]+';\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+';\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' + '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' + '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' + '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nexports.KANJI = new RegExp(kanji, 'g');\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nexports.BYTE = new RegExp(byte, 'g');\nexports.NUMERIC = new RegExp(numeric, 'g');\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nconst TEST_KANJI = new RegExp('^' + kanji + '$');\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$');\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\nexports.testKanji = function testKanji(str) {\n  return TEST_KANJI.test(str);\n};\nexports.testNumeric = function testNumeric(str) {\n  return TEST_NUMERIC.test(str);\n};\nexports.testAlphanumeric = function testAlphanumeric(str) {\n  return TEST_ALPHANUMERIC.test(str);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3JlZ2V4LmpzP2YzNTMiXSwibmFtZXMiOlsibnVtZXJpYyIsImFscGhhbnVtZXJpYyIsImthbmppIiwicmVwbGFjZSIsImJ5dGUiLCJleHBvcnRzIiwiS0FOSkkiLCJSZWdFeHAiLCJCWVRFX0tBTkpJIiwiQllURSIsIk5VTUVSSUMiLCJBTFBIQU5VTUVSSUMiLCJURVNUX0tBTkpJIiwiVEVTVF9OVU1FUklDIiwiVEVTVF9BTFBIQU5VTUVSSUMiLCJ0ZXN0S2FuamkiLCJzdHIiLCJ0ZXN0IiwidGVzdE51bWVyaWMiLCJ0ZXN0QWxwaGFudW1lcmljIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUcsUUFBUTtBQUN4QixNQUFNQyxZQUFZLEdBQUcsbUJBQW1CO0FBQ3hDLElBQUlDLEtBQUssR0FBRywrQ0FBK0MsR0FDekQsZ0VBQWdFLEdBQ2hFLHVEQUF1RCxHQUN2RCxrREFBa0Q7QUFDcERBLEtBQUssR0FBR0EsS0FBSyxDQUFDQyxPQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQztBQUVsQyxNQUFNQyxJQUFJLEdBQUcsNEJBQTRCLEdBQUdGLEtBQUssR0FBRyxpQkFBaUI7QUFFckVHLE9BQU8sQ0FBQ0MsS0FBSyxHQUFHLElBQUlDLE1BQU0sQ0FBQ0wsS0FBSyxFQUFFLEdBQUcsQ0FBQztBQUN0Q0csT0FBTyxDQUFDRyxVQUFVLEdBQUcsSUFBSUQsTUFBTSxDQUFDLHVCQUF1QixFQUFFLEdBQUcsQ0FBQztBQUM3REYsT0FBTyxDQUFDSSxJQUFJLEdBQUcsSUFBSUYsTUFBTSxDQUFDSCxJQUFJLEVBQUUsR0FBRyxDQUFDO0FBQ3BDQyxPQUFPLENBQUNLLE9BQU8sR0FBRyxJQUFJSCxNQUFNLENBQUNQLE9BQU8sRUFBRSxHQUFHLENBQUM7QUFDMUNLLE9BQU8sQ0FBQ00sWUFBWSxHQUFHLElBQUlKLE1BQU0sQ0FBQ04sWUFBWSxFQUFFLEdBQUcsQ0FBQztBQUVwRCxNQUFNVyxVQUFVLEdBQUcsSUFBSUwsTUFBTSxDQUFDLEdBQUcsR0FBR0wsS0FBSyxHQUFHLEdBQUcsQ0FBQztBQUNoRCxNQUFNVyxZQUFZLEdBQUcsSUFBSU4sTUFBTSxDQUFDLEdBQUcsR0FBR1AsT0FBTyxHQUFHLEdBQUcsQ0FBQztBQUNwRCxNQUFNYyxpQkFBaUIsR0FBRyxJQUFJUCxNQUFNLENBQUMsd0JBQXdCLENBQUM7QUFFOURGLE9BQU8sQ0FBQ1UsU0FBUyxHQUFHLFNBQVNBLFNBQVNBLENBQUVDLEdBQUcsRUFBRTtFQUMzQyxPQUFPSixVQUFVLENBQUNLLElBQUksQ0FBQ0QsR0FBRyxDQUFDO0FBQzdCLENBQUM7QUFFRFgsT0FBTyxDQUFDYSxXQUFXLEdBQUcsU0FBU0EsV0FBV0EsQ0FBRUYsR0FBRyxFQUFFO0VBQy9DLE9BQU9ILFlBQVksQ0FBQ0ksSUFBSSxDQUFDRCxHQUFHLENBQUM7QUFDL0IsQ0FBQztBQUVEWCxPQUFPLENBQUNjLGdCQUFnQixHQUFHLFNBQVNBLGdCQUFnQkEsQ0FBRUgsR0FBRyxFQUFFO0VBQ3pELE9BQU9GLGlCQUFpQixDQUFDRyxJQUFJLENBQUNELEdBQUcsQ0FBQztBQUNwQyxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9yZWdleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG51bWVyaWMgPSAnWzAtOV0rJ1xuY29uc3QgYWxwaGFudW1lcmljID0gJ1tBLVogJCUqK1xcXFwtLi86XSsnXG5sZXQga2FuamkgPSAnKD86W3UzMDAwLXUzMDNGXXxbdTMwNDAtdTMwOUZdfFt1MzBBMC11MzBGRl18JyArXG4gICdbdUZGMDAtdUZGRUZdfFt1NEUwMC11OUZBRl18W3UyNjA1LXUyNjA2XXxbdTIxOTAtdTIxOTVdfHUyMDNCfCcgK1xuICAnW3UyMDEwdTIwMTV1MjAxOHUyMDE5dTIwMjV1MjAyNnUyMDFDdTIwMUR1MjIyNXUyMjYwXXwnICtcbiAgJ1t1MDM5MS11MDQ1MV18W3UwMEE3dTAwQTh1MDBCMXUwMEI0dTAwRDd1MDBGN10pKydcbmthbmppID0ga2FuamkucmVwbGFjZSgvdS9nLCAnXFxcXHUnKVxuXG5jb25zdCBieXRlID0gJyg/Oig/IVtBLVowLTkgJCUqK1xcXFwtLi86XXwnICsga2FuamkgKyAnKSg/Oi58W1xcclxcbl0pKSsnXG5cbmV4cG9ydHMuS0FOSkkgPSBuZXcgUmVnRXhwKGthbmppLCAnZycpXG5leHBvcnRzLkJZVEVfS0FOSkkgPSBuZXcgUmVnRXhwKCdbXkEtWjAtOSAkJSorXFxcXC0uLzpdKycsICdnJylcbmV4cG9ydHMuQllURSA9IG5ldyBSZWdFeHAoYnl0ZSwgJ2cnKVxuZXhwb3J0cy5OVU1FUklDID0gbmV3IFJlZ0V4cChudW1lcmljLCAnZycpXG5leHBvcnRzLkFMUEhBTlVNRVJJQyA9IG5ldyBSZWdFeHAoYWxwaGFudW1lcmljLCAnZycpXG5cbmNvbnN0IFRFU1RfS0FOSkkgPSBuZXcgUmVnRXhwKCdeJyArIGthbmppICsgJyQnKVxuY29uc3QgVEVTVF9OVU1FUklDID0gbmV3IFJlZ0V4cCgnXicgKyBudW1lcmljICsgJyQnKVxuY29uc3QgVEVTVF9BTFBIQU5VTUVSSUMgPSBuZXcgUmVnRXhwKCdeW0EtWjAtOSAkJSorXFxcXC0uLzpdKyQnKVxuXG5leHBvcnRzLnRlc3RLYW5qaSA9IGZ1bmN0aW9uIHRlc3RLYW5qaSAoc3RyKSB7XG4gIHJldHVybiBURVNUX0tBTkpJLnRlc3Qoc3RyKVxufVxuXG5leHBvcnRzLnRlc3ROdW1lcmljID0gZnVuY3Rpb24gdGVzdE51bWVyaWMgKHN0cikge1xuICByZXR1cm4gVEVTVF9OVU1FUklDLnRlc3Qoc3RyKVxufVxuXG5leHBvcnRzLnRlc3RBbHBoYW51bWVyaWMgPSBmdW5jdGlvbiB0ZXN0QWxwaGFudW1lcmljIChzdHIpIHtcbiAgcmV0dXJuIFRFU1RfQUxQSEFOVU1FUklDLnRlc3Qoc3RyKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/regex.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/segments.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/segments.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\nconst NumericData = __webpack_require__(/*! ./numeric-data */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/numeric-data.js\");\nconst AlphanumericData = __webpack_require__(/*! ./alphanumeric-data */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/alphanumeric-data.js\");\nconst ByteData = __webpack_require__(/*! ./byte-data */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/byte-data.js\");\nconst KanjiData = __webpack_require__(/*! ./kanji-data */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/kanji-data.js\");\nconst Regex = __webpack_require__(/*! ./regex */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/regex.js\");\nconst Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\");\nconst dijkstra = __webpack_require__(/*! dijkstrajs */ \"./node_modules/dijkstrajs/dijkstra.js\");\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength(str) {\n  return unescape(encodeURIComponent(str)).length;\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments(regex, mode, str) {\n  const segments = [];\n  let result;\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    });\n  }\n  return segments;\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString(dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);\n  let byteSegs;\n  let kanjiSegs;\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);\n    kanjiSegs = [];\n  }\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n  return segs.sort(function (s1, s2) {\n    return s1.index - s2.index;\n  }).map(function (obj) {\n    return {\n      data: obj.data,\n      mode: obj.mode,\n      length: obj.length\n    };\n  });\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength(length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length);\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length);\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length);\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length);\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments(segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data;\n      return acc;\n    }\n    acc.push(curr);\n    return acc;\n  }, []);\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes(segs) {\n  const nodes = [];\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i];\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg, {\n          data: seg.data,\n          mode: Mode.ALPHANUMERIC,\n          length: seg.length\n        }, {\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: seg.length\n        }]);\n        break;\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg, {\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: seg.length\n        }]);\n        break;\n      case Mode.KANJI:\n        nodes.push([seg, {\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: getStringByteLength(seg.data)\n        }]);\n        break;\n      case Mode.BYTE:\n        nodes.push([{\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: getStringByteLength(seg.data)\n        }]);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph(nodes, version) {\n  const table = {};\n  const graph = {\n    start: {}\n  };\n  let prevNodeIds = ['start'];\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i];\n    const currentNodeIds = [];\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j];\n      const key = '' + i + j;\n      currentNodeIds.push(key);\n      table[key] = {\n        node: node,\n        lastCount: 0\n      };\n      graph[key] = {};\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n];\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n          table[prevNodeId].lastCount += node.length;\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version); // switch cost\n        }\n      }\n    }\n    prevNodeIds = currentNodeIds;\n  }\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0;\n  }\n  return {\n    map: graph,\n    table: table\n  };\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment(data, modesHint) {\n  let mode;\n  const bestMode = Mode.getBestModeForData(data);\n  mode = Mode.from(modesHint, bestMode);\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' + ' cannot be encoded with mode ' + Mode.toString(mode) + '.\\n Suggested mode is: ' + Mode.toString(bestMode));\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE;\n  }\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data);\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data);\n    case Mode.KANJI:\n      return new KanjiData(data);\n    case Mode.BYTE:\n      return new ByteData(data);\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray(array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null));\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode));\n    }\n    return acc;\n  }, []);\n};\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString(data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());\n  const nodes = buildNodes(segs);\n  const graph = buildGraph(nodes, version);\n  const path = dijkstra.find_path(graph.map, 'start', 'end');\n  const optimizedSegs = [];\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node);\n  }\n  return exports.fromArray(mergeSegments(optimizedSegs));\n};\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit(data) {\n  return exports.fromArray(getSegmentsFromString(data, Utils.isKanjiModeEnabled()));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/segments.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("let toSJISFunction;\nconst CODEWORDS_COUNT = [0,\n// Not used\n26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize(version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined');\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40');\n  return version * 4 + 17;\n};\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n  return CODEWORDS_COUNT[version];\n};\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0;\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n  return digit;\n};\nexports.setToSJISFunction = function setToSJISFunction(f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.');\n  }\n  toSJISFunction = f;\n};\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined';\n};\nexports.toSJIS = function toSJIS(kanji) {\n  return toSJISFunction(kanji);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3V0aWxzLmpzPzkzYjYiXSwibmFtZXMiOlsidG9TSklTRnVuY3Rpb24iLCJDT0RFV09SRFNfQ09VTlQiLCJleHBvcnRzIiwiZ2V0U3ltYm9sU2l6ZSIsInZlcnNpb24iLCJFcnJvciIsImdldFN5bWJvbFRvdGFsQ29kZXdvcmRzIiwiZ2V0QkNIRGlnaXQiLCJkYXRhIiwiZGlnaXQiLCJzZXRUb1NKSVNGdW5jdGlvbiIsImYiLCJpc0thbmppTW9kZUVuYWJsZWQiLCJ0b1NKSVMiLCJrYW5qaSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsY0FBYztBQUNsQixNQUFNQyxlQUFlLEdBQUcsQ0FDdEIsQ0FBQztBQUFFO0FBQ0gsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUM3QyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQ2pELElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFDMUQsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUMzRDs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsT0FBTyxDQUFDQyxhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBRUMsT0FBTyxFQUFFO0VBQ3ZELElBQUksQ0FBQ0EsT0FBTyxFQUFFLE1BQU0sSUFBSUMsS0FBSyxDQUFDLHVDQUF1QyxDQUFDO0VBQ3RFLElBQUlELE9BQU8sR0FBRyxDQUFDLElBQUlBLE9BQU8sR0FBRyxFQUFFLEVBQUUsTUFBTSxJQUFJQyxLQUFLLENBQUMsMkNBQTJDLENBQUM7RUFDN0YsT0FBT0QsT0FBTyxHQUFHLENBQUMsR0FBRyxFQUFFO0FBQ3pCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FGLE9BQU8sQ0FBQ0ksdUJBQXVCLEdBQUcsU0FBU0EsdUJBQXVCQSxDQUFFRixPQUFPLEVBQUU7RUFDM0UsT0FBT0gsZUFBZSxDQUFDRyxPQUFPLENBQUM7QUFDakMsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUYsT0FBTyxDQUFDSyxXQUFXLEdBQUcsVUFBVUMsSUFBSSxFQUFFO0VBQ3BDLElBQUlDLEtBQUssR0FBRyxDQUFDO0VBRWIsT0FBT0QsSUFBSSxLQUFLLENBQUMsRUFBRTtJQUNqQkMsS0FBSyxFQUFFO0lBQ1BELElBQUksTUFBTSxDQUFDO0VBQ2I7RUFFQSxPQUFPQyxLQUFLO0FBQ2QsQ0FBQztBQUVEUCxPQUFPLENBQUNRLGlCQUFpQixHQUFHLFNBQVNBLGlCQUFpQkEsQ0FBRUMsQ0FBQyxFQUFFO0VBQ3pELElBQUksT0FBT0EsQ0FBQyxLQUFLLFVBQVUsRUFBRTtJQUMzQixNQUFNLElBQUlOLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQztFQUMxRDtFQUVBTCxjQUFjLEdBQUdXLENBQUM7QUFDcEIsQ0FBQztBQUVEVCxPQUFPLENBQUNVLGtCQUFrQixHQUFHLFlBQVk7RUFDdkMsT0FBTyxPQUFPWixjQUFjLEtBQUssV0FBVztBQUM5QyxDQUFDO0FBRURFLE9BQU8sQ0FBQ1csTUFBTSxHQUFHLFNBQVNBLE1BQU1BLENBQUVDLEtBQUssRUFBRTtFQUN2QyxPQUFPZCxjQUFjLENBQUNjLEtBQUssQ0FBQztBQUM5QixDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS91dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCB0b1NKSVNGdW5jdGlvblxuY29uc3QgQ09ERVdPUkRTX0NPVU5UID0gW1xuICAwLCAvLyBOb3QgdXNlZFxuICAyNiwgNDQsIDcwLCAxMDAsIDEzNCwgMTcyLCAxOTYsIDI0MiwgMjkyLCAzNDYsXG4gIDQwNCwgNDY2LCA1MzIsIDU4MSwgNjU1LCA3MzMsIDgxNSwgOTAxLCA5OTEsIDEwODUsXG4gIDExNTYsIDEyNTgsIDEzNjQsIDE0NzQsIDE1ODgsIDE3MDYsIDE4MjgsIDE5MjEsIDIwNTEsIDIxODUsXG4gIDIzMjMsIDI0NjUsIDI2MTEsIDI3NjEsIDI4NzYsIDMwMzQsIDMxOTYsIDMzNjIsIDM1MzIsIDM3MDZcbl1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBRUiBDb2RlIHNpemUgZm9yIHRoZSBzcGVjaWZpZWQgdmVyc2lvblxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge051bWJlcn0gICAgICAgICBzaXplIG9mIFFSIGNvZGVcbiAqL1xuZXhwb3J0cy5nZXRTeW1ib2xTaXplID0gZnVuY3Rpb24gZ2V0U3ltYm9sU2l6ZSAodmVyc2lvbikge1xuICBpZiAoIXZlcnNpb24pIHRocm93IG5ldyBFcnJvcignXCJ2ZXJzaW9uXCIgY2Fubm90IGJlIG51bGwgb3IgdW5kZWZpbmVkJylcbiAgaWYgKHZlcnNpb24gPCAxIHx8IHZlcnNpb24gPiA0MCkgdGhyb3cgbmV3IEVycm9yKCdcInZlcnNpb25cIiBzaG91bGQgYmUgaW4gcmFuZ2UgZnJvbSAxIHRvIDQwJylcbiAgcmV0dXJuIHZlcnNpb24gKiA0ICsgMTdcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSB0b3RhbCBudW1iZXIgb2YgY29kZXdvcmRzIHVzZWQgdG8gc3RvcmUgZGF0YSBhbmQgRUMgaW5mb3JtYXRpb24uXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB2ZXJzaW9uIFFSIENvZGUgdmVyc2lvblxuICogQHJldHVybiB7TnVtYmVyfSAgICAgICAgIERhdGEgbGVuZ3RoIGluIGJpdHNcbiAqL1xuZXhwb3J0cy5nZXRTeW1ib2xUb3RhbENvZGV3b3JkcyA9IGZ1bmN0aW9uIGdldFN5bWJvbFRvdGFsQ29kZXdvcmRzICh2ZXJzaW9uKSB7XG4gIHJldHVybiBDT0RFV09SRFNfQ09VTlRbdmVyc2lvbl1cbn1cblxuLyoqXG4gKiBFbmNvZGUgZGF0YSB3aXRoIEJvc2UtQ2hhdWRodXJpLUhvY3F1ZW5naGVtXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBkYXRhIFZhbHVlIHRvIGVuY29kZVxuICogQHJldHVybiB7TnVtYmVyfSAgICAgIEVuY29kZWQgdmFsdWVcbiAqL1xuZXhwb3J0cy5nZXRCQ0hEaWdpdCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gIGxldCBkaWdpdCA9IDBcblxuICB3aGlsZSAoZGF0YSAhPT0gMCkge1xuICAgIGRpZ2l0KytcbiAgICBkYXRhID4+Pj0gMVxuICB9XG5cbiAgcmV0dXJuIGRpZ2l0XG59XG5cbmV4cG9ydHMuc2V0VG9TSklTRnVuY3Rpb24gPSBmdW5jdGlvbiBzZXRUb1NKSVNGdW5jdGlvbiAoZikge1xuICBpZiAodHlwZW9mIGYgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1widG9TSklTRnVuY1wiIGlzIG5vdCBhIHZhbGlkIGZ1bmN0aW9uLicpXG4gIH1cblxuICB0b1NKSVNGdW5jdGlvbiA9IGZcbn1cblxuZXhwb3J0cy5pc0thbmppTW9kZUVuYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0eXBlb2YgdG9TSklTRnVuY3Rpb24gIT09ICd1bmRlZmluZWQnXG59XG5cbmV4cG9ydHMudG9TSklTID0gZnVuY3Rpb24gdG9TSklTIChrYW5qaSkge1xuICByZXR1cm4gdG9TSklTRnVuY3Rpb24oa2FuamkpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version-check.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version-check.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid(version) {\n  return !isNaN(version) && version >= 1 && version <= 40;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3ZlcnNpb24tY2hlY2suanM/OTAxMiJdLCJuYW1lcyI6WyJleHBvcnRzIiwiaXNWYWxpZCIsInZlcnNpb24iLCJpc05hTiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FBLE9BQU8sQ0FBQ0MsT0FBTyxHQUFHLFNBQVNBLE9BQU9BLENBQUVDLE9BQU8sRUFBRTtFQUMzQyxPQUFPLENBQUNDLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLElBQUlBLE9BQU8sSUFBSSxDQUFDLElBQUlBLE9BQU8sSUFBSSxFQUFFO0FBQ3pELENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3ZlcnNpb24tY2hlY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIFFSIENvZGUgdmVyc2lvbiBpcyB2YWxpZFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gIHZlcnNpb24gUVIgQ29kZSB2ZXJzaW9uXG4gKiBAcmV0dXJuIHtCb29sZWFufSAgICAgICAgIHRydWUgaWYgdmFsaWQgdmVyc2lvbiwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbmV4cG9ydHMuaXNWYWxpZCA9IGZ1bmN0aW9uIGlzVmFsaWQgKHZlcnNpb24pIHtcbiAgcmV0dXJuICFpc05hTih2ZXJzaW9uKSAmJiB2ZXJzaW9uID49IDEgJiYgdmVyc2lvbiA8PSA0MFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version-check.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/utils.js\");\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-code.js\");\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/mode.js\");\nconst VersionCheck = __webpack_require__(/*! ./version-check */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version-check.js\");\n\n// Generator polynomial used to encode version information\nconst G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\nconst G18_BCH = Utils.getBCHDigit(G18);\nfunction getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion;\n    }\n  }\n  return undefined;\n}\nfunction getReservedBitsCount(mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4;\n}\nfunction getTotalBitsFromDataArray(segments, version) {\n  let totalBits = 0;\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version);\n    totalBits += reservedBits + data.getBitsLength();\n  });\n  return totalBits;\n}\nfunction getBestVersionForMixedData(segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion);\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from(value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10);\n  }\n  return defaultValue;\n};\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version');\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE;\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version);\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits;\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor(usableBits / 10 * 3);\n    case Mode.ALPHANUMERIC:\n      return Math.floor(usableBits / 11 * 2);\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13);\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8);\n  }\n};\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {\n  let seg;\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl);\n    }\n    if (data.length === 0) {\n      return 1;\n    }\n    seg = data[0];\n  } else {\n    seg = data;\n  }\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n};\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits(version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version');\n  }\n  let d = version << 12;\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= G18 << Utils.getBCHDigit(d) - G18_BCH;\n  }\n  return version << 12 | d;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/core/version.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/canvas.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/canvas.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/utils.js\");\nfunction clearCanvas(ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  if (!canvas.style) canvas.style = {};\n  canvas.height = size;\n  canvas.width = size;\n  canvas.style.height = size + 'px';\n  canvas.style.width = size + 'px';\n}\nfunction getCanvasElement() {\n  try {\n    return document.createElement('canvas');\n  } catch (e) {\n    throw new Error('You need to specify a canvas element');\n  }\n}\nexports.render = function render(qrData, canvas, options) {\n  let opts = options;\n  let canvasEl = canvas;\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas;\n    canvas = undefined;\n  }\n  if (!canvas) {\n    canvasEl = getCanvasElement();\n  }\n  opts = Utils.getOptions(opts);\n  const size = Utils.getImageWidth(qrData.modules.size, opts);\n  const ctx = canvasEl.getContext('2d');\n  const image = ctx.createImageData(size, size);\n  Utils.qrToImageData(image.data, qrData, opts);\n  clearCanvas(ctx, canvasEl, size);\n  ctx.putImageData(image, 0, 0);\n  return canvasEl;\n};\nexports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n  let opts = options;\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas;\n    canvas = undefined;\n  }\n  if (!opts) opts = {};\n  const canvasEl = exports.render(qrData, canvas, opts);\n  const type = opts.type || 'image/png';\n  const rendererOpts = opts.rendererOpts || {};\n  return canvasEl.toDataURL(type, rendererOpts.quality);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9jYW52YXMuanM/YWZkZCJdLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJjbGVhckNhbnZhcyIsImN0eCIsImNhbnZhcyIsInNpemUiLCJjbGVhclJlY3QiLCJ3aWR0aCIsImhlaWdodCIsInN0eWxlIiwiZ2V0Q2FudmFzRWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImUiLCJFcnJvciIsImV4cG9ydHMiLCJyZW5kZXIiLCJxckRhdGEiLCJvcHRpb25zIiwib3B0cyIsImNhbnZhc0VsIiwiZ2V0Q29udGV4dCIsInVuZGVmaW5lZCIsImdldE9wdGlvbnMiLCJnZXRJbWFnZVdpZHRoIiwibW9kdWxlcyIsImltYWdlIiwiY3JlYXRlSW1hZ2VEYXRhIiwicXJUb0ltYWdlRGF0YSIsImRhdGEiLCJwdXRJbWFnZURhdGEiLCJyZW5kZXJUb0RhdGFVUkwiLCJ0eXBlIiwicmVuZGVyZXJPcHRzIiwidG9EYXRhVVJMIiwicXVhbGl0eSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxtQkFBTyxDQUFDLHVGQUFTLENBQUM7QUFFaEMsU0FBU0MsV0FBV0EsQ0FBRUMsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRTtFQUN2Q0YsR0FBRyxDQUFDRyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRUYsTUFBTSxDQUFDRyxLQUFLLEVBQUVILE1BQU0sQ0FBQ0ksTUFBTSxDQUFDO0VBRWhELElBQUksQ0FBQ0osTUFBTSxDQUFDSyxLQUFLLEVBQUVMLE1BQU0sQ0FBQ0ssS0FBSyxHQUFHLENBQUMsQ0FBQztFQUNwQ0wsTUFBTSxDQUFDSSxNQUFNLEdBQUdILElBQUk7RUFDcEJELE1BQU0sQ0FBQ0csS0FBSyxHQUFHRixJQUFJO0VBQ25CRCxNQUFNLENBQUNLLEtBQUssQ0FBQ0QsTUFBTSxHQUFHSCxJQUFJLEdBQUcsSUFBSTtFQUNqQ0QsTUFBTSxDQUFDSyxLQUFLLENBQUNGLEtBQUssR0FBR0YsSUFBSSxHQUFHLElBQUk7QUFDbEM7QUFFQSxTQUFTSyxnQkFBZ0JBLENBQUEsRUFBSTtFQUMzQixJQUFJO0lBQ0YsT0FBT0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsUUFBUSxDQUFDO0VBQ3pDLENBQUMsQ0FBQyxPQUFPQyxDQUFDLEVBQUU7SUFDVixNQUFNLElBQUlDLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQztFQUN6RDtBQUNGO0FBRUFDLE9BQU8sQ0FBQ0MsTUFBTSxHQUFHLFNBQVNBLE1BQU1BLENBQUVDLE1BQU0sRUFBRWIsTUFBTSxFQUFFYyxPQUFPLEVBQUU7RUFDekQsSUFBSUMsSUFBSSxHQUFHRCxPQUFPO0VBQ2xCLElBQUlFLFFBQVEsR0FBR2hCLE1BQU07RUFFckIsSUFBSSxPQUFPZSxJQUFJLEtBQUssV0FBVyxLQUFLLENBQUNmLE1BQU0sSUFBSSxDQUFDQSxNQUFNLENBQUNpQixVQUFVLENBQUMsRUFBRTtJQUNsRUYsSUFBSSxHQUFHZixNQUFNO0lBQ2JBLE1BQU0sR0FBR2tCLFNBQVM7RUFDcEI7RUFFQSxJQUFJLENBQUNsQixNQUFNLEVBQUU7SUFDWGdCLFFBQVEsR0FBR1YsZ0JBQWdCLENBQUMsQ0FBQztFQUMvQjtFQUVBUyxJQUFJLEdBQUduQixLQUFLLENBQUN1QixVQUFVLENBQUNKLElBQUksQ0FBQztFQUM3QixNQUFNZCxJQUFJLEdBQUdMLEtBQUssQ0FBQ3dCLGFBQWEsQ0FBQ1AsTUFBTSxDQUFDUSxPQUFPLENBQUNwQixJQUFJLEVBQUVjLElBQUksQ0FBQztFQUUzRCxNQUFNaEIsR0FBRyxHQUFHaUIsUUFBUSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDO0VBQ3JDLE1BQU1LLEtBQUssR0FBR3ZCLEdBQUcsQ0FBQ3dCLGVBQWUsQ0FBQ3RCLElBQUksRUFBRUEsSUFBSSxDQUFDO0VBQzdDTCxLQUFLLENBQUM0QixhQUFhLENBQUNGLEtBQUssQ0FBQ0csSUFBSSxFQUFFWixNQUFNLEVBQUVFLElBQUksQ0FBQztFQUU3Q2pCLFdBQVcsQ0FBQ0MsR0FBRyxFQUFFaUIsUUFBUSxFQUFFZixJQUFJLENBQUM7RUFDaENGLEdBQUcsQ0FBQzJCLFlBQVksQ0FBQ0osS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7RUFFN0IsT0FBT04sUUFBUTtBQUNqQixDQUFDO0FBRURMLE9BQU8sQ0FBQ2dCLGVBQWUsR0FBRyxTQUFTQSxlQUFlQSxDQUFFZCxNQUFNLEVBQUViLE1BQU0sRUFBRWMsT0FBTyxFQUFFO0VBQzNFLElBQUlDLElBQUksR0FBR0QsT0FBTztFQUVsQixJQUFJLE9BQU9DLElBQUksS0FBSyxXQUFXLEtBQUssQ0FBQ2YsTUFBTSxJQUFJLENBQUNBLE1BQU0sQ0FBQ2lCLFVBQVUsQ0FBQyxFQUFFO0lBQ2xFRixJQUFJLEdBQUdmLE1BQU07SUFDYkEsTUFBTSxHQUFHa0IsU0FBUztFQUNwQjtFQUVBLElBQUksQ0FBQ0gsSUFBSSxFQUFFQSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0VBRXBCLE1BQU1DLFFBQVEsR0FBR0wsT0FBTyxDQUFDQyxNQUFNLENBQUNDLE1BQU0sRUFBRWIsTUFBTSxFQUFFZSxJQUFJLENBQUM7RUFFckQsTUFBTWEsSUFBSSxHQUFHYixJQUFJLENBQUNhLElBQUksSUFBSSxXQUFXO0VBQ3JDLE1BQU1DLFlBQVksR0FBR2QsSUFBSSxDQUFDYyxZQUFZLElBQUksQ0FBQyxDQUFDO0VBRTVDLE9BQU9iLFFBQVEsQ0FBQ2MsU0FBUyxDQUFDRixJQUFJLEVBQUVDLFlBQVksQ0FBQ0UsT0FBTyxDQUFDO0FBQ3ZELENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9jYW52YXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5mdW5jdGlvbiBjbGVhckNhbnZhcyAoY3R4LCBjYW52YXMsIHNpemUpIHtcbiAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpXG5cbiAgaWYgKCFjYW52YXMuc3R5bGUpIGNhbnZhcy5zdHlsZSA9IHt9XG4gIGNhbnZhcy5oZWlnaHQgPSBzaXplXG4gIGNhbnZhcy53aWR0aCA9IHNpemVcbiAgY2FudmFzLnN0eWxlLmhlaWdodCA9IHNpemUgKyAncHgnXG4gIGNhbnZhcy5zdHlsZS53aWR0aCA9IHNpemUgKyAncHgnXG59XG5cbmZ1bmN0aW9uIGdldENhbnZhc0VsZW1lbnQgKCkge1xuICB0cnkge1xuICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKVxuICB9IGNhdGNoIChlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbmVlZCB0byBzcGVjaWZ5IGEgY2FudmFzIGVsZW1lbnQnKVxuICB9XG59XG5cbmV4cG9ydHMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyIChxckRhdGEsIGNhbnZhcywgb3B0aW9ucykge1xuICBsZXQgb3B0cyA9IG9wdGlvbnNcbiAgbGV0IGNhbnZhc0VsID0gY2FudmFzXG5cbiAgaWYgKHR5cGVvZiBvcHRzID09PSAndW5kZWZpbmVkJyAmJiAoIWNhbnZhcyB8fCAhY2FudmFzLmdldENvbnRleHQpKSB7XG4gICAgb3B0cyA9IGNhbnZhc1xuICAgIGNhbnZhcyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgaWYgKCFjYW52YXMpIHtcbiAgICBjYW52YXNFbCA9IGdldENhbnZhc0VsZW1lbnQoKVxuICB9XG5cbiAgb3B0cyA9IFV0aWxzLmdldE9wdGlvbnMob3B0cylcbiAgY29uc3Qgc2l6ZSA9IFV0aWxzLmdldEltYWdlV2lkdGgocXJEYXRhLm1vZHVsZXMuc2l6ZSwgb3B0cylcblxuICBjb25zdCBjdHggPSBjYW52YXNFbC5nZXRDb250ZXh0KCcyZCcpXG4gIGNvbnN0IGltYWdlID0gY3R4LmNyZWF0ZUltYWdlRGF0YShzaXplLCBzaXplKVxuICBVdGlscy5xclRvSW1hZ2VEYXRhKGltYWdlLmRhdGEsIHFyRGF0YSwgb3B0cylcblxuICBjbGVhckNhbnZhcyhjdHgsIGNhbnZhc0VsLCBzaXplKVxuICBjdHgucHV0SW1hZ2VEYXRhKGltYWdlLCAwLCAwKVxuXG4gIHJldHVybiBjYW52YXNFbFxufVxuXG5leHBvcnRzLnJlbmRlclRvRGF0YVVSTCA9IGZ1bmN0aW9uIHJlbmRlclRvRGF0YVVSTCAocXJEYXRhLCBjYW52YXMsIG9wdGlvbnMpIHtcbiAgbGV0IG9wdHMgPSBvcHRpb25zXG5cbiAgaWYgKHR5cGVvZiBvcHRzID09PSAndW5kZWZpbmVkJyAmJiAoIWNhbnZhcyB8fCAhY2FudmFzLmdldENvbnRleHQpKSB7XG4gICAgb3B0cyA9IGNhbnZhc1xuICAgIGNhbnZhcyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgaWYgKCFvcHRzKSBvcHRzID0ge31cblxuICBjb25zdCBjYW52YXNFbCA9IGV4cG9ydHMucmVuZGVyKHFyRGF0YSwgY2FudmFzLCBvcHRzKVxuXG4gIGNvbnN0IHR5cGUgPSBvcHRzLnR5cGUgfHwgJ2ltYWdlL3BuZydcbiAgY29uc3QgcmVuZGVyZXJPcHRzID0gb3B0cy5yZW5kZXJlck9wdHMgfHwge31cblxuICByZXR1cm4gY2FudmFzRWwudG9EYXRhVVJMKHR5cGUsIHJlbmRlcmVyT3B0cy5xdWFsaXR5KVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/canvas.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/svg-tag.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/svg-tag.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/utils.js\");\nfunction getColorAttrib(color, attrib) {\n  const alpha = color.a / 255;\n  const str = attrib + '=\"' + color.hex + '\"';\n  return alpha < 1 ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"' : str;\n}\nfunction svgCmd(cmd, x, y) {\n  let str = cmd + x;\n  if (typeof y !== 'undefined') str += ' ' + y;\n  return str;\n}\nfunction qrToPath(data, size, margin) {\n  let path = '';\n  let moveBy = 0;\n  let newRow = false;\n  let lineLength = 0;\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size);\n    const row = Math.floor(i / size);\n    if (!col && !newRow) newRow = true;\n    if (data[i]) {\n      lineLength++;\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow ? svgCmd('M', col + margin, 0.5 + row + margin) : svgCmd('m', moveBy, 0);\n        moveBy = 0;\n        newRow = false;\n      }\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength);\n        lineLength = 0;\n      }\n    } else {\n      moveBy++;\n    }\n  }\n  return path;\n}\nexports.render = function render(qrData, options, cb) {\n  const opts = Utils.getOptions(options);\n  const size = qrData.modules.size;\n  const data = qrData.modules.data;\n  const qrcodesize = size + opts.margin * 2;\n  const bg = !opts.color.light.a ? '' : '<path ' + getColorAttrib(opts.color.light, 'fill') + ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n  const path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') + ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n  if (typeof cb === 'function') {\n    cb(null, svgTag);\n  }\n  return svgTag;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC91aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9zdmctdGFnLmpzPzhmMzMiXSwibmFtZXMiOlsiVXRpbHMiLCJyZXF1aXJlIiwiZ2V0Q29sb3JBdHRyaWIiLCJjb2xvciIsImF0dHJpYiIsImFscGhhIiwiYSIsInN0ciIsImhleCIsInRvRml4ZWQiLCJzbGljZSIsInN2Z0NtZCIsImNtZCIsIngiLCJ5IiwicXJUb1BhdGgiLCJkYXRhIiwic2l6ZSIsIm1hcmdpbiIsInBhdGgiLCJtb3ZlQnkiLCJuZXdSb3ciLCJsaW5lTGVuZ3RoIiwiaSIsImxlbmd0aCIsImNvbCIsIk1hdGgiLCJmbG9vciIsInJvdyIsImV4cG9ydHMiLCJyZW5kZXIiLCJxckRhdGEiLCJvcHRpb25zIiwiY2IiLCJvcHRzIiwiZ2V0T3B0aW9ucyIsIm1vZHVsZXMiLCJxcmNvZGVzaXplIiwiYmciLCJsaWdodCIsImRhcmsiLCJ2aWV3Qm94Iiwid2lkdGgiLCJzdmdUYWciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsbUJBQU8sQ0FBQyx1RkFBUyxDQUFDO0FBRWhDLFNBQVNDLGNBQWNBLENBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFO0VBQ3RDLE1BQU1DLEtBQUssR0FBR0YsS0FBSyxDQUFDRyxDQUFDLEdBQUcsR0FBRztFQUMzQixNQUFNQyxHQUFHLEdBQUdILE1BQU0sR0FBRyxJQUFJLEdBQUdELEtBQUssQ0FBQ0ssR0FBRyxHQUFHLEdBQUc7RUFFM0MsT0FBT0gsS0FBSyxHQUFHLENBQUMsR0FDWkUsR0FBRyxHQUFHLEdBQUcsR0FBR0gsTUFBTSxHQUFHLFlBQVksR0FBR0MsS0FBSyxDQUFDSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQ25FSCxHQUFHO0FBQ1Q7QUFFQSxTQUFTSSxNQUFNQSxDQUFFQyxHQUFHLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQzFCLElBQUlQLEdBQUcsR0FBR0ssR0FBRyxHQUFHQyxDQUFDO0VBQ2pCLElBQUksT0FBT0MsQ0FBQyxLQUFLLFdBQVcsRUFBRVAsR0FBRyxJQUFJLEdBQUcsR0FBR08sQ0FBQztFQUU1QyxPQUFPUCxHQUFHO0FBQ1o7QUFFQSxTQUFTUSxRQUFRQSxDQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFO0VBQ3JDLElBQUlDLElBQUksR0FBRyxFQUFFO0VBQ2IsSUFBSUMsTUFBTSxHQUFHLENBQUM7RUFDZCxJQUFJQyxNQUFNLEdBQUcsS0FBSztFQUNsQixJQUFJQyxVQUFVLEdBQUcsQ0FBQztFQUVsQixLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR1AsSUFBSSxDQUFDUSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO0lBQ3BDLE1BQU1FLEdBQUcsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNKLENBQUMsR0FBR04sSUFBSSxDQUFDO0lBQ2hDLE1BQU1XLEdBQUcsR0FBR0YsSUFBSSxDQUFDQyxLQUFLLENBQUNKLENBQUMsR0FBR04sSUFBSSxDQUFDO0lBRWhDLElBQUksQ0FBQ1EsR0FBRyxJQUFJLENBQUNKLE1BQU0sRUFBRUEsTUFBTSxHQUFHLElBQUk7SUFFbEMsSUFBSUwsSUFBSSxDQUFDTyxDQUFDLENBQUMsRUFBRTtNQUNYRCxVQUFVLEVBQUU7TUFFWixJQUFJLEVBQUVDLENBQUMsR0FBRyxDQUFDLElBQUlFLEdBQUcsR0FBRyxDQUFDLElBQUlULElBQUksQ0FBQ08sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDdENKLElBQUksSUFBSUUsTUFBTSxHQUNWVixNQUFNLENBQUMsR0FBRyxFQUFFYyxHQUFHLEdBQUdQLE1BQU0sRUFBRSxHQUFHLEdBQUdVLEdBQUcsR0FBR1YsTUFBTSxDQUFDLEdBQzdDUCxNQUFNLENBQUMsR0FBRyxFQUFFUyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1FBRTFCQSxNQUFNLEdBQUcsQ0FBQztRQUNWQyxNQUFNLEdBQUcsS0FBSztNQUNoQjtNQUVBLElBQUksRUFBRUksR0FBRyxHQUFHLENBQUMsR0FBR1IsSUFBSSxJQUFJRCxJQUFJLENBQUNPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3BDSixJQUFJLElBQUlSLE1BQU0sQ0FBQyxHQUFHLEVBQUVXLFVBQVUsQ0FBQztRQUMvQkEsVUFBVSxHQUFHLENBQUM7TUFDaEI7SUFDRixDQUFDLE1BQU07TUFDTEYsTUFBTSxFQUFFO0lBQ1Y7RUFDRjtFQUVBLE9BQU9ELElBQUk7QUFDYjtBQUVBVSxPQUFPLENBQUNDLE1BQU0sR0FBRyxTQUFTQSxNQUFNQSxDQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsRUFBRSxFQUFFO0VBQ3JELE1BQU1DLElBQUksR0FBR2xDLEtBQUssQ0FBQ21DLFVBQVUsQ0FBQ0gsT0FBTyxDQUFDO0VBQ3RDLE1BQU1mLElBQUksR0FBR2MsTUFBTSxDQUFDSyxPQUFPLENBQUNuQixJQUFJO0VBQ2hDLE1BQU1ELElBQUksR0FBR2UsTUFBTSxDQUFDSyxPQUFPLENBQUNwQixJQUFJO0VBQ2hDLE1BQU1xQixVQUFVLEdBQUdwQixJQUFJLEdBQUdpQixJQUFJLENBQUNoQixNQUFNLEdBQUcsQ0FBQztFQUV6QyxNQUFNb0IsRUFBRSxHQUFHLENBQUNKLElBQUksQ0FBQy9CLEtBQUssQ0FBQ29DLEtBQUssQ0FBQ2pDLENBQUMsR0FDMUIsRUFBRSxHQUNGLFFBQVEsR0FBR0osY0FBYyxDQUFDZ0MsSUFBSSxDQUFDL0IsS0FBSyxDQUFDb0MsS0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUNuRCxXQUFXLEdBQUdGLFVBQVUsR0FBRyxHQUFHLEdBQUdBLFVBQVUsR0FBRyxRQUFRO0VBRTFELE1BQU1sQixJQUFJLEdBQ1IsUUFBUSxHQUFHakIsY0FBYyxDQUFDZ0MsSUFBSSxDQUFDL0IsS0FBSyxDQUFDcUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxHQUNwRCxNQUFNLEdBQUd6QixRQUFRLENBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFaUIsSUFBSSxDQUFDaEIsTUFBTSxDQUFDLEdBQUcsS0FBSztFQUVwRCxNQUFNdUIsT0FBTyxHQUFHLFdBQVcsR0FBRyxNQUFNLEdBQUdKLFVBQVUsR0FBRyxHQUFHLEdBQUdBLFVBQVUsR0FBRyxHQUFHO0VBRTFFLE1BQU1LLEtBQUssR0FBRyxDQUFDUixJQUFJLENBQUNRLEtBQUssR0FBRyxFQUFFLEdBQUcsU0FBUyxHQUFHUixJQUFJLENBQUNRLEtBQUssR0FBRyxZQUFZLEdBQUdSLElBQUksQ0FBQ1EsS0FBSyxHQUFHLElBQUk7RUFFMUYsTUFBTUMsTUFBTSxHQUFHLDBDQUEwQyxHQUFHRCxLQUFLLEdBQUdELE9BQU8sR0FBRyxnQ0FBZ0MsR0FBR0gsRUFBRSxHQUFHbkIsSUFBSSxHQUFHLFVBQVU7RUFFdkksSUFBSSxPQUFPYyxFQUFFLEtBQUssVUFBVSxFQUFFO0lBQzVCQSxFQUFFLENBQUMsSUFBSSxFQUFFVSxNQUFNLENBQUM7RUFDbEI7RUFFQSxPQUFPQSxNQUFNO0FBQ2YsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3VpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL3N2Zy10YWcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5mdW5jdGlvbiBnZXRDb2xvckF0dHJpYiAoY29sb3IsIGF0dHJpYikge1xuICBjb25zdCBhbHBoYSA9IGNvbG9yLmEgLyAyNTVcbiAgY29uc3Qgc3RyID0gYXR0cmliICsgJz1cIicgKyBjb2xvci5oZXggKyAnXCInXG5cbiAgcmV0dXJuIGFscGhhIDwgMVxuICAgID8gc3RyICsgJyAnICsgYXR0cmliICsgJy1vcGFjaXR5PVwiJyArIGFscGhhLnRvRml4ZWQoMikuc2xpY2UoMSkgKyAnXCInXG4gICAgOiBzdHJcbn1cblxuZnVuY3Rpb24gc3ZnQ21kIChjbWQsIHgsIHkpIHtcbiAgbGV0IHN0ciA9IGNtZCArIHhcbiAgaWYgKHR5cGVvZiB5ICE9PSAndW5kZWZpbmVkJykgc3RyICs9ICcgJyArIHlcblxuICByZXR1cm4gc3RyXG59XG5cbmZ1bmN0aW9uIHFyVG9QYXRoIChkYXRhLCBzaXplLCBtYXJnaW4pIHtcbiAgbGV0IHBhdGggPSAnJ1xuICBsZXQgbW92ZUJ5ID0gMFxuICBsZXQgbmV3Um93ID0gZmFsc2VcbiAgbGV0IGxpbmVMZW5ndGggPSAwXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY29sID0gTWF0aC5mbG9vcihpICUgc2l6ZSlcbiAgICBjb25zdCByb3cgPSBNYXRoLmZsb29yKGkgLyBzaXplKVxuXG4gICAgaWYgKCFjb2wgJiYgIW5ld1JvdykgbmV3Um93ID0gdHJ1ZVxuXG4gICAgaWYgKGRhdGFbaV0pIHtcbiAgICAgIGxpbmVMZW5ndGgrK1xuXG4gICAgICBpZiAoIShpID4gMCAmJiBjb2wgPiAwICYmIGRhdGFbaSAtIDFdKSkge1xuICAgICAgICBwYXRoICs9IG5ld1Jvd1xuICAgICAgICAgID8gc3ZnQ21kKCdNJywgY29sICsgbWFyZ2luLCAwLjUgKyByb3cgKyBtYXJnaW4pXG4gICAgICAgICAgOiBzdmdDbWQoJ20nLCBtb3ZlQnksIDApXG5cbiAgICAgICAgbW92ZUJ5ID0gMFxuICAgICAgICBuZXdSb3cgPSBmYWxzZVxuICAgICAgfVxuXG4gICAgICBpZiAoIShjb2wgKyAxIDwgc2l6ZSAmJiBkYXRhW2kgKyAxXSkpIHtcbiAgICAgICAgcGF0aCArPSBzdmdDbWQoJ2gnLCBsaW5lTGVuZ3RoKVxuICAgICAgICBsaW5lTGVuZ3RoID0gMFxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBtb3ZlQnkrK1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXRoXG59XG5cbmV4cG9ydHMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyIChxckRhdGEsIG9wdGlvbnMsIGNiKSB7XG4gIGNvbnN0IG9wdHMgPSBVdGlscy5nZXRPcHRpb25zKG9wdGlvbnMpXG4gIGNvbnN0IHNpemUgPSBxckRhdGEubW9kdWxlcy5zaXplXG4gIGNvbnN0IGRhdGEgPSBxckRhdGEubW9kdWxlcy5kYXRhXG4gIGNvbnN0IHFyY29kZXNpemUgPSBzaXplICsgb3B0cy5tYXJnaW4gKiAyXG5cbiAgY29uc3QgYmcgPSAhb3B0cy5jb2xvci5saWdodC5hXG4gICAgPyAnJ1xuICAgIDogJzxwYXRoICcgKyBnZXRDb2xvckF0dHJpYihvcHRzLmNvbG9yLmxpZ2h0LCAnZmlsbCcpICtcbiAgICAgICcgZD1cIk0wIDBoJyArIHFyY29kZXNpemUgKyAndicgKyBxcmNvZGVzaXplICsgJ0gwelwiLz4nXG5cbiAgY29uc3QgcGF0aCA9XG4gICAgJzxwYXRoICcgKyBnZXRDb2xvckF0dHJpYihvcHRzLmNvbG9yLmRhcmssICdzdHJva2UnKSArXG4gICAgJyBkPVwiJyArIHFyVG9QYXRoKGRhdGEsIHNpemUsIG9wdHMubWFyZ2luKSArICdcIi8+J1xuXG4gIGNvbnN0IHZpZXdCb3ggPSAndmlld0JveD1cIicgKyAnMCAwICcgKyBxcmNvZGVzaXplICsgJyAnICsgcXJjb2Rlc2l6ZSArICdcIidcblxuICBjb25zdCB3aWR0aCA9ICFvcHRzLndpZHRoID8gJycgOiAnd2lkdGg9XCInICsgb3B0cy53aWR0aCArICdcIiBoZWlnaHQ9XCInICsgb3B0cy53aWR0aCArICdcIiAnXG5cbiAgY29uc3Qgc3ZnVGFnID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiICcgKyB3aWR0aCArIHZpZXdCb3ggKyAnIHNoYXBlLXJlbmRlcmluZz1cImNyaXNwRWRnZXNcIj4nICsgYmcgKyBwYXRoICsgJzwvc3ZnPlxcbidcblxuICBpZiAodHlwZW9mIGNiID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IobnVsbCwgc3ZnVGFnKVxuICB9XG5cbiAgcmV0dXJuIHN2Z1RhZ1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/svg-tag.js\n");

/***/ }),

/***/ "./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/utils.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function hex2rgba(hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString();\n  }\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string');\n  }\n  let hexCode = hex.slice().replace('#', '').split('');\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex);\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c];\n    }));\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F');\n  const hexValue = parseInt(hexCode.join(''), 16);\n  return {\n    r: hexValue >> 24 & 255,\n    g: hexValue >> 16 & 255,\n    b: hexValue >> 8 & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  };\n}\nexports.getOptions = function getOptions(options) {\n  if (!options) options = {};\n  if (!options.color) options.color = {};\n  const margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;\n  const width = options.width && options.width >= 21 ? options.width : undefined;\n  const scale = options.scale || 4;\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  };\n};\nexports.getScale = function getScale(qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;\n};\nexports.getImageWidth = function getImageWidth(qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts);\n  return Math.floor((qrSize + opts.margin * 2) * scale);\n};\nexports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n  const size = qr.modules.size;\n  const data = qr.modules.data;\n  const scale = exports.getScale(size, opts);\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale);\n  const scaledMargin = opts.margin * scale;\n  const palette = [opts.color.light, opts.color.dark];\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4;\n      let pxColor = opts.color.light;\n      if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale);\n        const jSrc = Math.floor((j - scaledMargin) / scale);\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n      }\n      imgData[posDst++] = pxColor.r;\n      imgData[posDst++] = pxColor.g;\n      imgData[posDst++] = pxColor.b;\n      imgData[posDst] = pxColor.a;\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/ui/node_modules/qrcode/lib/renderer/utils.js\n");

/***/ })

}]);