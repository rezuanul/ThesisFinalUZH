(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[28],{

/***/ "./node_modules/@walletconnect/modal-ui/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/dist/index.js ***!
  \************************************************************/
/*! exports provided: WcmModal, WcmQrCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WcmModal\", function() { return ae; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WcmQrCode\", function() { return j; });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/modal-core */ \"./node_modules/@walletconnect/modal-core/dist/index.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! motion */ \"./node_modules/motion/dist/main.es.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! qrcode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/browser.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(qrcode__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\nvar et = Object.defineProperty,\n  Be = Object.getOwnPropertySymbols,\n  tt = Object.prototype.hasOwnProperty,\n  ot = Object.prototype.propertyIsEnumerable,\n  Ue = (e, o, r) => o in e ? et(e, o, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: r\n  }) : e[o] = r,\n  ve = (e, o) => {\n    for (var r in o || (o = {})) tt.call(o, r) && Ue(e, r, o[r]);\n    if (Be) for (var r of Be(o)) ot.call(o, r) && Ue(e, r, o[r]);\n    return e;\n  };\nfunction rt() {\n  var e;\n  const o = (e = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ThemeCtrl\"].state.themeMode) != null ? e : \"dark\",\n    r = {\n      light: {\n        foreground: {\n          1: \"rgb(20,20,20)\",\n          2: \"rgb(121,134,134)\",\n          3: \"rgb(158,169,169)\"\n        },\n        background: {\n          1: \"rgb(255,255,255)\",\n          2: \"rgb(241,243,243)\",\n          3: \"rgb(228,231,231)\"\n        },\n        overlay: \"rgba(0,0,0,0.1)\"\n      },\n      dark: {\n        foreground: {\n          1: \"rgb(228,231,231)\",\n          2: \"rgb(148,158,158)\",\n          3: \"rgb(110,119,119)\"\n        },\n        background: {\n          1: \"rgb(20,20,20)\",\n          2: \"rgb(39,42,42)\",\n          3: \"rgb(59,64,64)\"\n        },\n        overlay: \"rgba(255,255,255,0.1)\"\n      }\n    }[o];\n  return {\n    \"--wcm-color-fg-1\": r.foreground[1],\n    \"--wcm-color-fg-2\": r.foreground[2],\n    \"--wcm-color-fg-3\": r.foreground[3],\n    \"--wcm-color-bg-1\": r.background[1],\n    \"--wcm-color-bg-2\": r.background[2],\n    \"--wcm-color-bg-3\": r.background[3],\n    \"--wcm-color-overlay\": r.overlay\n  };\n}\nfunction He() {\n  return {\n    \"--wcm-accent-color\": \"#3396FF\",\n    \"--wcm-accent-fill-color\": \"#FFFFFF\",\n    \"--wcm-z-index\": \"89\",\n    \"--wcm-background-color\": \"#3396FF\",\n    \"--wcm-background-border-radius\": \"8px\",\n    \"--wcm-container-border-radius\": \"30px\",\n    \"--wcm-wallet-icon-border-radius\": \"15px\",\n    \"--wcm-wallet-icon-large-border-radius\": \"30px\",\n    \"--wcm-wallet-icon-small-border-radius\": \"7px\",\n    \"--wcm-input-border-radius\": \"28px\",\n    \"--wcm-button-border-radius\": \"10px\",\n    \"--wcm-notification-border-radius\": \"36px\",\n    \"--wcm-secondary-button-border-radius\": \"28px\",\n    \"--wcm-icon-button-border-radius\": \"50%\",\n    \"--wcm-button-hover-highlight-border-radius\": \"10px\",\n    \"--wcm-text-big-bold-size\": \"20px\",\n    \"--wcm-text-big-bold-weight\": \"600\",\n    \"--wcm-text-big-bold-line-height\": \"24px\",\n    \"--wcm-text-big-bold-letter-spacing\": \"-0.03em\",\n    \"--wcm-text-big-bold-text-transform\": \"none\",\n    \"--wcm-text-xsmall-bold-size\": \"10px\",\n    \"--wcm-text-xsmall-bold-weight\": \"700\",\n    \"--wcm-text-xsmall-bold-line-height\": \"12px\",\n    \"--wcm-text-xsmall-bold-letter-spacing\": \"0.02em\",\n    \"--wcm-text-xsmall-bold-text-transform\": \"uppercase\",\n    \"--wcm-text-xsmall-regular-size\": \"12px\",\n    \"--wcm-text-xsmall-regular-weight\": \"600\",\n    \"--wcm-text-xsmall-regular-line-height\": \"14px\",\n    \"--wcm-text-xsmall-regular-letter-spacing\": \"-0.03em\",\n    \"--wcm-text-xsmall-regular-text-transform\": \"none\",\n    \"--wcm-text-small-thin-size\": \"14px\",\n    \"--wcm-text-small-thin-weight\": \"500\",\n    \"--wcm-text-small-thin-line-height\": \"16px\",\n    \"--wcm-text-small-thin-letter-spacing\": \"-0.03em\",\n    \"--wcm-text-small-thin-text-transform\": \"none\",\n    \"--wcm-text-small-regular-size\": \"14px\",\n    \"--wcm-text-small-regular-weight\": \"600\",\n    \"--wcm-text-small-regular-line-height\": \"16px\",\n    \"--wcm-text-small-regular-letter-spacing\": \"-0.03em\",\n    \"--wcm-text-small-regular-text-transform\": \"none\",\n    \"--wcm-text-medium-regular-size\": \"16px\",\n    \"--wcm-text-medium-regular-weight\": \"600\",\n    \"--wcm-text-medium-regular-line-height\": \"20px\",\n    \"--wcm-text-medium-regular-letter-spacing\": \"-0.03em\",\n    \"--wcm-text-medium-regular-text-transform\": \"none\",\n    \"--wcm-font-family\": \"-apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', sans-serif\",\n    \"--wcm-font-feature-settings\": \"'tnum' on, 'lnum' on, 'case' on\",\n    \"--wcm-success-color\": \"rgb(38,181,98)\",\n    \"--wcm-error-color\": \"rgb(242, 90, 103)\",\n    \"--wcm-overlay-background-color\": \"rgba(0, 0, 0, 0.3)\",\n    \"--wcm-overlay-backdrop-filter\": \"none\"\n  };\n}\nconst h = {\n    getPreset(e) {\n      return He()[e];\n    },\n    setTheme() {\n      const e = document.querySelector(\":root\"),\n        {\n          themeVariables: o\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ThemeCtrl\"].state;\n      if (e) {\n        const r = ve(ve(ve({}, rt()), He()), o);\n        Object.entries(r).forEach(([a, t]) => e.style.setProperty(a, t));\n      }\n    },\n    globalCss: lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`*,::after,::before{margin:0;padding:0;box-sizing:border-box;font-style:normal;text-rendering:optimizeSpeed;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:transparent;backface-visibility:hidden}button{cursor:pointer;display:flex;justify-content:center;align-items:center;position:relative;border:none;background-color:transparent;transition:all .2s ease}@media (hover:hover) and (pointer:fine){button:active{transition:all .1s ease;transform:scale(.93)}}button::after{content:'';position:absolute;top:0;bottom:0;left:0;right:0;transition:background-color,.2s ease}button:disabled{cursor:not-allowed}button svg,button wcm-text{position:relative;z-index:1}input{border:none;outline:0;appearance:none}img{display:block}::selection{color:var(--wcm-accent-fill-color);background:var(--wcm-accent-color)}`\n  },\n  at = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{border-radius:var(--wcm-secondary-button-border-radius);height:28px;padding:0 10px;background-color:var(--wcm-accent-color)}button path{fill:var(--wcm-accent-fill-color)}button::after{border-radius:inherit;border:1px solid var(--wcm-color-overlay)}button:disabled::after{background-color:transparent}.wcm-icon-left svg{margin-right:5px}.wcm-icon-right svg{margin-left:5px}button:active::after{background-color:var(--wcm-color-overlay)}.wcm-ghost,.wcm-ghost:active::after,.wcm-outline{background-color:transparent}.wcm-ghost:active{opacity:.5}@media(hover:hover){button:hover::after{background-color:var(--wcm-color-overlay)}.wcm-ghost:hover::after{background-color:transparent}.wcm-ghost:hover{opacity:.5}}button:disabled{background-color:var(--wcm-color-bg-3);pointer-events:none}.wcm-ghost::after{border-color:transparent}.wcm-ghost path{fill:var(--wcm-color-fg-2)}.wcm-outline path{fill:var(--wcm-accent-color)}.wcm-outline:disabled{background-color:transparent;opacity:.5}`;\nvar lt = Object.defineProperty,\n  it = Object.getOwnPropertyDescriptor,\n  F = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? it(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && lt(o, r, t), t;\n  };\nlet T = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.disabled = !1, this.iconLeft = void 0, this.iconRight = void 0, this.onClick = () => null, this.variant = \"default\";\n  }\n  render() {\n    const e = {\n      \"wcm-icon-left\": this.iconLeft !== void 0,\n      \"wcm-icon-right\": this.iconRight !== void 0,\n      \"wcm-ghost\": this.variant === \"ghost\",\n      \"wcm-outline\": this.variant === \"outline\"\n    };\n    let o = \"inverse\";\n    return this.variant === \"ghost\" && (o = \"secondary\"), this.variant === \"outline\" && (o = \"accent\"), lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\" ?disabled=\"${this.disabled}\" @click=\"${this.onClick}\">${this.iconLeft}<wcm-text variant=\"small-regular\" color=\"${o}\"><slot></slot></wcm-text>${this.iconRight}</button>`;\n  }\n};\nT.styles = [h.globalCss, at], F([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], T.prototype, \"disabled\", 2), F([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], T.prototype, \"iconLeft\", 2), F([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], T.prototype, \"iconRight\", 2), F([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], T.prototype, \"onClick\", 2), F([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], T.prototype, \"variant\", 2), T = F([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-button\")], T);\nconst nt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{display:inline-block}button{padding:0 15px 1px;height:40px;border-radius:var(--wcm-button-border-radius);color:var(--wcm-accent-fill-color);background-color:var(--wcm-accent-color)}button::after{content:'';top:0;bottom:0;left:0;right:0;position:absolute;background-color:transparent;border-radius:inherit;transition:background-color .2s ease;border:1px solid var(--wcm-color-overlay)}button:active::after{background-color:var(--wcm-color-overlay)}button:disabled{padding-bottom:0;background-color:var(--wcm-color-bg-3);color:var(--wcm-color-fg-3)}.wcm-secondary{color:var(--wcm-accent-color);background-color:transparent}.wcm-secondary::after{display:none}@media(hover:hover){button:hover::after{background-color:var(--wcm-color-overlay)}}`;\nvar ct = Object.defineProperty,\n  st = Object.getOwnPropertyDescriptor,\n  ue = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? st(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && ct(o, r, t), t;\n  };\nlet ee = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.disabled = !1, this.variant = \"primary\";\n  }\n  render() {\n    const e = {\n      \"wcm-secondary\": this.variant === \"secondary\"\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button ?disabled=\"${this.disabled}\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\"><slot></slot></button>`;\n  }\n};\nee.styles = [h.globalCss, nt], ue([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], ee.prototype, \"disabled\", 2), ue([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], ee.prototype, \"variant\", 2), ee = ue([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-button-big\")], ee);\nconst dt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{background-color:var(--wcm-color-bg-2);border-top:1px solid var(--wcm-color-bg-3)}div{padding:10px 20px;display:inherit;flex-direction:inherit;align-items:inherit;width:inherit;justify-content:inherit}`;\nvar mt = Object.defineProperty,\n  ht = Object.getOwnPropertyDescriptor,\n  wt = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? ht(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && mt(o, r, t), t;\n  };\nlet be = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><slot></slot></div>`;\n  }\n};\nbe.styles = [h.globalCss, dt], be = wt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-info-footer\")], be);\nconst v = {\n    CROSS_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\"><path d=\"M9.94 11A.75.75 0 1 0 11 9.94L7.414 6.353a.5.5 0 0 1 0-.708L11 2.061A.75.75 0 1 0 9.94 1L6.353 4.586a.5.5 0 0 1-.708 0L2.061 1A.75.75 0 0 0 1 2.06l3.586 3.586a.5.5 0 0 1 0 .708L1 9.939A.75.75 0 1 0 2.06 11l3.586-3.586a.5.5 0 0 1 .708 0L9.939 11Z\" fill=\"#fff\"/></svg>`,\n    WALLET_CONNECT_LOGO: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"178\" height=\"29\" viewBox=\"0 0 178 29\" id=\"wcm-wc-logo\"><path d=\"M10.683 7.926c5.284-5.17 13.85-5.17 19.134 0l.636.623a.652.652 0 0 1 0 .936l-2.176 2.129a.343.343 0 0 1-.478 0l-.875-.857c-3.686-3.607-9.662-3.607-13.348 0l-.937.918a.343.343 0 0 1-.479 0l-2.175-2.13a.652.652 0 0 1 0-.936l.698-.683Zm23.633 4.403 1.935 1.895a.652.652 0 0 1 0 .936l-8.73 8.543a.687.687 0 0 1-.956 0L20.37 17.64a.172.172 0 0 0-.239 0l-6.195 6.063a.687.687 0 0 1-.957 0l-8.73-8.543a.652.652 0 0 1 0-.936l1.936-1.895a.687.687 0 0 1 .957 0l6.196 6.064a.172.172 0 0 0 .239 0l6.195-6.064a.687.687 0 0 1 .957 0l6.196 6.064a.172.172 0 0 0 .24 0l6.195-6.064a.687.687 0 0 1 .956 0ZM48.093 20.948l2.338-9.355c.139-.515.258-1.07.416-1.942.12.872.258 1.427.357 1.942l2.022 9.355h4.181l3.528-13.874h-3.21l-1.943 8.523a24.825 24.825 0 0 0-.456 2.457c-.158-.931-.317-1.625-.495-2.438l-1.883-8.542h-4.201l-2.042 8.542a41.204 41.204 0 0 0-.475 2.438 41.208 41.208 0 0 0-.476-2.438l-1.903-8.542h-3.349l3.508 13.874h4.083ZM63.33 21.304c1.585 0 2.596-.654 3.11-1.605-.059.297-.078.595-.078.892v.357h2.655V15.22c0-2.735-1.248-4.32-4.3-4.32-2.636 0-4.36 1.466-4.52 3.487h2.914c.1-.891.734-1.426 1.705-1.426.911 0 1.407.515 1.407 1.11 0 .435-.258.693-1.03.792l-1.388.159c-2.061.257-3.825 1.01-3.825 3.19 0 1.982 1.645 3.092 3.35 3.092Zm.891-2.041c-.773 0-1.348-.436-1.348-1.19 0-.733.655-1.09 1.645-1.268l.674-.119c.575-.118.892-.218 1.09-.396v.912c0 1.228-.892 2.06-2.06 2.06ZM70.398 7.074v13.874h2.874V7.074h-2.874ZM74.934 7.074v13.874h2.874V7.074h-2.874ZM84.08 21.304c2.735 0 4.5-1.546 4.697-3.567h-2.893c-.139.892-.892 1.387-1.804 1.387-1.228 0-2.12-.99-2.14-2.358h6.897v-.555c0-3.21-1.764-5.312-4.816-5.312-2.933 0-4.994 2.062-4.994 5.173 0 3.37 2.12 5.232 5.053 5.232Zm-2.16-6.421c.119-1.11.932-1.922 2.081-1.922 1.11 0 1.883.772 1.903 1.922H81.92ZM94.92 21.146c.633 0 1.248-.1 1.525-.179v-2.18c-.218.04-.475.06-.693.06-1.05 0-1.427-.595-1.427-1.566v-3.805h2.338v-2.24h-2.338V7.788H91.47v3.448H89.37v2.24h2.1v4.201c0 2.3 1.15 3.469 3.45 3.469ZM104.62 21.304c3.924 0 6.302-2.299 6.599-5.608h-3.111c-.238 1.803-1.506 3.032-3.369 3.032-2.2 0-3.746-1.784-3.746-4.796 0-2.953 1.605-4.638 3.805-4.638 1.883 0 2.953 1.15 3.171 2.834h3.191c-.317-3.448-2.854-5.41-6.342-5.41-3.984 0-7.036 2.695-7.036 7.214 0 4.677 2.676 7.372 6.838 7.372ZM117.449 21.304c2.993 0 5.114-1.882 5.114-5.172 0-3.23-2.121-5.233-5.114-5.233-2.972 0-5.093 2.002-5.093 5.233 0 3.29 2.101 5.172 5.093 5.172Zm0-2.22c-1.327 0-2.18-1.09-2.18-2.952 0-1.903.892-2.973 2.18-2.973 1.308 0 2.2 1.07 2.2 2.973 0 1.862-.872 2.953-2.2 2.953ZM126.569 20.948v-5.689c0-1.208.753-2.1 1.823-2.1 1.011 0 1.606.773 1.606 2.06v5.729h2.873v-6.144c0-2.339-1.229-3.905-3.428-3.905-1.526 0-2.458.734-2.953 1.606a5.31 5.31 0 0 0 .079-.892v-.377h-2.874v9.712h2.874ZM137.464 20.948v-5.689c0-1.208.753-2.1 1.823-2.1 1.011 0 1.606.773 1.606 2.06v5.729h2.873v-6.144c0-2.339-1.228-3.905-3.428-3.905-1.526 0-2.458.734-2.953 1.606a5.31 5.31 0 0 0 .079-.892v-.377h-2.874v9.712h2.874ZM149.949 21.304c2.735 0 4.499-1.546 4.697-3.567h-2.893c-.139.892-.892 1.387-1.804 1.387-1.228 0-2.12-.99-2.14-2.358h6.897v-.555c0-3.21-1.764-5.312-4.816-5.312-2.933 0-4.994 2.062-4.994 5.173 0 3.37 2.12 5.232 5.053 5.232Zm-2.16-6.421c.119-1.11.932-1.922 2.081-1.922 1.11 0 1.883.772 1.903 1.922h-3.984ZM160.876 21.304c3.013 0 4.658-1.645 4.975-4.201h-2.874c-.099 1.07-.713 1.982-2.001 1.982-1.309 0-2.2-1.21-2.2-2.993 0-1.942 1.03-2.933 2.259-2.933 1.209 0 1.803.872 1.883 1.882h2.873c-.218-2.358-1.823-4.142-4.776-4.142-2.874 0-5.153 1.903-5.153 5.193 0 3.25 1.923 5.212 5.014 5.212ZM172.067 21.146c.634 0 1.248-.1 1.526-.179v-2.18c-.218.04-.476.06-.694.06-1.05 0-1.427-.595-1.427-1.566v-3.805h2.339v-2.24h-2.339V7.788h-2.854v3.448h-2.1v2.24h2.1v4.201c0 2.3 1.15 3.469 3.449 3.469Z\" fill=\"#fff\"/></svg>`,\n    WALLET_CONNECT_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"28\" height=\"20\" viewBox=\"0 0 28 20\"><g clip-path=\"url(#a)\"><path d=\"M7.386 6.482c3.653-3.576 9.575-3.576 13.228 0l.44.43a.451.451 0 0 1 0 .648L19.55 9.033a.237.237 0 0 1-.33 0l-.606-.592c-2.548-2.496-6.68-2.496-9.228 0l-.648.634a.237.237 0 0 1-.33 0L6.902 7.602a.451.451 0 0 1 0-.647l.483-.473Zm16.338 3.046 1.339 1.31a.451.451 0 0 1 0 .648l-6.035 5.909a.475.475 0 0 1-.662 0L14.083 13.2a.119.119 0 0 0-.166 0l-4.283 4.194a.475.475 0 0 1-.662 0l-6.035-5.91a.451.451 0 0 1 0-.647l1.338-1.31a.475.475 0 0 1 .662 0l4.283 4.194c.046.044.12.044.166 0l4.283-4.194a.475.475 0 0 1 .662 0l4.283 4.194c.046.044.12.044.166 0l4.283-4.194a.475.475 0 0 1 .662 0Z\" fill=\"#000000\"/></g><defs><clipPath id=\"a\"><path fill=\"#ffffff\" d=\"M0 0h28v20H0z\"/></clipPath></defs></svg>`,\n    WALLET_CONNECT_ICON_COLORED: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"96\" height=\"96\" fill=\"none\"><path fill=\"#fff\" d=\"M25.322 33.597c12.525-12.263 32.83-12.263 45.355 0l1.507 1.476a1.547 1.547 0 0 1 0 2.22l-5.156 5.048a.814.814 0 0 1-1.134 0l-2.074-2.03c-8.737-8.555-22.903-8.555-31.64 0l-2.222 2.175a.814.814 0 0 1-1.134 0l-5.156-5.049a1.547 1.547 0 0 1 0-2.22l1.654-1.62Zm56.019 10.44 4.589 4.494a1.547 1.547 0 0 1 0 2.22l-20.693 20.26a1.628 1.628 0 0 1-2.267 0L48.283 56.632a.407.407 0 0 0-.567 0L33.03 71.012a1.628 1.628 0 0 1-2.268 0L10.07 50.75a1.547 1.547 0 0 1 0-2.22l4.59-4.494a1.628 1.628 0 0 1 2.267 0l14.687 14.38c.156.153.41.153.567 0l14.685-14.38a1.628 1.628 0 0 1 2.268 0l14.687 14.38c.156.153.41.153.567 0l14.686-14.38a1.628 1.628 0 0 1 2.268 0Z\"/><path stroke=\"#000\" d=\"M25.672 33.954c12.33-12.072 32.325-12.072 44.655 0l1.508 1.476a1.047 1.047 0 0 1 0 1.506l-5.157 5.048a.314.314 0 0 1-.434 0l-2.074-2.03c-8.932-8.746-23.409-8.746-32.34 0l-2.222 2.174a.314.314 0 0 1-.434 0l-5.157-5.048a1.047 1.047 0 0 1 0-1.506l1.655-1.62Zm55.319 10.44 4.59 4.494a1.047 1.047 0 0 1 0 1.506l-20.694 20.26a1.128 1.128 0 0 1-1.568 0l-14.686-14.38a.907.907 0 0 0-1.267 0L32.68 70.655a1.128 1.128 0 0 1-1.568 0L10.42 50.394a1.047 1.047 0 0 1 0-1.506l4.59-4.493a1.128 1.128 0 0 1 1.567 0l14.687 14.379a.907.907 0 0 0 1.266 0l-.35-.357.35.357 14.686-14.38a1.128 1.128 0 0 1 1.568 0l14.687 14.38a.907.907 0 0 0 1.267 0l14.686-14.38a1.128 1.128 0 0 1 1.568 0Z\"/></svg>`,\n    BACK_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"10\" height=\"18\" viewBox=\"0 0 10 18\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.735.179a.75.75 0 0 1 .087 1.057L2.92 8.192a1.25 1.25 0 0 0 0 1.617l5.902 6.956a.75.75 0 1 1-1.144.97L1.776 10.78a2.75 2.75 0 0 1 0-3.559L7.678.265A.75.75 0 0 1 8.735.18Z\" fill=\"#fff\"/></svg>`,\n    COPY_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"24\" height=\"24\" fill=\"none\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M7.01 7.01c.03-1.545.138-2.5.535-3.28A5 5 0 0 1 9.73 1.545C10.8 1 12.2 1 15 1c2.8 0 4.2 0 5.27.545a5 5 0 0 1 2.185 2.185C23 4.8 23 6.2 23 9c0 2.8 0 4.2-.545 5.27a5 5 0 0 1-2.185 2.185c-.78.397-1.735.505-3.28.534l-.001.01c-.03 1.54-.138 2.493-.534 3.27a5 5 0 0 1-2.185 2.186C13.2 23 11.8 23 9 23c-2.8 0-4.2 0-5.27-.545a5 5 0 0 1-2.185-2.185C1 19.2 1 17.8 1 15c0-2.8 0-4.2.545-5.27A5 5 0 0 1 3.73 7.545C4.508 7.149 5.46 7.04 7 7.01h.01ZM15 15.5c-1.425 0-2.403-.001-3.162-.063-.74-.06-1.139-.172-1.427-.319a3.5 3.5 0 0 1-1.53-1.529c-.146-.288-.257-.686-.318-1.427C8.501 11.403 8.5 10.425 8.5 9c0-1.425.001-2.403.063-3.162.06-.74.172-1.139.318-1.427a3.5 3.5 0 0 1 1.53-1.53c.288-.146.686-.257 1.427-.318.759-.062 1.737-.063 3.162-.063 1.425 0 2.403.001 3.162.063.74.06 1.139.172 1.427.318a3.5 3.5 0 0 1 1.53 1.53c.146.288.257.686.318 1.427.062.759.063 1.737.063 3.162 0 1.425-.001 2.403-.063 3.162-.06.74-.172 1.139-.319 1.427a3.5 3.5 0 0 1-1.529 1.53c-.288.146-.686.257-1.427.318-.759.062-1.737.063-3.162.063ZM7 8.511c-.444.009-.825.025-1.162.052-.74.06-1.139.172-1.427.318a3.5 3.5 0 0 0-1.53 1.53c-.146.288-.257.686-.318 1.427-.062.759-.063 1.737-.063 3.162 0 1.425.001 2.403.063 3.162.06.74.172 1.139.318 1.427a3.5 3.5 0 0 0 1.53 1.53c.288.146.686.257 1.427.318.759.062 1.737.063 3.162.063 1.425 0 2.403-.001 3.162-.063.74-.06 1.139-.172 1.427-.319a3.5 3.5 0 0 0 1.53-1.53c.146-.287.257-.685.318-1.426.027-.337.043-.718.052-1.162H15c-2.8 0-4.2 0-5.27-.545a5 5 0 0 1-2.185-2.185C7 13.2 7 11.8 7 9v-.489Z\" clip-rule=\"evenodd\"/></svg>`,\n    RETRY_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\"><path d=\"M6.464 2.03A.75.75 0 0 0 5.403.97L2.08 4.293a1 1 0 0 0 0 1.414L5.403 9.03a.75.75 0 0 0 1.06-1.06L4.672 6.177a.25.25 0 0 1 .177-.427h2.085a4 4 0 1 1-3.93 4.746c-.077-.407-.405-.746-.82-.746-.414 0-.755.338-.7.748a5.501 5.501 0 1 0 5.45-6.248H4.848a.25.25 0 0 1-.177-.427L6.464 2.03Z\" fill=\"#fff\"/></svg>`,\n    DESKTOP_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 5.98c0-1.85 0-2.775.394-3.466a3 3 0 0 1 1.12-1.12C2.204 1 3.13 1 4.98 1h6.04c1.85 0 2.775 0 3.466.394a3 3 0 0 1 1.12 1.12C16 3.204 16 4.13 16 5.98v1.04c0 1.85 0 2.775-.394 3.466a3 3 0 0 1-1.12 1.12C13.796 12 12.87 12 11.02 12H4.98c-1.85 0-2.775 0-3.466-.394a3 3 0 0 1-1.12-1.12C0 9.796 0 8.87 0 7.02V5.98ZM4.98 2.5h6.04c.953 0 1.568.001 2.034.043.446.04.608.108.69.154a1.5 1.5 0 0 1 .559.56c.046.08.114.243.154.69.042.465.043 1.08.043 2.033v1.04c0 .952-.001 1.568-.043 2.034-.04.446-.108.608-.154.69a1.499 1.499 0 0 1-.56.559c-.08.046-.243.114-.69.154-.466.042-1.08.043-2.033.043H4.98c-.952 0-1.568-.001-2.034-.043-.446-.04-.608-.108-.69-.154a1.5 1.5 0 0 1-.559-.56c-.046-.08-.114-.243-.154-.69-.042-.465-.043-1.08-.043-2.033V5.98c0-.952.001-1.568.043-2.034.04-.446.108-.608.154-.69a1.5 1.5 0 0 1 .56-.559c.08-.046.243-.114.69-.154.465-.042 1.08-.043 2.033-.043Z\" fill=\"#fff\"/><path d=\"M4 14.25a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Z\" fill=\"#fff\"/></svg>`,\n    MOBILE_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path d=\"M6.75 5a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 4.98c0-1.85 0-2.775.394-3.466a3 3 0 0 1 1.12-1.12C5.204 0 6.136 0 8 0s2.795 0 3.486.394a3 3 0 0 1 1.12 1.12C13 2.204 13 3.13 13 4.98v6.04c0 1.85 0 2.775-.394 3.466a3 3 0 0 1-1.12 1.12C10.796 16 9.864 16 8 16s-2.795 0-3.486-.394a3 3 0 0 1-1.12-1.12C3 13.796 3 12.87 3 11.02V4.98Zm8.5 0v6.04c0 .953-.001 1.568-.043 2.034-.04.446-.108.608-.154.69a1.499 1.499 0 0 1-.56.559c-.08.045-.242.113-.693.154-.47.042-1.091.043-2.05.043-.959 0-1.58-.001-2.05-.043-.45-.04-.613-.109-.693-.154a1.5 1.5 0 0 1-.56-.56c-.046-.08-.114-.243-.154-.69-.042-.466-.043-1.08-.043-2.033V4.98c0-.952.001-1.568.043-2.034.04-.446.108-.608.154-.69a1.5 1.5 0 0 1 .56-.559c.08-.045.243-.113.693-.154C6.42 1.501 7.041 1.5 8 1.5c.959 0 1.58.001 2.05.043.45.04.613.109.693.154a1.5 1.5 0 0 1 .56.56c.046.08.114.243.154.69.042.465.043 1.08.043 2.033Z\" fill=\"#fff\"/></svg>`,\n    ARROW_DOWN_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"><path d=\"M2.28 7.47a.75.75 0 0 0-1.06 1.06l5.25 5.25a.75.75 0 0 0 1.06 0l5.25-5.25a.75.75 0 0 0-1.06-1.06l-3.544 3.543a.25.25 0 0 1-.426-.177V.75a.75.75 0 0 0-1.5 0v10.086a.25.25 0 0 1-.427.176L2.28 7.47Z\" fill=\"#fff\"/></svg>`,\n    ARROW_UP_RIGHT_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"15\" height=\"14\" fill=\"none\"><path d=\"M4.5 1.75A.75.75 0 0 1 5.25 1H12a1.5 1.5 0 0 1 1.5 1.5v6.75a.75.75 0 0 1-1.5 0V4.164a.25.25 0 0 0-.427-.176L4.061 11.5A.75.75 0 0 1 3 10.44l7.513-7.513a.25.25 0 0 0-.177-.427H5.25a.75.75 0 0 1-.75-.75Z\" fill=\"#fff\"/></svg>`,\n    ARROW_RIGHT_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"6\" height=\"14\" viewBox=\"0 0 6 14\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.181 1.099a.75.75 0 0 1 1.024.279l2.433 4.258a2.75 2.75 0 0 1 0 2.729l-2.433 4.257a.75.75 0 1 1-1.303-.744L4.335 7.62a1.25 1.25 0 0 0 0-1.24L1.902 2.122a.75.75 0 0 1 .28-1.023Z\" fill=\"#fff\"/></svg>`,\n    QRCODE_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"><path d=\"M23.748 9a.748.748 0 0 0 .748-.752c-.018-2.596-.128-4.07-.784-5.22a6 6 0 0 0-2.24-2.24c-1.15-.656-2.624-.766-5.22-.784a.748.748 0 0 0-.752.748c0 .414.335.749.748.752 1.015.007 1.82.028 2.494.088.995.09 1.561.256 1.988.5.7.398 1.28.978 1.679 1.678.243.427.41.993.498 1.988.061.675.082 1.479.09 2.493a.753.753 0 0 0 .75.749ZM3.527.788C4.677.132 6.152.022 8.747.004A.748.748 0 0 1 9.5.752a.753.753 0 0 1-.749.752c-1.014.007-1.818.028-2.493.088-.995.09-1.561.256-1.988.5-.7.398-1.28.978-1.679 1.678-.243.427-.41.993-.499 1.988-.06.675-.081 1.479-.088 2.493A.753.753 0 0 1 1.252 9a.748.748 0 0 1-.748-.752c.018-2.596.128-4.07.784-5.22a6 6 0 0 1 2.24-2.24ZM1.252 15a.748.748 0 0 0-.748.752c.018 2.596.128 4.07.784 5.22a6 6 0 0 0 2.24 2.24c1.15.656 2.624.766 5.22.784a.748.748 0 0 0 .752-.748.753.753 0 0 0-.749-.752c-1.014-.007-1.818-.028-2.493-.089-.995-.089-1.561-.255-1.988-.498a4.5 4.5 0 0 1-1.679-1.68c-.243-.426-.41-.992-.499-1.987-.06-.675-.081-1.479-.088-2.493A.753.753 0 0 0 1.252 15ZM22.996 15.749a.753.753 0 0 1 .752-.749c.415 0 .751.338.748.752-.018 2.596-.128 4.07-.784 5.22a6 6 0 0 1-2.24 2.24c-1.15.656-2.624.766-5.22.784a.748.748 0 0 1-.752-.748c0-.414.335-.749.748-.752 1.015-.007 1.82-.028 2.494-.089.995-.089 1.561-.255 1.988-.498a4.5 4.5 0 0 0 1.679-1.68c.243-.426.41-.992.498-1.987.061-.675.082-1.479.09-2.493Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 4a2.5 2.5 0 0 0-2.5 2.5v2A2.5 2.5 0 0 0 7 11h2a2.5 2.5 0 0 0 2.5-2.5v-2A2.5 2.5 0 0 0 9 4H7Zm2 1.5H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1ZM13.5 6.5A2.5 2.5 0 0 1 16 4h2a2.5 2.5 0 0 1 2.5 2.5v2A2.5 2.5 0 0 1 18 11h-2a2.5 2.5 0 0 1-2.5-2.5v-2Zm2.5-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1ZM7 13a2.5 2.5 0 0 0-2.5 2.5v2A2.5 2.5 0 0 0 7 20h2a2.5 2.5 0 0 0 2.5-2.5v-2A2.5 2.5 0 0 0 9 13H7Zm2 1.5H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Z\" fill=\"#fff\"/><path d=\"M13.5 15.5c0-.465 0-.697.038-.89a2 2 0 0 1 1.572-1.572C15.303 13 15.535 13 16 13v2.5h-2.5ZM18 13c.465 0 .697 0 .89.038a2 2 0 0 1 1.572 1.572c.038.193.038.425.038.89H18V13ZM18 17.5h2.5c0 .465 0 .697-.038.89a2 2 0 0 1-1.572 1.572C18.697 20 18.465 20 18 20v-2.5ZM13.5 17.5H16V20c-.465 0-.697 0-.89-.038a2 2 0 0 1-1.572-1.572c-.038-.193-.038-.425-.038-.89Z\" fill=\"#fff\"/></svg>`,\n    SCAN_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" fill=\"none\"><path fill=\"#fff\" d=\"M10 15.216c0 .422.347.763.768.74 1.202-.064 2.025-.222 2.71-.613a5.001 5.001 0 0 0 1.865-1.866c.39-.684.549-1.507.613-2.709a.735.735 0 0 0-.74-.768.768.768 0 0 0-.76.732c-.009.157-.02.306-.032.447-.073.812-.206 1.244-.384 1.555-.31.545-.761.996-1.306 1.306-.311.178-.743.311-1.555.384-.141.013-.29.023-.447.032a.768.768 0 0 0-.732.76ZM10 .784c0 .407.325.737.732.76.157.009.306.02.447.032.812.073 1.244.206 1.555.384a3.5 3.5 0 0 1 1.306 1.306c.178.311.311.743.384 1.555.013.142.023.29.032.447a.768.768 0 0 0 .76.732.734.734 0 0 0 .74-.768c-.064-1.202-.222-2.025-.613-2.71A5 5 0 0 0 13.477.658c-.684-.39-1.507-.549-2.709-.613a.735.735 0 0 0-.768.74ZM5.232.044A.735.735 0 0 1 6 .784a.768.768 0 0 1-.732.76c-.157.009-.305.02-.447.032-.812.073-1.244.206-1.555.384A3.5 3.5 0 0 0 1.96 3.266c-.178.311-.311.743-.384 1.555-.013.142-.023.29-.032.447A.768.768 0 0 1 .784 6a.735.735 0 0 1-.74-.768c.064-1.202.222-2.025.613-2.71A5 5 0 0 1 2.523.658C3.207.267 4.03.108 5.233.044ZM5.268 14.456a.768.768 0 0 1 .732.76.734.734 0 0 1-.768.74c-1.202-.064-2.025-.222-2.71-.613a5 5 0 0 1-1.865-1.866c-.39-.684-.549-1.507-.613-2.709A.735.735 0 0 1 .784 10c.407 0 .737.325.76.732.009.157.02.306.032.447.073.812.206 1.244.384 1.555a3.5 3.5 0 0 0 1.306 1.306c.311.178.743.311 1.555.384.142.013.29.023.447.032Z\"/></svg>`,\n    CHECKMARK_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.155.132a.75.75 0 0 1 .232 1.035L5.821 11.535a1 1 0 0 1-1.626.09L.665 7.21a.75.75 0 1 1 1.17-.937L4.71 9.867a.25.25 0 0 0 .406-.023L11.12.364a.75.75 0 0 1 1.035-.232Z\" fill=\"#fff\"/></svg>`,\n    SEARCH_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"20\" height=\"21\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.432 13.992c-.354-.353-.91-.382-1.35-.146a5.5 5.5 0 1 1 2.265-2.265c-.237.441-.208.997.145 1.35l3.296 3.296a.75.75 0 1 1-1.06 1.061l-3.296-3.296Zm.06-5a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z\" fill=\"#949E9E\"/></svg>`,\n    WALLET_PLACEHOLDER: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#q)\"><path id=\"wallet-placeholder-fill\" fill=\"#fff\" d=\"M0 24.9c0-9.251 0-13.877 1.97-17.332a15 15 0 0 1 5.598-5.597C11.023 0 15.648 0 24.9 0h10.2c9.252 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.023 60 15.648 60 24.9v10.2c0 9.252 0 13.877-1.97 17.332a15.001 15.001 0 0 1-5.598 5.597C48.977 60 44.352 60 35.1 60H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.352 0 35.1V24.9Z\"/><path id=\"wallet-placeholder-dash\" stroke=\"#000\" stroke-dasharray=\"4 4\" stroke-width=\"1.5\" d=\"M.04 41.708a231.598 231.598 0 0 1-.039-4.403l.75-.001L.75 35.1v-2.55H0v-5.1h.75V24.9l.001-2.204h-.75c.003-1.617.011-3.077.039-4.404l.75.016c.034-1.65.099-3.08.218-4.343l-.746-.07c.158-1.678.412-3.083.82-4.316l.713.236c.224-.679.497-1.296.827-1.875a14.25 14.25 0 0 1 1.05-1.585L3.076 5.9A15 15 0 0 1 5.9 3.076l.455.596a14.25 14.25 0 0 1 1.585-1.05c.579-.33 1.196-.603 1.875-.827l-.236-.712C10.812.674 12.217.42 13.895.262l.07.746C15.23.89 16.66.824 18.308.79l-.016-.75C19.62.012 21.08.004 22.695.001l.001.75L24.9.75h2.55V0h5.1v.75h2.55l2.204.001v-.75c1.617.003 3.077.011 4.404.039l-.016.75c1.65.034 3.08.099 4.343.218l.07-.746c1.678.158 3.083.412 4.316.82l-.236.713c.679.224 1.296.497 1.875.827a14.24 14.24 0 0 1 1.585 1.05l.455-.596A14.999 14.999 0 0 1 56.924 5.9l-.596.455c.384.502.735 1.032 1.05 1.585.33.579.602 1.196.827 1.875l.712-.236c.409 1.233.663 2.638.822 4.316l-.747.07c.119 1.264.184 2.694.218 4.343l.75-.016c.028 1.327.036 2.787.039 4.403l-.75.001.001 2.204v2.55H60v5.1h-.75v2.55l-.001 2.204h.75a231.431 231.431 0 0 1-.039 4.404l-.75-.016c-.034 1.65-.099 3.08-.218 4.343l.747.07c-.159 1.678-.413 3.083-.822 4.316l-.712-.236a10.255 10.255 0 0 1-.827 1.875 14.242 14.242 0 0 1-1.05 1.585l.596.455a14.997 14.997 0 0 1-2.824 2.824l-.455-.596c-.502.384-1.032.735-1.585 1.05-.579.33-1.196.602-1.875.827l.236.712c-1.233.409-2.638.663-4.316.822l-.07-.747c-1.264.119-2.694.184-4.343.218l.016.75c-1.327.028-2.787.036-4.403.039l-.001-.75-2.204.001h-2.55V60h-5.1v-.75H24.9l-2.204-.001v.75a231.431 231.431 0 0 1-4.404-.039l.016-.75c-1.65-.034-3.08-.099-4.343-.218l-.07.747c-1.678-.159-3.083-.413-4.316-.822l.236-.712a10.258 10.258 0 0 1-1.875-.827 14.252 14.252 0 0 1-1.585-1.05l-.455.596A14.999 14.999 0 0 1 3.076 54.1l.596-.455a14.24 14.24 0 0 1-1.05-1.585 10.259 10.259 0 0 1-.827-1.875l-.712.236C.674 49.188.42 47.783.262 46.105l.746-.07C.89 44.77.824 43.34.79 41.692l-.75.016Z\"/><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M35.643 32.145c-.297-.743-.445-1.114-.401-1.275a.42.42 0 0 1 .182-.27c.134-.1.463-.1 1.123-.1.742 0 1.499.046 2.236-.05a6 6 0 0 0 5.166-5.166c.051-.39.051-.855.051-1.784 0-.928 0-1.393-.051-1.783a6 6 0 0 0-5.166-5.165c-.39-.052-.854-.052-1.783-.052h-7.72c-4.934 0-7.401 0-9.244 1.051a8 8 0 0 0-2.985 2.986C16.057 22.28 16.003 24.58 16 29 15.998 31.075 16 33.15 16 35.224A7.778 7.778 0 0 0 23.778 43H28.5c1.394 0 2.09 0 2.67-.116a6 6 0 0 0 4.715-4.714c.115-.58.115-1.301.115-2.744 0-1.31 0-1.964-.114-2.49a4.998 4.998 0 0 0-.243-.792Z\" clip-rule=\"evenodd\"/><path fill=\"#9EA9A9\" fill-rule=\"evenodd\" d=\"M37 18h-7.72c-2.494 0-4.266.002-5.647.126-1.361.122-2.197.354-2.854.728a6.5 6.5 0 0 0-2.425 2.426c-.375.657-.607 1.492-.729 2.853-.11 1.233-.123 2.777-.125 4.867 0 .7 0 1.05.097 1.181.096.13.182.181.343.2.163.02.518-.18 1.229-.581a6.195 6.195 0 0 1 3.053-.8H37c.977 0 1.32-.003 1.587-.038a4.5 4.5 0 0 0 3.874-3.874c.036-.268.039-.611.039-1.588 0-.976-.003-1.319-.038-1.587a4.5 4.5 0 0 0-3.875-3.874C38.32 18.004 37.977 18 37 18Zm-7.364 12.5h-7.414a4.722 4.722 0 0 0-4.722 4.723 6.278 6.278 0 0 0 6.278 6.278H28.5c1.466 0 1.98-.008 2.378-.087a4.5 4.5 0 0 0 3.535-3.536c.08-.397.087-.933.087-2.451 0-1.391-.009-1.843-.08-2.17a3.5 3.5 0 0 0-2.676-2.676c-.328-.072-.762-.08-2.108-.08Z\" clip-rule=\"evenodd\"/></g><defs><clipPath id=\"q\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,\n    GLOBE_ICON: lit_html__WEBPACK_IMPORTED_MODULE_4__[\"svg\"]`<svg width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M15.5 8a7.5 7.5 0 1 1-15 0 7.5 7.5 0 0 1 15 0Zm-2.113.75c.301 0 .535.264.47.558a6.01 6.01 0 0 1-2.867 3.896c-.203.116-.42-.103-.334-.32.409-1.018.691-2.274.797-3.657a.512.512 0 0 1 .507-.477h1.427Zm.47-2.058c.065.294-.169.558-.47.558H11.96a.512.512 0 0 1-.507-.477c-.106-1.383-.389-2.638-.797-3.656-.087-.217.13-.437.333-.32a6.01 6.01 0 0 1 2.868 3.895Zm-4.402.558c.286 0 .515-.24.49-.525-.121-1.361-.429-2.534-.83-3.393-.279-.6-.549-.93-.753-1.112a.535.535 0 0 0-.724 0c-.204.182-.474.513-.754 1.112-.4.859-.708 2.032-.828 3.393a.486.486 0 0 0 .49.525h2.909Zm-5.415 0c.267 0 .486-.21.507-.477.106-1.383.389-2.638.797-3.656.087-.217-.13-.437-.333-.32a6.01 6.01 0 0 0-2.868 3.895c-.065.294.169.558.47.558H4.04ZM2.143 9.308c-.065-.294.169-.558.47-.558H4.04c.267 0 .486.21.507.477.106 1.383.389 2.639.797 3.657.087.217-.13.436-.333.32a6.01 6.01 0 0 1-2.868-3.896Zm3.913-.033a.486.486 0 0 1 .49-.525h2.909c.286 0 .515.24.49.525-.121 1.361-.428 2.535-.83 3.394-.279.6-.549.93-.753 1.112a.535.535 0 0 1-.724 0c-.204-.182-.474-.513-.754-1.112-.4-.859-.708-2.033-.828-3.394Z\" clip-rule=\"evenodd\"/></svg>`\n  },\n  pt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.wcm-toolbar-placeholder{top:0;bottom:0;left:0;right:0;width:100%;position:absolute;display:block;pointer-events:none;height:100px;border-radius:calc(var(--wcm-background-border-radius) * .9);background-color:var(--wcm-background-color);background-position:center;background-size:cover}.wcm-toolbar{height:38px;display:flex;position:relative;margin:5px 15px 5px 5px;justify-content:space-between;align-items:center}.wcm-toolbar img,.wcm-toolbar svg{height:28px;object-position:left center;object-fit:contain}#wcm-wc-logo path{fill:var(--wcm-accent-fill-color)}button{width:28px;height:28px;border-radius:var(--wcm-icon-button-border-radius);border:0;display:flex;justify-content:center;align-items:center;cursor:pointer;background-color:var(--wcm-color-bg-1);box-shadow:0 0 0 1px var(--wcm-color-overlay)}button:active{background-color:var(--wcm-color-bg-2)}button svg{display:block;object-position:center}button path{fill:var(--wcm-color-fg-1)}.wcm-toolbar div{display:flex}@media(hover:hover){button:hover{background-color:var(--wcm-color-bg-2)}}`;\nvar gt = Object.defineProperty,\n  vt = Object.getOwnPropertyDescriptor,\n  ut = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? vt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && gt(o, r, t), t;\n  };\nlet fe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"wcm-toolbar-placeholder\"></div><div class=\"wcm-toolbar\">${v.WALLET_CONNECT_LOGO} <button @click=\"${_walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ModalCtrl\"].close}\">${v.CROSS_ICON}</button></div>`;\n  }\n};\nfe.styles = [h.globalCss, pt], fe = ut([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal-backcard\")], fe);\nconst bt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`main{padding:20px;padding-top:0;width:100%}`;\nvar ft = Object.defineProperty,\n  xt = Object.getOwnPropertyDescriptor,\n  yt = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? xt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && ft(o, r, t), t;\n  };\nlet xe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<main><slot></slot></main>`;\n  }\n};\nxe.styles = [h.globalCss, bt], xe = yt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal-content\")], xe);\nconst $t = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`footer{padding:10px;display:flex;flex-direction:column;align-items:inherit;justify-content:inherit;border-top:1px solid var(--wcm-color-bg-2)}`;\nvar Ct = Object.defineProperty,\n  kt = Object.getOwnPropertyDescriptor,\n  Ot = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? kt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Ct(o, r, t), t;\n  };\nlet ye = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<footer><slot></slot></footer>`;\n  }\n};\nye.styles = [h.globalCss, $t], ye = Ot([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal-footer\")], ye);\nconst Wt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`header{display:flex;justify-content:center;align-items:center;padding:20px;position:relative}.wcm-border{border-bottom:1px solid var(--wcm-color-bg-2);margin-bottom:20px}header button{padding:15px 20px}header button:active{opacity:.5}@media(hover:hover){header button:hover{opacity:.5}}.wcm-back-btn{position:absolute;left:0}.wcm-action-btn{position:absolute;right:0}path{fill:var(--wcm-accent-color)}`;\nvar It = Object.defineProperty,\n  Et = Object.getOwnPropertyDescriptor,\n  te = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Et(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && It(o, r, t), t;\n  };\nlet S = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.title = \"\", this.onAction = void 0, this.actionIcon = void 0, this.border = !1;\n  }\n  backBtnTemplate() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button class=\"wcm-back-btn\" @click=\"${_walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].goBack}\">${v.BACK_ICON}</button>`;\n  }\n  actionBtnTemplate() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button class=\"wcm-action-btn\" @click=\"${this.onAction}\">${this.actionIcon}</button>`;\n  }\n  render() {\n    const e = {\n        \"wcm-border\": this.border\n      },\n      o = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].state.history.length > 1,\n      r = this.title ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-text variant=\"big-bold\">${this.title}</wcm-text>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<slot></slot>`;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<header class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\">${o ? this.backBtnTemplate() : null} ${r} ${this.onAction ? this.actionBtnTemplate() : null}</header>`;\n  }\n};\nS.styles = [h.globalCss, Wt], te([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"title\", 2), te([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"onAction\", 2), te([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], S.prototype, \"actionIcon\", 2), te([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], S.prototype, \"border\", 2), S = te([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal-header\")], S);\nconst c = {\n    MOBILE_BREAKPOINT: 600,\n    WCM_RECENT_WALLET_DATA: \"WCM_RECENT_WALLET_DATA\",\n    EXPLORER_WALLET_URL: \"https://explorer.walletconnect.com/?type=wallet\",\n    getShadowRootElement(e, o) {\n      const r = e.renderRoot.querySelector(o);\n      if (!r) throw new Error(`${o} not found`);\n      return r;\n    },\n    getWalletIcon({\n      id: e,\n      image_id: o\n    }) {\n      const {\n        walletImages: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state;\n      return r != null && r[e] ? r[e] : o ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].getWalletImageUrl(o) : \"\";\n    },\n    getWalletName(e, o = !1) {\n      return o && e.length > 8 ? `${e.substring(0, 8)}..` : e;\n    },\n    isMobileAnimation() {\n      return window.innerWidth <= c.MOBILE_BREAKPOINT;\n    },\n    async preloadImage(e) {\n      const o = new Promise((r, a) => {\n        const t = new Image();\n        t.onload = r, t.onerror = a, t.crossOrigin = \"anonymous\", t.src = e;\n      });\n      return Promise.race([o, _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].wait(3e3)]);\n    },\n    getErrorMessage(e) {\n      return e instanceof Error ? e.message : \"Unknown Error\";\n    },\n    debounce(e, o = 500) {\n      let r;\n      return (...a) => {\n        function t() {\n          e(...a);\n        }\n        r && clearTimeout(r), r = setTimeout(t, o);\n      };\n    },\n    handleMobileLinking(e) {\n      const {\n          walletConnectUri: o\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state,\n        {\n          mobile: r,\n          name: a\n        } = e,\n        t = r === null || r === void 0 ? void 0 : r.native,\n        l = r === null || r === void 0 ? void 0 : r.universal;\n      c.setRecentWallet(e);\n      function i(s) {\n        let $ = \"\";\n        t ? $ = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].formatUniversalUrl(t, s, a) : l && ($ = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].formatNativeUrl(l, s, a)), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref($, \"_self\");\n      }\n      o && i(o);\n    },\n    handleAndroidLinking() {\n      const {\n        walletConnectUri: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state;\n      e && (_walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].setWalletConnectAndroidDeepLink(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(e, \"_self\"));\n    },\n    async handleUriCopy() {\n      const {\n        walletConnectUri: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state;\n      if (e) try {\n        await navigator.clipboard.writeText(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].openToast(\"Link copied\", \"success\");\n      } catch {\n        _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].openToast(\"Failed to copy\", \"error\");\n      }\n    },\n    getCustomImageUrls() {\n      const {\n          walletImages: e\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state,\n        o = Object.values(e !== null && e !== void 0 ? e : {});\n      return Object.values(o);\n    },\n    truncate(e, o = 8) {\n      return e.length <= o ? e : `${e.substring(0, 4)}...${e.substring(e.length - 4)}`;\n    },\n    setRecentWallet(e) {\n      try {\n        localStorage.setItem(c.WCM_RECENT_WALLET_DATA, JSON.stringify(e));\n      } catch {\n        console.info(\"Unable to set recent wallet\");\n      }\n    },\n    getRecentWallet() {\n      try {\n        const e = localStorage.getItem(c.WCM_RECENT_WALLET_DATA);\n        return e ? JSON.parse(e) : void 0;\n      } catch {\n        console.info(\"Unable to get recent wallet\");\n      }\n    },\n    caseSafeIncludes(e, o) {\n      return e.toUpperCase().includes(o.toUpperCase());\n    },\n    openWalletExplorerUrl() {\n      _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(c.EXPLORER_WALLET_URL, \"_blank\");\n    },\n    getCachedRouterWalletPlatforms() {\n      const {\n          desktop: e,\n          mobile: o\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n        r = Boolean(e === null || e === void 0 ? void 0 : e.native),\n        a = Boolean(e === null || e === void 0 ? void 0 : e.universal),\n        t = Boolean(o === null || o === void 0 ? void 0 : o.native) || Boolean(o === null || o === void 0 ? void 0 : o.universal);\n      return {\n        isDesktop: r,\n        isMobile: t,\n        isWeb: a\n      };\n    },\n    goToConnectingView(e) {\n      _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].setData({\n        Wallet: e\n      });\n      const o = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isMobile(),\n        {\n          isDesktop: r,\n          isWeb: a,\n          isMobile: t\n        } = c.getCachedRouterWalletPlatforms();\n      o ? t ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"MobileConnecting\") : a ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"WebConnecting\") : _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"InstallWallet\") : r ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"DesktopConnecting\") : a ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"WebConnecting\") : t ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"MobileQrcodeConnecting\") : _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"InstallWallet\");\n    }\n  },\n  Mt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.wcm-router{overflow:hidden;will-change:transform}.wcm-content{display:flex;flex-direction:column}`;\nvar Lt = Object.defineProperty,\n  Rt = Object.getOwnPropertyDescriptor,\n  $e = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Rt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Lt(o, r, t), t;\n  };\nlet oe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.view = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].state.view, this.prevView = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].state.view, this.unsubscribe = void 0, this.oldHeight = \"0px\", this.resizeObserver = void 0, this.unsubscribe = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].subscribe(e => {\n      this.view !== e.view && this.onChangeRoute();\n    });\n  }\n  firstUpdated() {\n    this.resizeObserver = new ResizeObserver(([e]) => {\n      const o = `${e.contentRect.height}px`;\n      this.oldHeight !== \"0px\" && Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.routerEl, {\n        height: [this.oldHeight, o]\n      }, {\n        duration: .2\n      }), this.oldHeight = o;\n    }), this.resizeObserver.observe(this.contentEl);\n  }\n  disconnectedCallback() {\n    var e, o;\n    (e = this.unsubscribe) == null || e.call(this), (o = this.resizeObserver) == null || o.disconnect();\n  }\n  get routerEl() {\n    return c.getShadowRootElement(this, \".wcm-router\");\n  }\n  get contentEl() {\n    return c.getShadowRootElement(this, \".wcm-content\");\n  }\n  viewTemplate() {\n    switch (this.view) {\n      case \"ConnectWallet\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-connect-wallet-view></wcm-connect-wallet-view>`;\n      case \"DesktopConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-desktop-connecting-view></wcm-desktop-connecting-view>`;\n      case \"MobileConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-mobile-connecting-view></wcm-mobile-connecting-view>`;\n      case \"WebConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-web-connecting-view></wcm-web-connecting-view>`;\n      case \"MobileQrcodeConnecting\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-mobile-qr-connecting-view></wcm-mobile-qr-connecting-view>`;\n      case \"WalletExplorer\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-explorer-view></wcm-wallet-explorer-view>`;\n      case \"Qrcode\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-qrcode-view></wcm-qrcode-view>`;\n      case \"InstallWallet\":\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-install-wallet-view></wcm-install-wallet-view>`;\n      default:\n        return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div>Not Found</div>`;\n    }\n  }\n  async onChangeRoute() {\n    await Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.routerEl, {\n      opacity: [1, 0],\n      scale: [1, 1.02]\n    }, {\n      duration: .15,\n      delay: .1\n    }).finished, this.view = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].state.view, Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.routerEl, {\n      opacity: [0, 1],\n      scale: [.99, 1]\n    }, {\n      duration: .37,\n      delay: .05\n    });\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"wcm-router\"><div class=\"wcm-content\">${this.viewTemplate()}</div></div>`;\n  }\n};\noe.styles = [h.globalCss, Mt], $e([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], oe.prototype, \"view\", 2), $e([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], oe.prototype, \"prevView\", 2), oe = $e([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal-router\")], oe);\nconst At = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{height:36px;width:max-content;display:flex;justify-content:center;align-items:center;padding:9px 15px 11px;position:absolute;top:12px;box-shadow:0 6px 14px -6px rgba(10,16,31,.3),0 10px 32px -4px rgba(10,16,31,.15);z-index:2;left:50%;transform:translateX(-50%);pointer-events:none;backdrop-filter:blur(20px) saturate(1.8);-webkit-backdrop-filter:blur(20px) saturate(1.8);border-radius:var(--wcm-notification-border-radius);border:1px solid var(--wcm-color-overlay);background-color:var(--wcm-color-overlay)}svg{margin-right:5px}@-moz-document url-prefix(){div{background-color:var(--wcm-color-bg-3)}}.wcm-success path{fill:var(--wcm-accent-color)}.wcm-error path{fill:var(--wcm-error-color)}`;\nvar Pt = Object.defineProperty,\n  Tt = Object.getOwnPropertyDescriptor,\n  ze = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Tt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Pt(o, r, t), t;\n  };\nlet ne = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.open = !1, this.unsubscribe = void 0, this.timeout = void 0, this.unsubscribe = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].subscribe(e => {\n      e.open ? (this.open = !0, this.timeout = setTimeout(() => _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].closeToast(), 2200)) : (this.open = !1, clearTimeout(this.timeout));\n    });\n  }\n  disconnectedCallback() {\n    var e;\n    (e = this.unsubscribe) == null || e.call(this), clearTimeout(this.timeout), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].closeToast();\n  }\n  render() {\n    const {\n        message: e,\n        variant: o\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].state,\n      r = {\n        \"wcm-success\": o === \"success\",\n        \"wcm-error\": o === \"error\"\n      };\n    return this.open ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(r)}\">${o === \"success\" ? v.CHECKMARK_ICON : null} ${o === \"error\" ? v.CROSS_ICON : null}<wcm-text variant=\"small-regular\">${e}</wcm-text></div>` : null;\n  }\n};\nne.styles = [h.globalCss, At], ze([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ne.prototype, \"open\", 2), ne = ze([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal-toast\")], ne);\nconst jt = .1,\n  Ve = 2.5,\n  A = 7;\nfunction Ce(e, o, r) {\n  return e === o ? !1 : (e - o < 0 ? o - e : e - o) <= r + jt;\n}\nfunction _t(e, o) {\n  const r = Array.prototype.slice.call(qrcode__WEBPACK_IMPORTED_MODULE_7___default.a.create(e, {\n      errorCorrectionLevel: o\n    }).modules.data, 0),\n    a = Math.sqrt(r.length);\n  return r.reduce((t, l, i) => (i % a === 0 ? t.push([l]) : t[t.length - 1].push(l)) && t, []);\n}\nconst Dt = {\n    generate(e, o, r) {\n      const a = \"#141414\",\n        t = \"#ffffff\",\n        l = [],\n        i = _t(e, \"Q\"),\n        s = o / i.length,\n        $ = [{\n          x: 0,\n          y: 0\n        }, {\n          x: 1,\n          y: 0\n        }, {\n          x: 0,\n          y: 1\n        }];\n      $.forEach(({\n        x: y,\n        y: u\n      }) => {\n        const O = (i.length - A) * s * y,\n          b = (i.length - A) * s * u,\n          E = .45;\n        for (let M = 0; M < $.length; M += 1) {\n          const V = s * (A - M * 2);\n          l.push(lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<rect fill=\"${M % 2 === 0 ? a : t}\" height=\"${V}\" rx=\"${V * E}\" ry=\"${V * E}\" width=\"${V}\" x=\"${O + s * M}\" y=\"${b + s * M}\">`);\n        }\n      });\n      const f = Math.floor((r + 25) / s),\n        Ne = i.length / 2 - f / 2,\n        Ze = i.length / 2 + f / 2 - 1,\n        Se = [];\n      i.forEach((y, u) => {\n        y.forEach((O, b) => {\n          if (i[u][b] && !(u < A && b < A || u > i.length - (A + 1) && b < A || u < A && b > i.length - (A + 1)) && !(u > Ne && u < Ze && b > Ne && b < Ze)) {\n            const E = u * s + s / 2,\n              M = b * s + s / 2;\n            Se.push([E, M]);\n          }\n        });\n      });\n      const J = {};\n      return Se.forEach(([y, u]) => {\n        J[y] ? J[y].push(u) : J[y] = [u];\n      }), Object.entries(J).map(([y, u]) => {\n        const O = u.filter(b => u.every(E => !Ce(b, E, s)));\n        return [Number(y), O];\n      }).forEach(([y, u]) => {\n        u.forEach(O => {\n          l.push(lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<circle cx=\"${y}\" cy=\"${O}\" fill=\"${a}\" r=\"${s / Ve}\">`);\n        });\n      }), Object.entries(J).filter(([y, u]) => u.length > 1).map(([y, u]) => {\n        const O = u.filter(b => u.some(E => Ce(b, E, s)));\n        return [Number(y), O];\n      }).map(([y, u]) => {\n        u.sort((b, E) => b < E ? -1 : 1);\n        const O = [];\n        for (const b of u) {\n          const E = O.find(M => M.some(V => Ce(b, V, s)));\n          E ? E.push(b) : O.push([b]);\n        }\n        return [y, O.map(b => [b[0], b[b.length - 1]])];\n      }).forEach(([y, u]) => {\n        u.forEach(([O, b]) => {\n          l.push(lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<line x1=\"${y}\" x2=\"${y}\" y1=\"${O}\" y2=\"${b}\" stroke=\"${a}\" stroke-width=\"${s / (Ve / 2)}\" stroke-linecap=\"round\">`);\n        });\n      }), l;\n    }\n  },\n  Nt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}div{position:relative;user-select:none;display:block;overflow:hidden;aspect-ratio:1/1;animation:fadeIn ease .2s}.wcm-dark{background-color:#fff;border-radius:var(--wcm-container-border-radius);padding:18px;box-shadow:0 2px 5px #000}svg:first-child,wcm-wallet-image{position:absolute;top:50%;left:50%;transform:translateY(-50%) translateX(-50%)}wcm-wallet-image{transform:translateY(-50%) translateX(-50%)}wcm-wallet-image{width:25%;height:25%;border-radius:var(--wcm-wallet-icon-border-radius)}svg:first-child{transform:translateY(-50%) translateX(-50%) scale(.9)}svg:first-child path:first-child{fill:var(--wcm-accent-color)}svg:first-child path:last-child{stroke:var(--wcm-color-overlay)}`;\nvar Zt = Object.defineProperty,\n  St = Object.getOwnPropertyDescriptor,\n  q = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? St(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Zt(o, r, t), t;\n  };\nlet j = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.uri = \"\", this.size = 0, this.imageId = void 0, this.walletId = void 0, this.imageUrl = void 0;\n  }\n  svgTemplate() {\n    const e = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ThemeCtrl\"].state.themeMode === \"light\" ? this.size : this.size - 36;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"svg\"]`<svg height=\"${e}\" width=\"${e}\">${Dt.generate(this.uri, e, e / 4)}</svg>`;\n  }\n  render() {\n    const e = {\n      \"wcm-dark\": _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ThemeCtrl\"].state.themeMode === \"dark\"\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div style=\"${`width: ${this.size}px`}\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\">${this.walletId || this.imageUrl ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-image walletId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.walletId)}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.imageId)}\" imageUrl=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.imageUrl)}\"></wcm-wallet-image>` : v.WALLET_CONNECT_ICON_COLORED} ${this.svgTemplate()}</div>`;\n  }\n};\nj.styles = [h.globalCss, Nt], q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], j.prototype, \"uri\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Number\n})], j.prototype, \"size\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], j.prototype, \"imageId\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], j.prototype, \"walletId\", 2), q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], j.prototype, \"imageUrl\", 2), j = q([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-qrcode\")], j);\nconst Bt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{position:relative;height:28px;width:80%}input{width:100%;height:100%;line-height:28px!important;border-radius:var(--wcm-input-border-radius);font-style:normal;font-family:-apple-system,system-ui,BlinkMacSystemFont,'Segoe UI',Roboto,Ubuntu,'Helvetica Neue',sans-serif;font-feature-settings:'case' on;font-weight:500;font-size:16px;letter-spacing:-.03em;padding:0 10px 0 34px;transition:.2s all ease;color:var(--wcm-color-fg-1);background-color:var(--wcm-color-bg-3);box-shadow:inset 0 0 0 1px var(--wcm-color-overlay);caret-color:var(--wcm-accent-color)}input::placeholder{color:var(--wcm-color-fg-2)}svg{left:10px;top:4px;pointer-events:none;position:absolute;width:20px;height:20px}input:focus-within{box-shadow:inset 0 0 0 1px var(--wcm-accent-color)}path{fill:var(--wcm-color-fg-2)}`;\nvar Ut = Object.defineProperty,\n  Ht = Object.getOwnPropertyDescriptor,\n  Fe = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Ht(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Ut(o, r, t), t;\n  };\nlet ce = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.onChange = () => null;\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<input type=\"text\" @input=\"${this.onChange}\" placeholder=\"Search wallets\"> ${v.SEARCH_ICON}`;\n  }\n};\nce.styles = [h.globalCss, Bt], Fe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], ce.prototype, \"onChange\", 2), ce = Fe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-search-input\")], ce);\nconst zt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes rotate{100%{transform:rotate(360deg)}}@keyframes dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}100%{stroke-dasharray:90,150;stroke-dashoffset:-124}}svg{animation:rotate 2s linear infinite;display:flex;justify-content:center;align-items:center}svg circle{stroke-linecap:round;animation:dash 1.5s ease infinite;stroke:var(--wcm-accent-color)}`;\nvar Vt = Object.defineProperty,\n  Ft = Object.getOwnPropertyDescriptor,\n  qt = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Ft(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Vt(o, r, t), t;\n  };\nlet ke = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<svg viewBox=\"0 0 50 50\" width=\"24\" height=\"24\"><circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"4\" stroke=\"#fff\"/></svg>`;\n  }\n};\nke.styles = [h.globalCss, zt], ke = qt([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-spinner\")], ke);\nconst Qt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`span{font-style:normal;font-family:var(--wcm-font-family);font-feature-settings:var(--wcm-font-feature-settings)}.wcm-xsmall-bold{font-family:var(--wcm-text-xsmall-bold-font-family);font-weight:var(--wcm-text-xsmall-bold-weight);font-size:var(--wcm-text-xsmall-bold-size);line-height:var(--wcm-text-xsmall-bold-line-height);letter-spacing:var(--wcm-text-xsmall-bold-letter-spacing);text-transform:var(--wcm-text-xsmall-bold-text-transform)}.wcm-xsmall-regular{font-family:var(--wcm-text-xsmall-regular-font-family);font-weight:var(--wcm-text-xsmall-regular-weight);font-size:var(--wcm-text-xsmall-regular-size);line-height:var(--wcm-text-xsmall-regular-line-height);letter-spacing:var(--wcm-text-xsmall-regular-letter-spacing);text-transform:var(--wcm-text-xsmall-regular-text-transform)}.wcm-small-thin{font-family:var(--wcm-text-small-thin-font-family);font-weight:var(--wcm-text-small-thin-weight);font-size:var(--wcm-text-small-thin-size);line-height:var(--wcm-text-small-thin-line-height);letter-spacing:var(--wcm-text-small-thin-letter-spacing);text-transform:var(--wcm-text-small-thin-text-transform)}.wcm-small-regular{font-family:var(--wcm-text-small-regular-font-family);font-weight:var(--wcm-text-small-regular-weight);font-size:var(--wcm-text-small-regular-size);line-height:var(--wcm-text-small-regular-line-height);letter-spacing:var(--wcm-text-small-regular-letter-spacing);text-transform:var(--wcm-text-small-regular-text-transform)}.wcm-medium-regular{font-family:var(--wcm-text-medium-regular-font-family);font-weight:var(--wcm-text-medium-regular-weight);font-size:var(--wcm-text-medium-regular-size);line-height:var(--wcm-text-medium-regular-line-height);letter-spacing:var(--wcm-text-medium-regular-letter-spacing);text-transform:var(--wcm-text-medium-regular-text-transform)}.wcm-big-bold{font-family:var(--wcm-text-big-bold-font-family);font-weight:var(--wcm-text-big-bold-weight);font-size:var(--wcm-text-big-bold-size);line-height:var(--wcm-text-big-bold-line-height);letter-spacing:var(--wcm-text-big-bold-letter-spacing);text-transform:var(--wcm-text-big-bold-text-transform)}:host(*){color:var(--wcm-color-fg-1)}.wcm-color-primary{color:var(--wcm-color-fg-1)}.wcm-color-secondary{color:var(--wcm-color-fg-2)}.wcm-color-tertiary{color:var(--wcm-color-fg-3)}.wcm-color-inverse{color:var(--wcm-accent-fill-color)}.wcm-color-accnt{color:var(--wcm-accent-color)}.wcm-color-error{color:var(--wcm-error-color)}`;\nvar Kt = Object.defineProperty,\n  Yt = Object.getOwnPropertyDescriptor,\n  Oe = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Yt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Kt(o, r, t), t;\n  };\nlet re = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.variant = \"medium-regular\", this.color = \"primary\";\n  }\n  render() {\n    const e = {\n      \"wcm-big-bold\": this.variant === \"big-bold\",\n      \"wcm-medium-regular\": this.variant === \"medium-regular\",\n      \"wcm-small-regular\": this.variant === \"small-regular\",\n      \"wcm-small-thin\": this.variant === \"small-thin\",\n      \"wcm-xsmall-regular\": this.variant === \"xsmall-regular\",\n      \"wcm-xsmall-bold\": this.variant === \"xsmall-bold\",\n      \"wcm-color-primary\": this.color === \"primary\",\n      \"wcm-color-secondary\": this.color === \"secondary\",\n      \"wcm-color-tertiary\": this.color === \"tertiary\",\n      \"wcm-color-inverse\": this.color === \"inverse\",\n      \"wcm-color-accnt\": this.color === \"accent\",\n      \"wcm-color-error\": this.color === \"error\"\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<span><slot class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\"></slot></span>`;\n  }\n};\nre.styles = [h.globalCss, Qt], Oe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], re.prototype, \"variant\", 2), Oe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], re.prototype, \"color\", 2), re = Oe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-text\")], re);\nconst Gt = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{width:100%;height:100%;border-radius:var(--wcm-button-hover-highlight-border-radius);display:flex;align-items:flex-start}button:active{background-color:var(--wcm-color-overlay)}@media(hover:hover){button:hover{background-color:var(--wcm-color-overlay)}}button>div{width:80px;padding:5px 0;display:flex;flex-direction:column;align-items:center}wcm-text{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center}wcm-wallet-image{height:60px;width:60px;transition:all .2s ease;border-radius:var(--wcm-wallet-icon-border-radius);margin-bottom:5px}.wcm-sublabel{margin-top:2px}`;\nvar Xt = Object.defineProperty,\n  Jt = Object.getOwnPropertyDescriptor,\n  _ = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Jt(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Xt(o, r, t), t;\n  };\nlet L = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.onClick = () => null, this.name = \"\", this.walletId = \"\", this.label = void 0, this.imageId = void 0, this.installed = !1, this.recent = !1;\n  }\n  sublabelTemplate() {\n    return this.recent ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-text class=\"wcm-sublabel\" variant=\"xsmall-bold\" color=\"tertiary\">RECENT</wcm-text>` : this.installed ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-text class=\"wcm-sublabel\" variant=\"xsmall-bold\" color=\"tertiary\">INSTALLED</wcm-text>` : null;\n  }\n  handleClick() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"EventsCtrl\"].click({\n      name: \"WALLET_BUTTON\",\n      walletId: this.walletId\n    }), this.onClick();\n  }\n  render() {\n    var e;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button @click=\"${this.handleClick.bind(this)}\"><div><wcm-wallet-image walletId=\"${this.walletId}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.imageId)}\"></wcm-wallet-image><wcm-text variant=\"xsmall-regular\">${(e = this.label) != null ? e : c.getWalletName(this.name, !0)}</wcm-text>${this.sublabelTemplate()}</div></button>`;\n  }\n};\nL.styles = [h.globalCss, Gt], _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], L.prototype, \"onClick\", 2), _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], L.prototype, \"name\", 2), _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], L.prototype, \"walletId\", 2), _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], L.prototype, \"label\", 2), _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], L.prototype, \"imageId\", 2), _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], L.prototype, \"installed\", 2), _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], L.prototype, \"recent\", 2), L = _([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-wallet-button\")], L);\nconst eo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{display:block}div{overflow:hidden;position:relative;border-radius:inherit;width:100%;height:100%;background-color:var(--wcm-color-overlay)}svg{position:relative;width:100%;height:100%}div::after{content:'';position:absolute;top:0;bottom:0;left:0;right:0;border-radius:inherit;border:1px solid var(--wcm-color-overlay)}div img{width:100%;height:100%;object-fit:cover;object-position:center}#wallet-placeholder-fill{fill:var(--wcm-color-bg-3)}#wallet-placeholder-dash{stroke:var(--wcm-color-overlay)}`;\nvar to = Object.defineProperty,\n  oo = Object.getOwnPropertyDescriptor,\n  se = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? oo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && to(o, r, t), t;\n  };\nlet Q = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.walletId = \"\", this.imageId = void 0, this.imageUrl = void 0;\n  }\n  render() {\n    var e;\n    const o = (e = this.imageUrl) != null && e.length ? this.imageUrl : c.getWalletIcon({\n      id: this.walletId,\n      image_id: this.imageId\n    });\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${o.length ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><img crossorigin=\"anonymous\" src=\"${o}\" alt=\"${this.id}\"></div>` : v.WALLET_PLACEHOLDER}`;\n  }\n};\nQ.styles = [h.globalCss, eo], se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"walletId\", 2), se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"imageId\", 2), se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Q.prototype, \"imageUrl\", 2), Q = se([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-wallet-image\")], Q);\nvar ro = Object.defineProperty,\n  ao = Object.getOwnPropertyDescriptor,\n  qe = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? ao(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && ro(o, r, t), t;\n  };\nlet We = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.preload = !0, this.preloadData();\n  }\n  async loadImages(e) {\n    try {\n      e != null && e.length && (await Promise.all(e.map(async o => c.preloadImage(o))));\n    } catch {\n      console.info(\"Unsuccessful attempt at preloading some images\", e);\n    }\n  }\n  async preloadListings() {\n    if (_walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state.enableExplorer) {\n      await _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].getRecomendedWallets(), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].setIsDataLoaded(!0);\n      const {\n          recomendedWallets: e\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state,\n        o = e.map(r => c.getWalletIcon(r));\n      await this.loadImages(o);\n    } else _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].setIsDataLoaded(!0);\n  }\n  async preloadCustomImages() {\n    const e = c.getCustomImageUrls();\n    await this.loadImages(e);\n  }\n  async preloadData() {\n    try {\n      this.preload && (this.preload = !1, await Promise.all([this.preloadListings(), this.preloadCustomImages()]));\n    } catch (e) {\n      console.error(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].openToast(\"Failed preloading\", \"error\");\n    }\n  }\n};\nqe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], We.prototype, \"preload\", 2), We = qe([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-explorer-context\")], We);\nvar lo = Object.defineProperty,\n  io = Object.getOwnPropertyDescriptor,\n  no = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? io(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && lo(o, r, t), t;\n  };\nlet Qe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.unsubscribeTheme = void 0, h.setTheme(), this.unsubscribeTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ThemeCtrl\"].subscribe(h.setTheme);\n  }\n  disconnectedCallback() {\n    var e;\n    (e = this.unsubscribeTheme) == null || e.call(this);\n  }\n};\nQe = no([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-theme-context\")], Qe);\nconst co = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes scroll{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(calc(-70px * 9),0,0)}}.wcm-slider{position:relative;overflow-x:hidden;padding:10px 0;margin:0 -20px;width:calc(100% + 40px)}.wcm-track{display:flex;width:calc(70px * 18);animation:scroll 20s linear infinite;opacity:.7}.wcm-track svg{margin:0 5px}wcm-wallet-image{width:60px;height:60px;margin:0 5px;border-radius:var(--wcm-wallet-icon-border-radius)}.wcm-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between}.wcm-title{display:flex;align-items:center;margin-bottom:10px}.wcm-title svg{margin-right:6px}.wcm-title path{fill:var(--wcm-accent-color)}wcm-modal-footer .wcm-title{padding:0 10px}wcm-button-big{position:absolute;top:50%;left:50%;transform:translateY(-50%) translateX(-50%);filter:drop-shadow(0 0 17px var(--wcm-color-bg-1))}wcm-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}wcm-info-footer wcm-text{text-align:center;margin-bottom:15px}#wallet-placeholder-fill{fill:var(--wcm-color-bg-3)}#wallet-placeholder-dash{stroke:var(--wcm-color-overlay)}`;\nvar so = Object.defineProperty,\n  mo = Object.getOwnPropertyDescriptor,\n  ho = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? mo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && so(o, r, t), t;\n  };\nlet Ie = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onGoToQrcode() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"Qrcode\");\n  }\n  render() {\n    const {\n        recomendedWallets: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state,\n      o = [...e, ...e],\n      r = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].RECOMMENDED_WALLET_AMOUNT * 2;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"Connect your wallet\" .onAction=\"${this.onGoToQrcode}\" .actionIcon=\"${v.QRCODE_ICON}\"></wcm-modal-header><wcm-modal-content><div class=\"wcm-title\">${v.MOBILE_ICON}<wcm-text variant=\"small-regular\" color=\"accent\">WalletConnect</wcm-text></div><div class=\"wcm-slider\"><div class=\"wcm-track\">${[...Array(r)].map((a, t) => {\n      const l = o[t % o.length];\n      return l ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-image walletId=\"${l.id}\" imageId=\"${l.image_id}\"></wcm-wallet-image>` : v.WALLET_PLACEHOLDER;\n    })}</div><wcm-button-big @click=\"${c.handleAndroidLinking}\"><wcm-text variant=\"medium-regular\" color=\"inverse\">Select Wallet</wcm-text></wcm-button-big></div></wcm-modal-content><wcm-info-footer><wcm-text color=\"secondary\" variant=\"small-thin\">Choose WalletConnect to see supported apps on your device</wcm-text></wcm-info-footer>`;\n  }\n};\nIe.styles = [h.globalCss, co], Ie = ho([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-android-wallet-selection\")], Ie);\nconst wo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`@keyframes loading{to{stroke-dashoffset:0}}@keyframes shake{10%,90%{transform:translate3d(-1px,0,0)}20%,80%{transform:translate3d(1px,0,0)}30%,50%,70%{transform:translate3d(-2px,0,0)}40%,60%{transform:translate3d(2px,0,0)}}:host{display:flex;flex-direction:column;align-items:center}div{position:relative;width:110px;height:110px;display:flex;justify-content:center;align-items:center;margin:40px 0 20px 0;transform:translate3d(0,0,0)}svg{position:absolute;width:110px;height:110px;fill:none;stroke:transparent;stroke-linecap:round;stroke-width:2px;top:0;left:0}use{stroke:var(--wcm-accent-color);animation:loading 1s linear infinite}wcm-wallet-image{border-radius:var(--wcm-wallet-icon-large-border-radius);width:90px;height:90px}wcm-text{margin-bottom:40px}.wcm-error svg{stroke:var(--wcm-error-color)}.wcm-error use{display:none}.wcm-error{animation:shake .4s cubic-bezier(.36,.07,.19,.97) both}.wcm-stale svg,.wcm-stale use{display:none}`;\nvar po = Object.defineProperty,\n  go = Object.getOwnPropertyDescriptor,\n  K = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? go(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && po(o, r, t), t;\n  };\nlet D = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.walletId = void 0, this.imageId = void 0, this.isError = !1, this.isStale = !1, this.label = \"\";\n  }\n  svgLoaderTemplate() {\n    var e, o;\n    const r = (o = (e = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ThemeCtrl\"].state.themeVariables) == null ? void 0 : e[\"--wcm-wallet-icon-large-border-radius\"]) != null ? o : h.getPreset(\"--wcm-wallet-icon-large-border-radius\");\n    let a = 0;\n    r.includes(\"%\") ? a = 88 / 100 * parseInt(r, 10) : a = parseInt(r, 10), a *= 1.17;\n    const t = 317 - a * 1.57,\n      l = 425 - a * 1.8;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<svg viewBox=\"0 0 110 110\" width=\"110\" height=\"110\"><rect id=\"wcm-loader\" x=\"2\" y=\"2\" width=\"106\" height=\"106\" rx=\"${a}\"/><use xlink:href=\"#wcm-loader\" stroke-dasharray=\"106 ${t}\" stroke-dashoffset=\"${l}\"></use></svg>`;\n  }\n  render() {\n    const e = {\n      \"wcm-error\": this.isError,\n      \"wcm-stale\": this.isStale\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\">${this.svgLoaderTemplate()}<wcm-wallet-image walletId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.walletId)}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.imageId)}\"></wcm-wallet-image></div><wcm-text variant=\"medium-regular\" color=\"${this.isError ? \"error\" : \"primary\"}\">${this.isError ? \"Connection declined\" : this.label}</wcm-text>`;\n  }\n};\nD.styles = [h.globalCss, wo], K([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], D.prototype, \"walletId\", 2), K([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], D.prototype, \"imageId\", 2), K([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], D.prototype, \"isError\", 2), K([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], D.prototype, \"isStale\", 2), K([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], D.prototype, \"label\", 2), D = K([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-connector-waiting\")], D);\nconst G = {\n    manualWallets() {\n      var e, o;\n      const {\n          mobileWallets: r,\n          desktopWallets: a\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state,\n        t = (e = G.recentWallet()) == null ? void 0 : e.id,\n        l = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isMobile() ? r : a,\n        i = l === null || l === void 0 ? void 0 : l.filter(s => t !== s.id);\n      return (o = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isMobile() ? i === null || i === void 0 ? void 0 : i.map(({\n        id: s,\n        name: $,\n        links: f\n      }) => ({\n        id: s,\n        name: $,\n        mobile: f,\n        links: f\n      })) : i === null || i === void 0 ? void 0 : i.map(({\n        id: s,\n        name: $,\n        links: f\n      }) => ({\n        id: s,\n        name: $,\n        desktop: f,\n        links: f\n      }))) != null ? o : [];\n    },\n    recentWallet() {\n      return c.getRecentWallet();\n    },\n    recomendedWallets(e = !1) {\n      var o;\n      const r = e || (o = G.recentWallet()) == null ? void 0 : o.id,\n        {\n          recomendedWallets: a\n        } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state;\n      return a.filter(t => r !== t.id);\n    }\n  },\n  Z = {\n    onConnecting(e) {\n      c.goToConnectingView(e);\n    },\n    manualWalletsTemplate() {\n      return G.manualWallets().map(e => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-button walletId=\"${e.id}\" name=\"${e.name}\" .onClick=\"${() => this.onConnecting(e)}\"></wcm-wallet-button>`);\n    },\n    recomendedWalletsTemplate(e = !1) {\n      return G.recomendedWallets(e).map(o => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-button name=\"${o.name}\" walletId=\"${o.id}\" imageId=\"${o.image_id}\" .onClick=\"${() => this.onConnecting(o)}\"></wcm-wallet-button>`);\n    },\n    recentWalletTemplate() {\n      const e = G.recentWallet();\n      if (e) return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-button name=\"${e.name}\" walletId=\"${e.id}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(e.image_id)}\" .recent=\"${!0}\" .onClick=\"${() => this.onConnecting(e)}\"></wcm-wallet-button>`;\n    }\n  },\n  vo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.wcm-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between}.wcm-desktop-title,.wcm-mobile-title{display:flex;align-items:center}.wcm-mobile-title{justify-content:space-between;margin-bottom:20px;margin-top:-10px}.wcm-desktop-title{margin-bottom:10px;padding:0 10px}.wcm-subtitle{display:flex;align-items:center}.wcm-subtitle:last-child path{fill:var(--wcm-color-fg-3)}.wcm-desktop-title svg,.wcm-mobile-title svg{margin-right:6px}.wcm-desktop-title path,.wcm-mobile-title path{fill:var(--wcm-accent-color)}`;\nvar uo = Object.defineProperty,\n  bo = Object.getOwnPropertyDescriptor,\n  fo = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? bo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && uo(o, r, t), t;\n  };\nlet Ee = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    const {\n        explorerExcludedWalletIds: e,\n        enableExplorer: o\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state,\n      r = e !== \"ALL\" && o,\n      a = Z.manualWalletsTemplate(),\n      t = Z.recomendedWalletsTemplate();\n    let l = [Z.recentWalletTemplate(), ...a, ...t];\n    l = l.filter(Boolean);\n    const i = l.length > 4 || r;\n    let s = [];\n    i ? s = l.slice(0, 3) : s = l;\n    const $ = Boolean(s.length);\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header .border=\"${!0}\" title=\"Connect your wallet\" .onAction=\"${c.handleUriCopy}\" .actionIcon=\"${v.COPY_ICON}\"></wcm-modal-header><wcm-modal-content><div class=\"wcm-mobile-title\"><div class=\"wcm-subtitle\">${v.MOBILE_ICON}<wcm-text variant=\"small-regular\" color=\"accent\">Mobile</wcm-text></div><div class=\"wcm-subtitle\">${v.SCAN_ICON}<wcm-text variant=\"small-regular\" color=\"secondary\">Scan with your wallet</wcm-text></div></div><wcm-walletconnect-qr></wcm-walletconnect-qr></wcm-modal-content>${$ ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-footer><div class=\"wcm-desktop-title\">${v.DESKTOP_ICON}<wcm-text variant=\"small-regular\" color=\"accent\">Desktop</wcm-text></div><div class=\"wcm-grid\">${s} ${i ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-view-all-wallets-button></wcm-view-all-wallets-button>` : null}</div></wcm-modal-footer>` : null}`;\n  }\n};\nEe.styles = [h.globalCss, vo], Ee = fo([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-desktop-wallet-selection\")], Ee);\nconst xo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{background-color:var(--wcm-color-bg-2);padding:10px 20px 15px 20px;border-top:1px solid var(--wcm-color-bg-3);text-align:center}a{color:var(--wcm-accent-color);text-decoration:none;transition:opacity .2s ease-in-out;display:inline}a:active{opacity:.8}@media(hover:hover){a:hover{opacity:.8}}`;\nvar yo = Object.defineProperty,\n  $o = Object.getOwnPropertyDescriptor,\n  Co = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? $o(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && yo(o, r, t), t;\n  };\nlet Me = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    const {\n      termsOfServiceUrl: e,\n      privacyPolicyUrl: o\n    } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state;\n    return (e !== null && e !== void 0 ? e : o) ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div><wcm-text variant=\"small-regular\" color=\"secondary\">By connecting your wallet to this app, you agree to the app's ${e ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<a href=\"${e}\" target=\"_blank\" rel=\"noopener noreferrer\">Terms of Service</a>` : null} ${e && o ? \"and\" : null} ${o ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<a href=\"${o}\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>` : null}</wcm-text></div>` : null;\n  }\n};\nMe.styles = [h.globalCss, xo], Me = Co([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-legal-notice\")], Me);\nconst ko = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{display:grid;grid-template-columns:repeat(4,80px);margin:0 -10px;justify-content:space-between;row-gap:10px}`;\nvar Oo = Object.defineProperty,\n  Wo = Object.getOwnPropertyDescriptor,\n  Io = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Wo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Oo(o, r, t), t;\n  };\nlet Le = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onQrcode() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"Qrcode\");\n  }\n  render() {\n    const {\n        explorerExcludedWalletIds: e,\n        enableExplorer: o\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ConfigCtrl\"].state,\n      r = e !== \"ALL\" && o,\n      a = Z.manualWalletsTemplate(),\n      t = Z.recomendedWalletsTemplate();\n    let l = [Z.recentWalletTemplate(), ...a, ...t];\n    l = l.filter(Boolean);\n    const i = l.length > 8 || r;\n    let s = [];\n    i ? s = l.slice(0, 7) : s = l;\n    const $ = Boolean(s.length);\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"Connect your wallet\" .onAction=\"${this.onQrcode}\" .actionIcon=\"${v.QRCODE_ICON}\"></wcm-modal-header>${$ ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-content><div>${s} ${i ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-view-all-wallets-button></wcm-view-all-wallets-button>` : null}</div></wcm-modal-content>` : null}`;\n  }\n};\nLe.styles = [h.globalCss, ko], Le = Io([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-mobile-wallet-selection\")], Le);\nconst Eo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`:host{all:initial}.wcm-overlay{top:0;bottom:0;left:0;right:0;position:fixed;z-index:var(--wcm-z-index);overflow:hidden;display:flex;justify-content:center;align-items:center;opacity:0;pointer-events:none;background-color:var(--wcm-overlay-background-color);backdrop-filter:var(--wcm-overlay-backdrop-filter)}@media(max-height:720px) and (orientation:landscape){.wcm-overlay{overflow:scroll;align-items:flex-start;padding:20px 0}}.wcm-active{pointer-events:auto}.wcm-container{position:relative;max-width:360px;width:100%;outline:0;border-radius:var(--wcm-background-border-radius) var(--wcm-background-border-radius) var(--wcm-container-border-radius) var(--wcm-container-border-radius);border:1px solid var(--wcm-color-overlay);overflow:hidden}.wcm-card{width:100%;position:relative;border-radius:var(--wcm-container-border-radius);overflow:hidden;box-shadow:0 6px 14px -6px rgba(10,16,31,.12),0 10px 32px -4px rgba(10,16,31,.1),0 0 0 1px var(--wcm-color-overlay);background-color:var(--wcm-color-bg-1);color:var(--wcm-color-fg-1)}@media(max-width:600px){.wcm-container{max-width:440px;border-radius:var(--wcm-background-border-radius) var(--wcm-background-border-radius) 0 0}.wcm-card{border-radius:var(--wcm-container-border-radius) var(--wcm-container-border-radius) 0 0}.wcm-overlay{align-items:flex-end}}@media(max-width:440px){.wcm-container{border:0}}`;\nvar Mo = Object.defineProperty,\n  Lo = Object.getOwnPropertyDescriptor,\n  Re = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Lo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Mo(o, r, t), t;\n  };\nlet ae = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.open = !1, this.active = !1, this.unsubscribeModal = void 0, this.abortController = void 0, this.unsubscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ModalCtrl\"].subscribe(e => {\n      e.open ? this.onOpenModalEvent() : this.onCloseModalEvent();\n    });\n  }\n  disconnectedCallback() {\n    var e;\n    (e = this.unsubscribeModal) == null || e.call(this);\n  }\n  get overlayEl() {\n    return c.getShadowRootElement(this, \".wcm-overlay\");\n  }\n  get containerEl() {\n    return c.getShadowRootElement(this, \".wcm-container\");\n  }\n  toggleBodyScroll(e) {\n    if (document.querySelector(\"body\")) if (e) {\n      const o = document.getElementById(\"wcm-styles\");\n      o === null || o === void 0 ? void 0 : o.remove();\n    } else document.head.insertAdjacentHTML(\"beforeend\", '<style id=\"wcm-styles\">html,body{touch-action:none;overflow:hidden;overscroll-behavior:contain;}</style>');\n  }\n  onCloseModal(e) {\n    e.target === e.currentTarget && _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ModalCtrl\"].close();\n  }\n  onOpenModalEvent() {\n    this.toggleBodyScroll(!1), this.addKeyboardEvents(), this.open = !0, setTimeout(async () => {\n      const e = c.isMobileAnimation() ? {\n          y: [\"50vh\", \"0vh\"]\n        } : {\n          scale: [.98, 1]\n        },\n        o = .1,\n        r = .2;\n      await Promise.all([Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.overlayEl, {\n        opacity: [0, 1]\n      }, {\n        delay: o,\n        duration: r\n      }).finished, Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.containerEl, e, {\n        delay: o,\n        duration: r\n      }).finished]), this.active = !0;\n    }, 0);\n  }\n  async onCloseModalEvent() {\n    this.toggleBodyScroll(!0), this.removeKeyboardEvents();\n    const e = c.isMobileAnimation() ? {\n        y: [\"0vh\", \"50vh\"]\n      } : {\n        scale: [1, .98]\n      },\n      o = .2;\n    await Promise.all([Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.overlayEl, {\n      opacity: [1, 0]\n    }, {\n      duration: o\n    }).finished, Object(motion__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])(this.containerEl, e, {\n      duration: o\n    }).finished]), this.containerEl.removeAttribute(\"style\"), this.active = !1, this.open = !1;\n  }\n  addKeyboardEvents() {\n    this.abortController = new AbortController(), window.addEventListener(\"keydown\", e => {\n      var o;\n      e.key === \"Escape\" ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ModalCtrl\"].close() : e.key === \"Tab\" && ((o = e.target) != null && o.tagName.includes(\"wcm-\") || this.containerEl.focus());\n    }, this.abortController), this.containerEl.focus();\n  }\n  removeKeyboardEvents() {\n    var e;\n    (e = this.abortController) == null || e.abort(), this.abortController = void 0;\n  }\n  render() {\n    const e = {\n      \"wcm-overlay\": !0,\n      \"wcm-active\": this.active\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-explorer-context></wcm-explorer-context><wcm-theme-context></wcm-theme-context><div id=\"wcm-modal\" class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])(e)}\" @click=\"${this.onCloseModal}\" role=\"alertdialog\" aria-modal=\"true\"><div class=\"wcm-container\" tabindex=\"0\">${this.open ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-backcard></wcm-modal-backcard><div class=\"wcm-card\"><wcm-modal-router></wcm-modal-router><wcm-modal-toast></wcm-modal-toast></div>` : null}</div></div>`;\n  }\n};\nae.styles = [h.globalCss, Eo], Re([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ae.prototype, \"open\", 2), Re([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], ae.prototype, \"active\", 2), ae = Re([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-modal\")], ae);\nconst Ro = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`div{display:flex;margin-top:15px}slot{display:inline-block;margin:0 5px}wcm-button{margin:0 5px}`;\nvar Ao = Object.defineProperty,\n  Po = Object.getOwnPropertyDescriptor,\n  le = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Po(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Ao(o, r, t), t;\n  };\nlet B = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.isMobile = !1, this.isDesktop = !1, this.isWeb = !1, this.isRetry = !1;\n  }\n  onMobile() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isMobile() ? _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].replace(\"MobileConnecting\") : _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].replace(\"MobileQrcodeConnecting\");\n  }\n  onDesktop() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].replace(\"DesktopConnecting\");\n  }\n  onWeb() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].replace(\"WebConnecting\");\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div>${this.isRetry ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<slot></slot>` : null} ${this.isMobile ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-button .onClick=\"${this.onMobile}\" .iconLeft=\"${v.MOBILE_ICON}\" variant=\"outline\">Mobile</wcm-button>` : null} ${this.isDesktop ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-button .onClick=\"${this.onDesktop}\" .iconLeft=\"${v.DESKTOP_ICON}\" variant=\"outline\">Desktop</wcm-button>` : null} ${this.isWeb ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-button .onClick=\"${this.onWeb}\" .iconLeft=\"${v.GLOBE_ICON}\" variant=\"outline\">Web</wcm-button>` : null}</div>`;\n  }\n};\nB.styles = [h.globalCss, Ro], le([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], B.prototype, \"isMobile\", 2), le([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], B.prototype, \"isDesktop\", 2), le([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], B.prototype, \"isWeb\", 2), le([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])({\n  type: Boolean\n})], B.prototype, \"isRetry\", 2), B = le([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-platform-selection\")], B);\nconst To = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`button{display:flex;flex-direction:column;padding:5px 10px;border-radius:var(--wcm-button-hover-highlight-border-radius);height:100%;justify-content:flex-start}.wcm-icons{width:60px;height:60px;display:flex;flex-wrap:wrap;padding:7px;border-radius:var(--wcm-wallet-icon-border-radius);justify-content:space-between;align-items:center;margin-bottom:5px;background-color:var(--wcm-color-bg-2);box-shadow:inset 0 0 0 1px var(--wcm-color-overlay)}button:active{background-color:var(--wcm-color-overlay)}@media(hover:hover){button:hover{background-color:var(--wcm-color-overlay)}}.wcm-icons img{width:21px;height:21px;object-fit:cover;object-position:center;border-radius:calc(var(--wcm-wallet-icon-border-radius)/ 2);border:1px solid var(--wcm-color-overlay)}.wcm-icons svg{width:21px;height:21px}.wcm-icons img:nth-child(1),.wcm-icons img:nth-child(2),.wcm-icons svg:nth-child(1),.wcm-icons svg:nth-child(2){margin-bottom:4px}wcm-text{width:100%;text-align:center}#wallet-placeholder-fill{fill:var(--wcm-color-bg-3)}#wallet-placeholder-dash{stroke:var(--wcm-color-overlay)}`;\nvar jo = Object.defineProperty,\n  _o = Object.getOwnPropertyDescriptor,\n  Do = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? _o(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && jo(o, r, t), t;\n  };\nlet Ae = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onClick() {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"RouterCtrl\"].push(\"WalletExplorer\");\n  }\n  render() {\n    const {\n        recomendedWallets: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state,\n      o = G.manualWallets(),\n      r = [...e, ...o].reverse().slice(0, 4);\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<button @click=\"${this.onClick}\"><div class=\"wcm-icons\">${r.map(a => {\n      const t = c.getWalletIcon(a);\n      if (t) return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<img crossorigin=\"anonymous\" src=\"${t}\">`;\n      const l = c.getWalletIcon({\n        id: a.id\n      });\n      return l ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<img crossorigin=\"anonymous\" src=\"${l}\">` : v.WALLET_PLACEHOLDER;\n    })} ${[...Array(4 - r.length)].map(() => v.WALLET_PLACEHOLDER)}</div><wcm-text variant=\"xsmall-regular\">View All</wcm-text></button>`;\n  }\n};\nAe.styles = [h.globalCss, To], Ae = Do([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-view-all-wallets-button\")], Ae);\nconst No = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`.wcm-qr-container{width:100%;display:flex;justify-content:center;align-items:center;aspect-ratio:1/1}`;\nvar Zo = Object.defineProperty,\n  So = Object.getOwnPropertyDescriptor,\n  de = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? So(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Zo(o, r, t), t;\n  };\nlet Y = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.walletId = \"\", this.imageId = \"\", this.uri = \"\", setTimeout(() => {\n      const {\n        walletConnectUri: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state;\n      this.uri = e;\n    }, 0);\n  }\n  get overlayEl() {\n    return c.getShadowRootElement(this, \".wcm-qr-container\");\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<div class=\"wcm-qr-container\">${this.uri ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-qrcode size=\"${this.overlayEl.offsetWidth}\" uri=\"${this.uri}\" walletId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.walletId)}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(this.imageId)}\"></wcm-qrcode>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-spinner></wcm-spinner>`}</div>`;\n  }\n};\nY.styles = [h.globalCss, No], de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Y.prototype, \"walletId\", 2), de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"])()], Y.prototype, \"imageId\", 2), de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], Y.prototype, \"uri\", 2), Y = de([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-walletconnect-qr\")], Y);\nvar Bo = Object.defineProperty,\n  Uo = Object.getOwnPropertyDescriptor,\n  Ho = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Uo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Bo(o, r, t), t;\n  };\nlet Pe = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  viewTemplate() {\n    return _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isAndroid() ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-android-wallet-selection></wcm-android-wallet-selection>` : _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isMobile() ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-mobile-wallet-selection></wcm-mobile-wallet-selection>` : lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-desktop-wallet-selection></wcm-desktop-wallet-selection>`;\n  }\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${this.viewTemplate()}<wcm-legal-notice></wcm-legal-notice>`;\n  }\n};\nPe.styles = [h.globalCss], Pe = Ho([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-connect-wallet-view\")], Pe);\nconst zo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`wcm-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}wcm-text{text-align:center}`;\nvar Vo = Object.defineProperty,\n  Fo = Object.getOwnPropertyDescriptor,\n  Ke = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Fo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Vo(o, r, t), t;\n  };\nlet me = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.openDesktopApp();\n  }\n  onFormatAndRedirect(e) {\n    const {\n        desktop: o,\n        name: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      a = o === null || o === void 0 ? void 0 : o.native;\n    if (a) {\n      const t = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].formatNativeUrl(a, e, r);\n      _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(t, \"_self\");\n    }\n  }\n  openDesktopApp() {\n    const {\n        walletConnectUri: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state,\n      o = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData();\n    c.setRecentWallet(o), e && this.onFormatAndRedirect(e);\n  }\n  render() {\n    const {\n        name: e,\n        id: o,\n        image_id: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isMobile: a,\n        isWeb: t\n      } = c.getCachedRouterWalletPlatforms();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"${e}\" .onAction=\"${c.handleUriCopy}\" .actionIcon=\"${v.COPY_ICON}\"></wcm-modal-header><wcm-modal-content><wcm-connector-waiting walletId=\"${o}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(r)}\" label=\"${`Continue in ${e}...`}\" .isError=\"${this.isError}\"></wcm-connector-waiting></wcm-modal-content><wcm-info-footer><wcm-text color=\"secondary\" variant=\"small-thin\">${`Connection can continue loading if ${e} is not installed on your device`}</wcm-text><wcm-platform-selection .isMobile=\"${a}\" .isWeb=\"${t}\" .isRetry=\"${!0}\"><wcm-button .onClick=\"${this.openDesktopApp.bind(this)}\" .iconRight=\"${v.RETRY_ICON}\">Retry</wcm-button></wcm-platform-selection></wcm-info-footer>`;\n  }\n};\nme.styles = [h.globalCss, zo], Ke([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], me.prototype, \"isError\", 2), me = Ke([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-desktop-connecting-view\")], me);\nconst qo = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`wcm-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}wcm-text{text-align:center}wcm-button{margin-top:15px}`;\nvar Qo = Object.defineProperty,\n  Ko = Object.getOwnPropertyDescriptor,\n  Yo = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Ko(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Qo(o, r, t), t;\n  };\nlet Te = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  onInstall(e) {\n    e && _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(e, \"_blank\");\n  }\n  render() {\n    const {\n      name: e,\n      id: o,\n      image_id: r,\n      homepage: a\n    } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"${e}\"></wcm-modal-header><wcm-modal-content><wcm-connector-waiting walletId=\"${o}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(r)}\" label=\"Not Detected\" .isStale=\"${!0}\"></wcm-connector-waiting></wcm-modal-content><wcm-info-footer><wcm-text color=\"secondary\" variant=\"small-thin\">${`Download ${e} to continue. If multiple browser extensions are installed, disable non ${e} ones and try again`}</wcm-text><wcm-button .onClick=\"${() => this.onInstall(a)}\" .iconLeft=\"${v.ARROW_DOWN_ICON}\">Download</wcm-button></wcm-info-footer>`;\n  }\n};\nTe.styles = [h.globalCss, qo], Te = Yo([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-install-wallet-view\")], Te);\nconst Go = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`wcm-wallet-image{border-radius:var(--wcm-wallet-icon-large-border-radius);width:96px;height:96px;margin-bottom:20px}wcm-info-footer{display:flex;width:100%}.wcm-app-store{justify-content:space-between}.wcm-app-store wcm-wallet-image{margin-right:10px;margin-bottom:0;width:28px;height:28px;border-radius:var(--wcm-wallet-icon-small-border-radius)}.wcm-app-store div{display:flex;align-items:center}.wcm-app-store wcm-button{margin-right:-10px}.wcm-note{flex-direction:column;align-items:center;padding:5px 0}.wcm-note wcm-text{text-align:center}wcm-platform-selection{margin-top:-15px}.wcm-note wcm-text{margin-top:15px}.wcm-note wcm-text span{color:var(--wcm-accent-color)}`;\nvar Xo = Object.defineProperty,\n  Jo = Object.getOwnPropertyDescriptor,\n  Ye = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? Jo(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && Xo(o, r, t), t;\n  };\nlet he = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.openMobileApp();\n  }\n  onFormatAndRedirect(e, o = !1) {\n    const {\n        mobile: r,\n        name: a\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      t = r === null || r === void 0 ? void 0 : r.native,\n      l = r === null || r === void 0 ? void 0 : r.universal;\n    if (t && !o) {\n      const i = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].formatNativeUrl(t, e, a);\n      _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(i, \"_self\");\n    } else if (l) {\n      const i = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].formatUniversalUrl(l, e, a);\n      _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(i, \"_self\");\n    }\n  }\n  openMobileApp(e = !1) {\n    const {\n        walletConnectUri: o\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state,\n      r = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData();\n    c.setRecentWallet(r), o && this.onFormatAndRedirect(o, e);\n  }\n  onGoToAppStore(e) {\n    e && _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(e, \"_blank\");\n  }\n  render() {\n    const {\n        name: e,\n        id: o,\n        image_id: r,\n        app: a,\n        mobile: t\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isWeb: l\n      } = c.getCachedRouterWalletPlatforms(),\n      i = a === null || a === void 0 ? void 0 : a.ios,\n      s = t === null || t === void 0 ? void 0 : t.universal;\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"${e}\"></wcm-modal-header><wcm-modal-content><wcm-connector-waiting walletId=\"${o}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(r)}\" label=\"Tap 'Open' to continue…\" .isError=\"${this.isError}\"></wcm-connector-waiting></wcm-modal-content><wcm-info-footer class=\"wcm-note\"><wcm-platform-selection .isWeb=\"${l}\" .isRetry=\"${!0}\"><wcm-button .onClick=\"${() => this.openMobileApp(!1)}\" .iconRight=\"${v.RETRY_ICON}\">Retry</wcm-button></wcm-platform-selection>${s ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-text color=\"secondary\" variant=\"small-thin\">Still doesn't work? <span tabindex=\"0\" @click=\"${() => this.openMobileApp(!0)}\">Try this alternate link</span></wcm-text>` : null}</wcm-info-footer><wcm-info-footer class=\"wcm-app-store\"><div><wcm-wallet-image walletId=\"${o}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(r)}\"></wcm-wallet-image><wcm-text>${`Get ${e}`}</wcm-text></div><wcm-button .iconRight=\"${v.ARROW_RIGHT_ICON}\" .onClick=\"${() => this.onGoToAppStore(i)}\" variant=\"ghost\">App Store</wcm-button></wcm-info-footer>`;\n  }\n};\nhe.styles = [h.globalCss, Go], Ye([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], he.prototype, \"isError\", 2), he = Ye([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-mobile-connecting-view\")], he);\nconst er = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`wcm-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}wcm-text{text-align:center}`;\nvar tr = Object.defineProperty,\n  or = Object.getOwnPropertyDescriptor,\n  rr = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? or(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && tr(o, r, t), t;\n  };\nlet je = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    const {\n        name: e,\n        id: o,\n        image_id: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isDesktop: a,\n        isWeb: t\n      } = c.getCachedRouterWalletPlatforms();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"${e}\" .onAction=\"${c.handleUriCopy}\" .actionIcon=\"${v.COPY_ICON}\"></wcm-modal-header><wcm-modal-content><wcm-walletconnect-qr walletId=\"${o}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(r)}\"></wcm-walletconnect-qr></wcm-modal-content><wcm-info-footer><wcm-text color=\"secondary\" variant=\"small-thin\">${`Scan this QR Code with your phone's camera or inside ${e} app`}</wcm-text><wcm-platform-selection .isDesktop=\"${a}\" .isWeb=\"${t}\"></wcm-platform-selection></wcm-info-footer>`;\n  }\n};\nje.styles = [h.globalCss, er], je = rr([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-mobile-qr-connecting-view\")], je);\nvar ar = Object.defineProperty,\n  lr = Object.getOwnPropertyDescriptor,\n  ir = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? lr(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && ar(o, r, t), t;\n  };\nlet _e = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  render() {\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"Scan the code\" .onAction=\"${c.handleUriCopy}\" .actionIcon=\"${v.COPY_ICON}\"></wcm-modal-header><wcm-modal-content><wcm-walletconnect-qr></wcm-walletconnect-qr></wcm-modal-content>`;\n  }\n};\n_e.styles = [h.globalCss], _e = ir([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-qrcode-view\")], _e);\nconst nr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`wcm-modal-content{height:clamp(200px,60vh,600px);display:block;overflow:scroll;scrollbar-width:none;position:relative;margin-top:1px}.wcm-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between;margin:-15px -10px;padding-top:20px}wcm-modal-content::after,wcm-modal-content::before{content:'';position:fixed;pointer-events:none;z-index:1;width:100%;height:20px;opacity:1}wcm-modal-content::before{box-shadow:0 -1px 0 0 var(--wcm-color-bg-1);background:linear-gradient(var(--wcm-color-bg-1),rgba(255,255,255,0))}wcm-modal-content::after{box-shadow:0 1px 0 0 var(--wcm-color-bg-1);background:linear-gradient(rgba(255,255,255,0),var(--wcm-color-bg-1));top:calc(100% - 20px)}wcm-modal-content::-webkit-scrollbar{display:none}.wcm-placeholder-block{display:flex;justify-content:center;align-items:center;height:100px;overflow:hidden}.wcm-empty,.wcm-loading{display:flex}.wcm-loading .wcm-placeholder-block{height:100%}.wcm-end-reached .wcm-placeholder-block{height:0;opacity:0}.wcm-empty .wcm-placeholder-block{opacity:1;height:100%}wcm-wallet-button{margin:calc((100% - 60px)/ 3) 0}`;\nvar cr = Object.defineProperty,\n  sr = Object.getOwnPropertyDescriptor,\n  ie = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? sr(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && cr(o, r, t), t;\n  };\nconst De = 40;\nlet U = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(...arguments), this.loading = !_walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state.wallets.listings.length, this.firstFetch = !_walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state.wallets.listings.length, this.search = \"\", this.endReached = !1, this.intersectionObserver = void 0, this.searchDebounce = c.debounce(e => {\n      e.length >= 1 ? (this.firstFetch = !0, this.endReached = !1, this.search = e, _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].resetSearch(), this.fetchWallets()) : this.search && (this.search = \"\", this.endReached = this.isLastPage(), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].resetSearch());\n    });\n  }\n  firstUpdated() {\n    this.createPaginationObserver();\n  }\n  disconnectedCallback() {\n    var e;\n    (e = this.intersectionObserver) == null || e.disconnect();\n  }\n  get placeholderEl() {\n    return c.getShadowRootElement(this, \".wcm-placeholder-block\");\n  }\n  createPaginationObserver() {\n    this.intersectionObserver = new IntersectionObserver(([e]) => {\n      e.isIntersecting && !(this.search && this.firstFetch) && this.fetchWallets();\n    }), this.intersectionObserver.observe(this.placeholderEl);\n  }\n  isLastPage() {\n    const {\n        wallets: e,\n        search: o\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state,\n      {\n        listings: r,\n        total: a\n      } = this.search ? o : e;\n    return a <= De || r.length >= a;\n  }\n  async fetchWallets() {\n    var e;\n    const {\n        wallets: o,\n        search: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state,\n      {\n        listings: a,\n        total: t,\n        page: l\n      } = this.search ? r : o;\n    if (!this.endReached && (this.firstFetch || t > De && a.length < t)) try {\n      this.loading = !0;\n      const i = (e = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state.chains) == null ? void 0 : e.join(\",\"),\n        {\n          listings: s\n        } = await _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].getWallets({\n          page: this.firstFetch ? 1 : l + 1,\n          entries: De,\n          search: this.search,\n          version: 2,\n          chains: i\n        }),\n        $ = s.map(f => c.getWalletIcon(f));\n      await Promise.all([...$.map(async f => c.preloadImage(f)), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].wait(300)]), this.endReached = this.isLastPage();\n    } catch (i) {\n      console.error(i), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ToastCtrl\"].openToast(c.getErrorMessage(i), \"error\");\n    } finally {\n      this.loading = !1, this.firstFetch = !1;\n    }\n  }\n  onConnect(e) {\n    _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isAndroid() ? c.handleMobileLinking(e) : c.goToConnectingView(e);\n  }\n  onSearchChange(e) {\n    const {\n      value: o\n    } = e.target;\n    this.searchDebounce(o);\n  }\n  render() {\n    const {\n        wallets: e,\n        search: o\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"ExplorerCtrl\"].state,\n      {\n        listings: r\n      } = this.search ? o : e,\n      a = this.loading && !r.length,\n      t = this.search.length >= 3;\n    let l = Z.manualWalletsTemplate(),\n      i = Z.recomendedWalletsTemplate(!0);\n    t && (l = l.filter(({\n      values: f\n    }) => c.caseSafeIncludes(f[0], this.search)), i = i.filter(({\n      values: f\n    }) => c.caseSafeIncludes(f[0], this.search)));\n    const s = !this.loading && !r.length && !i.length,\n      $ = {\n        \"wcm-loading\": a,\n        \"wcm-end-reached\": this.endReached || !this.loading,\n        \"wcm-empty\": s\n      };\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header><wcm-search-input .onChange=\"${this.onSearchChange.bind(this)}\"></wcm-search-input></wcm-modal-header><wcm-modal-content class=\"${Object(lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__[\"classMap\"])($)}\"><div class=\"wcm-grid\">${a ? null : l} ${a ? null : i} ${a ? null : r.map(f => lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`${f ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-wallet-button imageId=\"${f.image_id}\" name=\"${f.name}\" walletId=\"${f.id}\" .onClick=\"${() => this.onConnect(f)}\"></wcm-wallet-button>` : null}`)}</div><div class=\"wcm-placeholder-block\">${s ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-text variant=\"big-bold\" color=\"secondary\">No results found</wcm-text>` : null} ${!s && this.loading ? lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-spinner></wcm-spinner>` : null}</div></wcm-modal-content>`;\n  }\n};\nU.styles = [h.globalCss, nr], ie([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], U.prototype, \"loading\", 2), ie([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], U.prototype, \"firstFetch\", 2), ie([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], U.prototype, \"search\", 2), ie([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], U.prototype, \"endReached\", 2), U = ie([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-wallet-explorer-view\")], U);\nconst dr = lit__WEBPACK_IMPORTED_MODULE_0__[\"css\"]`wcm-info-footer{flex-direction:column;align-items:center;display:flex;width:100%;padding:5px 0}wcm-text{text-align:center}`;\nvar mr = Object.defineProperty,\n  hr = Object.getOwnPropertyDescriptor,\n  Ge = (e, o, r, a) => {\n    for (var t = a > 1 ? void 0 : a ? hr(o, r) : o, l = e.length - 1, i; l >= 0; l--) (i = e[l]) && (t = (a ? i(o, r, t) : i(t)) || t);\n    return a && t && mr(o, r, t), t;\n  };\nlet we = class extends lit__WEBPACK_IMPORTED_MODULE_0__[\"LitElement\"] {\n  constructor() {\n    super(), this.isError = !1, this.openWebWallet();\n  }\n  onFormatAndRedirect(e) {\n    const {\n        desktop: o,\n        name: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      a = o === null || o === void 0 ? void 0 : o.universal;\n    if (a) {\n      const t = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].formatUniversalUrl(a, e, r);\n      _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].openHref(t, \"_blank\");\n    }\n  }\n  openWebWallet() {\n    const {\n        walletConnectUri: e\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"OptionsCtrl\"].state,\n      o = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData();\n    c.setRecentWallet(o), e && this.onFormatAndRedirect(e);\n  }\n  render() {\n    const {\n        name: e,\n        id: o,\n        image_id: r\n      } = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].getWalletRouterData(),\n      {\n        isMobile: a,\n        isDesktop: t\n      } = c.getCachedRouterWalletPlatforms(),\n      l = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_3__[\"CoreUtil\"].isMobile();\n    return lit__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`<wcm-modal-header title=\"${e}\" .onAction=\"${c.handleUriCopy}\" .actionIcon=\"${v.COPY_ICON}\"></wcm-modal-header><wcm-modal-content><wcm-connector-waiting walletId=\"${o}\" imageId=\"${Object(lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_6__[\"ifDefined\"])(r)}\" label=\"${`Continue in ${e}...`}\" .isError=\"${this.isError}\"></wcm-connector-waiting></wcm-modal-content><wcm-info-footer><wcm-text color=\"secondary\" variant=\"small-thin\">${`${e} web app has opened in a new tab. Go there, accept the connection, and come back`}</wcm-text><wcm-platform-selection .isMobile=\"${a}\" .isDesktop=\"${l ? !1 : t}\" .isRetry=\"${!0}\"><wcm-button .onClick=\"${this.openWebWallet.bind(this)}\" .iconRight=\"${v.RETRY_ICON}\">Retry</wcm-button></wcm-platform-selection></wcm-info-footer>`;\n  }\n};\nwe.styles = [h.globalCss, dr], Ge([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"state\"])()], we.prototype, \"isError\", 2), we = Ge([Object(lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__[\"customElement\"])(\"wcm-web-connecting-view\")], we);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/browser.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/browser.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const canPromise = __webpack_require__(/*! ./can-promise */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/can-promise.js\");\nconst QRCode = __webpack_require__(/*! ./core/qrcode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/qrcode.js\");\nconst CanvasRenderer = __webpack_require__(/*! ./renderer/canvas */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/canvas.js\");\nconst SvgRenderer = __webpack_require__(/*! ./renderer/svg-tag.js */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/svg-tag.js\");\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1);\n  const argsNum = args.length;\n  const isLastArgCb = typeof args[argsNum - 1] === 'function';\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument');\n  }\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided');\n    }\n    if (argsNum === 2) {\n      cb = text;\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts;\n        opts = undefined;\n      } else {\n        cb = opts;\n        opts = text;\n        text = canvas;\n        canvas = undefined;\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided');\n    }\n    if (argsNum === 1) {\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text;\n      text = canvas;\n      canvas = undefined;\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts);\n        resolve(renderFunc(data, canvas, opts));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n  try {\n    const data = QRCode.create(text, opts);\n    cb(null, renderFunc(data, canvas, opts));\n  } catch (e) {\n    cb(e);\n  }\n}\nexports.create = QRCode.create;\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvYnJvd3Nlci5qcz9jN2E2Il0sIm5hbWVzIjpbImNhblByb21pc2UiLCJyZXF1aXJlIiwiUVJDb2RlIiwiQ2FudmFzUmVuZGVyZXIiLCJTdmdSZW5kZXJlciIsInJlbmRlckNhbnZhcyIsInJlbmRlckZ1bmMiLCJjYW52YXMiLCJ0ZXh0Iiwib3B0cyIsImNiIiwiYXJncyIsInNsaWNlIiwiY2FsbCIsImFyZ3VtZW50cyIsImFyZ3NOdW0iLCJsZW5ndGgiLCJpc0xhc3RBcmdDYiIsIkVycm9yIiwidW5kZWZpbmVkIiwiZ2V0Q29udGV4dCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZGF0YSIsImNyZWF0ZSIsImUiLCJleHBvcnRzIiwidG9DYW52YXMiLCJiaW5kIiwicmVuZGVyIiwidG9EYXRhVVJMIiwicmVuZGVyVG9EYXRhVVJMIiwidG9TdHJpbmciLCJfIl0sIm1hcHBpbmdzIjoiQUFDQSxNQUFNQSxVQUFVLEdBQUdDLG1CQUFPLENBQUMsb0dBQWUsQ0FBQztBQUUzQyxNQUFNQyxNQUFNLEdBQUdELG1CQUFPLENBQUMsb0dBQWUsQ0FBQztBQUN2QyxNQUFNRSxjQUFjLEdBQUdGLG1CQUFPLENBQUMsNEdBQW1CLENBQUM7QUFDbkQsTUFBTUcsV0FBVyxHQUFHSCxtQkFBTyxDQUFDLGlIQUF1QixDQUFDO0FBRXBELFNBQVNJLFlBQVlBLENBQUVDLFVBQVUsRUFBRUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsRUFBRSxFQUFFO0VBQ3pELE1BQU1DLElBQUksR0FBRyxFQUFFLENBQUNDLEtBQUssQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0VBQ3hDLE1BQU1DLE9BQU8sR0FBR0osSUFBSSxDQUFDSyxNQUFNO0VBQzNCLE1BQU1DLFdBQVcsR0FBRyxPQUFPTixJQUFJLENBQUNJLE9BQU8sR0FBRyxDQUFDLENBQUMsS0FBSyxVQUFVO0VBRTNELElBQUksQ0FBQ0UsV0FBVyxJQUFJLENBQUNqQixVQUFVLENBQUMsQ0FBQyxFQUFFO0lBQ2pDLE1BQU0sSUFBSWtCLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQztFQUN2RDtFQUVBLElBQUlELFdBQVcsRUFBRTtJQUNmLElBQUlGLE9BQU8sR0FBRyxDQUFDLEVBQUU7TUFDZixNQUFNLElBQUlHLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQztJQUMvQztJQUVBLElBQUlILE9BQU8sS0FBSyxDQUFDLEVBQUU7TUFDakJMLEVBQUUsR0FBR0YsSUFBSTtNQUNUQSxJQUFJLEdBQUdELE1BQU07TUFDYkEsTUFBTSxHQUFHRSxJQUFJLEdBQUdVLFNBQVM7SUFDM0IsQ0FBQyxNQUFNLElBQUlKLE9BQU8sS0FBSyxDQUFDLEVBQUU7TUFDeEIsSUFBSVIsTUFBTSxDQUFDYSxVQUFVLElBQUksT0FBT1YsRUFBRSxLQUFLLFdBQVcsRUFBRTtRQUNsREEsRUFBRSxHQUFHRCxJQUFJO1FBQ1RBLElBQUksR0FBR1UsU0FBUztNQUNsQixDQUFDLE1BQU07UUFDTFQsRUFBRSxHQUFHRCxJQUFJO1FBQ1RBLElBQUksR0FBR0QsSUFBSTtRQUNYQSxJQUFJLEdBQUdELE1BQU07UUFDYkEsTUFBTSxHQUFHWSxTQUFTO01BQ3BCO0lBQ0Y7RUFDRixDQUFDLE1BQU07SUFDTCxJQUFJSixPQUFPLEdBQUcsQ0FBQyxFQUFFO01BQ2YsTUFBTSxJQUFJRyxLQUFLLENBQUMsNEJBQTRCLENBQUM7SUFDL0M7SUFFQSxJQUFJSCxPQUFPLEtBQUssQ0FBQyxFQUFFO01BQ2pCUCxJQUFJLEdBQUdELE1BQU07TUFDYkEsTUFBTSxHQUFHRSxJQUFJLEdBQUdVLFNBQVM7SUFDM0IsQ0FBQyxNQUFNLElBQUlKLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQ1IsTUFBTSxDQUFDYSxVQUFVLEVBQUU7TUFDOUNYLElBQUksR0FBR0QsSUFBSTtNQUNYQSxJQUFJLEdBQUdELE1BQU07TUFDYkEsTUFBTSxHQUFHWSxTQUFTO0lBQ3BCO0lBRUEsT0FBTyxJQUFJRSxPQUFPLENBQUMsVUFBVUMsT0FBTyxFQUFFQyxNQUFNLEVBQUU7TUFDNUMsSUFBSTtRQUNGLE1BQU1DLElBQUksR0FBR3RCLE1BQU0sQ0FBQ3VCLE1BQU0sQ0FBQ2pCLElBQUksRUFBRUMsSUFBSSxDQUFDO1FBQ3RDYSxPQUFPLENBQUNoQixVQUFVLENBQUNrQixJQUFJLEVBQUVqQixNQUFNLEVBQUVFLElBQUksQ0FBQyxDQUFDO01BQ3pDLENBQUMsQ0FBQyxPQUFPaUIsQ0FBQyxFQUFFO1FBQ1ZILE1BQU0sQ0FBQ0csQ0FBQyxDQUFDO01BQ1g7SUFDRixDQUFDLENBQUM7RUFDSjtFQUVBLElBQUk7SUFDRixNQUFNRixJQUFJLEdBQUd0QixNQUFNLENBQUN1QixNQUFNLENBQUNqQixJQUFJLEVBQUVDLElBQUksQ0FBQztJQUN0Q0MsRUFBRSxDQUFDLElBQUksRUFBRUosVUFBVSxDQUFDa0IsSUFBSSxFQUFFakIsTUFBTSxFQUFFRSxJQUFJLENBQUMsQ0FBQztFQUMxQyxDQUFDLENBQUMsT0FBT2lCLENBQUMsRUFBRTtJQUNWaEIsRUFBRSxDQUFDZ0IsQ0FBQyxDQUFDO0VBQ1A7QUFDRjtBQUVBQyxPQUFPLENBQUNGLE1BQU0sR0FBR3ZCLE1BQU0sQ0FBQ3VCLE1BQU07QUFDOUJFLE9BQU8sQ0FBQ0MsUUFBUSxHQUFHdkIsWUFBWSxDQUFDd0IsSUFBSSxDQUFDLElBQUksRUFBRTFCLGNBQWMsQ0FBQzJCLE1BQU0sQ0FBQztBQUNqRUgsT0FBTyxDQUFDSSxTQUFTLEdBQUcxQixZQUFZLENBQUN3QixJQUFJLENBQUMsSUFBSSxFQUFFMUIsY0FBYyxDQUFDNkIsZUFBZSxDQUFDOztBQUUzRTtBQUNBTCxPQUFPLENBQUNNLFFBQVEsR0FBRzVCLFlBQVksQ0FBQ3dCLElBQUksQ0FBQyxJQUFJLEVBQUUsVUFBVUwsSUFBSSxFQUFFVSxDQUFDLEVBQUV6QixJQUFJLEVBQUU7RUFDbEUsT0FBT0wsV0FBVyxDQUFDMEIsTUFBTSxDQUFDTixJQUFJLEVBQUVmLElBQUksQ0FBQztBQUN2QyxDQUFDLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY2FuUHJvbWlzZSA9IHJlcXVpcmUoJy4vY2FuLXByb21pc2UnKVxuXG5jb25zdCBRUkNvZGUgPSByZXF1aXJlKCcuL2NvcmUvcXJjb2RlJylcbmNvbnN0IENhbnZhc1JlbmRlcmVyID0gcmVxdWlyZSgnLi9yZW5kZXJlci9jYW52YXMnKVxuY29uc3QgU3ZnUmVuZGVyZXIgPSByZXF1aXJlKCcuL3JlbmRlcmVyL3N2Zy10YWcuanMnKVxuXG5mdW5jdGlvbiByZW5kZXJDYW52YXMgKHJlbmRlckZ1bmMsIGNhbnZhcywgdGV4dCwgb3B0cywgY2IpIHtcbiAgY29uc3QgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKVxuICBjb25zdCBhcmdzTnVtID0gYXJncy5sZW5ndGhcbiAgY29uc3QgaXNMYXN0QXJnQ2IgPSB0eXBlb2YgYXJnc1thcmdzTnVtIC0gMV0gPT09ICdmdW5jdGlvbidcblxuICBpZiAoIWlzTGFzdEFyZ0NiICYmICFjYW5Qcm9taXNlKCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhbGxiYWNrIHJlcXVpcmVkIGFzIGxhc3QgYXJndW1lbnQnKVxuICB9XG5cbiAgaWYgKGlzTGFzdEFyZ0NiKSB7XG4gICAgaWYgKGFyZ3NOdW0gPCAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RvbyBmZXcgYXJndW1lbnRzIHByb3ZpZGVkJylcbiAgICB9XG5cbiAgICBpZiAoYXJnc051bSA9PT0gMikge1xuICAgICAgY2IgPSB0ZXh0XG4gICAgICB0ZXh0ID0gY2FudmFzXG4gICAgICBjYW52YXMgPSBvcHRzID0gdW5kZWZpbmVkXG4gICAgfSBlbHNlIGlmIChhcmdzTnVtID09PSAzKSB7XG4gICAgICBpZiAoY2FudmFzLmdldENvbnRleHQgJiYgdHlwZW9mIGNiID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjYiA9IG9wdHNcbiAgICAgICAgb3B0cyA9IHVuZGVmaW5lZFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2IgPSBvcHRzXG4gICAgICAgIG9wdHMgPSB0ZXh0XG4gICAgICAgIHRleHQgPSBjYW52YXNcbiAgICAgICAgY2FudmFzID0gdW5kZWZpbmVkXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChhcmdzTnVtIDwgMSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb28gZmV3IGFyZ3VtZW50cyBwcm92aWRlZCcpXG4gICAgfVxuXG4gICAgaWYgKGFyZ3NOdW0gPT09IDEpIHtcbiAgICAgIHRleHQgPSBjYW52YXNcbiAgICAgIGNhbnZhcyA9IG9wdHMgPSB1bmRlZmluZWRcbiAgICB9IGVsc2UgaWYgKGFyZ3NOdW0gPT09IDIgJiYgIWNhbnZhcy5nZXRDb250ZXh0KSB7XG4gICAgICBvcHRzID0gdGV4dFxuICAgICAgdGV4dCA9IGNhbnZhc1xuICAgICAgY2FudmFzID0gdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBRUkNvZGUuY3JlYXRlKHRleHQsIG9wdHMpXG4gICAgICAgIHJlc29sdmUocmVuZGVyRnVuYyhkYXRhLCBjYW52YXMsIG9wdHMpKVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZWplY3QoZSlcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBkYXRhID0gUVJDb2RlLmNyZWF0ZSh0ZXh0LCBvcHRzKVxuICAgIGNiKG51bGwsIHJlbmRlckZ1bmMoZGF0YSwgY2FudmFzLCBvcHRzKSlcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNiKGUpXG4gIH1cbn1cblxuZXhwb3J0cy5jcmVhdGUgPSBRUkNvZGUuY3JlYXRlXG5leHBvcnRzLnRvQ2FudmFzID0gcmVuZGVyQ2FudmFzLmJpbmQobnVsbCwgQ2FudmFzUmVuZGVyZXIucmVuZGVyKVxuZXhwb3J0cy50b0RhdGFVUkwgPSByZW5kZXJDYW52YXMuYmluZChudWxsLCBDYW52YXNSZW5kZXJlci5yZW5kZXJUb0RhdGFVUkwpXG5cbi8vIG9ubHkgc3ZnIGZvciBub3cuXG5leHBvcnRzLnRvU3RyaW5nID0gcmVuZGVyQ2FudmFzLmJpbmQobnVsbCwgZnVuY3Rpb24gKGRhdGEsIF8sIG9wdHMpIHtcbiAgcmV0dXJuIFN2Z1JlbmRlcmVyLnJlbmRlcihkYXRhLCBvcHRzKVxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/browser.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/can-promise.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/can-promise.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY2FuLXByb21pc2UuanM/YTRiMCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiUHJvbWlzZSIsInByb3RvdHlwZSIsInRoZW4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFPLEdBQUcsWUFBWTtFQUMzQixPQUFPLE9BQU9DLE9BQU8sS0FBSyxVQUFVLElBQUlBLE9BQU8sQ0FBQ0MsU0FBUyxJQUFJRCxPQUFPLENBQUNDLFNBQVMsQ0FBQ0MsSUFBSTtBQUNyRixDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2Nhbi1wcm9taXNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY2FuLXByb21pc2UgaGFzIGEgY3Jhc2ggaW4gc29tZSB2ZXJzaW9ucyBvZiByZWFjdCBuYXRpdmUgdGhhdCBkb250IGhhdmVcbi8vIHN0YW5kYXJkIGdsb2JhbCBvYmplY3RzXG4vLyBodHRwczovL2dpdGh1Yi5jb20vc29sZGFpci9ub2RlLXFyY29kZS9pc3N1ZXMvMTU3XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIFByb21pc2UgPT09ICdmdW5jdGlvbicgJiYgUHJvbWlzZS5wcm90b3R5cGUgJiYgUHJvbWlzZS5wcm90b3R5cGUudGhlblxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/can-promise.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alignment-pattern.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alignment-pattern.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\").getSymbolSize;\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords(version) {\n  if (version === 1) return [];\n  const posCount = Math.floor(version / 7) + 2;\n  const size = getSymbolSize(version);\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n  const positions = [size - 7]; // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals;\n  }\n  positions.push(6); // First coord is always 6\n\n  return positions.reverse();\n};\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions(version) {\n  const coords = [];\n  const pos = exports.getRowColCoords(version);\n  const posLength = pos.length;\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if (i === 0 && j === 0 ||\n      // top-left\n      i === 0 && j === posLength - 1 ||\n      // bottom-left\n      i === posLength - 1 && j === 0) {\n        // top-right\n        continue;\n      }\n      coords.push([pos[i], pos[j]]);\n    }\n  }\n  return coords;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9hbGlnbm1lbnQtcGF0dGVybi5qcz9lZGVhIl0sIm5hbWVzIjpbImdldFN5bWJvbFNpemUiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImdldFJvd0NvbENvb3JkcyIsInZlcnNpb24iLCJwb3NDb3VudCIsIk1hdGgiLCJmbG9vciIsInNpemUiLCJpbnRlcnZhbHMiLCJjZWlsIiwicG9zaXRpb25zIiwiaSIsInB1c2giLCJyZXZlcnNlIiwiZ2V0UG9zaXRpb25zIiwiY29vcmRzIiwicG9zIiwicG9zTGVuZ3RoIiwibGVuZ3RoIiwiaiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1BLGFBQWEsR0FBR0MsbUJBQU8sQ0FBQyw2RkFBUyxDQUFDLENBQUNELGFBQWE7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUUsT0FBTyxDQUFDQyxlQUFlLEdBQUcsU0FBU0EsZUFBZUEsQ0FBRUMsT0FBTyxFQUFFO0VBQzNELElBQUlBLE9BQU8sS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFO0VBRTVCLE1BQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNILE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO0VBQzVDLE1BQU1JLElBQUksR0FBR1IsYUFBYSxDQUFDSSxPQUFPLENBQUM7RUFDbkMsTUFBTUssU0FBUyxHQUFHRCxJQUFJLEtBQUssR0FBRyxHQUFHLEVBQUUsR0FBR0YsSUFBSSxDQUFDSSxJQUFJLENBQUMsQ0FBQ0YsSUFBSSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUdILFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7RUFDckYsTUFBTU0sU0FBUyxHQUFHLENBQUNILElBQUksR0FBRyxDQUFDLENBQUMsRUFBQzs7RUFFN0IsS0FBSyxJQUFJSSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdQLFFBQVEsR0FBRyxDQUFDLEVBQUVPLENBQUMsRUFBRSxFQUFFO0lBQ3JDRCxTQUFTLENBQUNDLENBQUMsQ0FBQyxHQUFHRCxTQUFTLENBQUNDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBR0gsU0FBUztFQUM3QztFQUVBRSxTQUFTLENBQUNFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQzs7RUFFbEIsT0FBT0YsU0FBUyxDQUFDRyxPQUFPLENBQUMsQ0FBQztBQUM1QixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQVosT0FBTyxDQUFDYSxZQUFZLEdBQUcsU0FBU0EsWUFBWUEsQ0FBRVgsT0FBTyxFQUFFO0VBQ3JELE1BQU1ZLE1BQU0sR0FBRyxFQUFFO0VBQ2pCLE1BQU1DLEdBQUcsR0FBR2YsT0FBTyxDQUFDQyxlQUFlLENBQUNDLE9BQU8sQ0FBQztFQUM1QyxNQUFNYyxTQUFTLEdBQUdELEdBQUcsQ0FBQ0UsTUFBTTtFQUU1QixLQUFLLElBQUlQLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR00sU0FBUyxFQUFFTixDQUFDLEVBQUUsRUFBRTtJQUNsQyxLQUFLLElBQUlRLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0YsU0FBUyxFQUFFRSxDQUFDLEVBQUUsRUFBRTtNQUNsQztNQUNBLElBQUtSLENBQUMsS0FBSyxDQUFDLElBQUlRLENBQUMsS0FBSyxDQUFDO01BQUs7TUFDdkJSLENBQUMsS0FBSyxDQUFDLElBQUlRLENBQUMsS0FBS0YsU0FBUyxHQUFHLENBQUU7TUFBSTtNQUNuQ04sQ0FBQyxLQUFLTSxTQUFTLEdBQUcsQ0FBQyxJQUFJRSxDQUFDLEtBQUssQ0FBRSxFQUFFO1FBQUU7UUFDdEM7TUFDRjtNQUVBSixNQUFNLENBQUNILElBQUksQ0FBQyxDQUFDSSxHQUFHLENBQUNMLENBQUMsQ0FBQyxFQUFFSyxHQUFHLENBQUNHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0I7RUFDRjtFQUVBLE9BQU9KLE1BQU07QUFDZixDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvYWxpZ25tZW50LXBhdHRlcm4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFsaWdubWVudCBwYXR0ZXJuIGFyZSBmaXhlZCByZWZlcmVuY2UgcGF0dGVybiBpbiBkZWZpbmVkIHBvc2l0aW9uc1xuICogaW4gYSBtYXRyaXggc3ltYm9sb2d5LCB3aGljaCBlbmFibGVzIHRoZSBkZWNvZGUgc29mdHdhcmUgdG8gcmUtc3luY2hyb25pc2VcbiAqIHRoZSBjb29yZGluYXRlIG1hcHBpbmcgb2YgdGhlIGltYWdlIG1vZHVsZXMgaW4gdGhlIGV2ZW50IG9mIG1vZGVyYXRlIGFtb3VudHNcbiAqIG9mIGRpc3RvcnRpb24gb2YgdGhlIGltYWdlLlxuICpcbiAqIEFsaWdubWVudCBwYXR0ZXJucyBhcmUgcHJlc2VudCBvbmx5IGluIFFSIENvZGUgc3ltYm9scyBvZiB2ZXJzaW9uIDIgb3IgbGFyZ2VyXG4gKiBhbmQgdGhlaXIgbnVtYmVyIGRlcGVuZHMgb24gdGhlIHN5bWJvbCB2ZXJzaW9uLlxuICovXG5cbmNvbnN0IGdldFN5bWJvbFNpemUgPSByZXF1aXJlKCcuL3V0aWxzJykuZ2V0U3ltYm9sU2l6ZVxuXG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgcm93L2NvbHVtbiBjb29yZGluYXRlcyBvZiB0aGUgY2VudGVyIG1vZHVsZSBvZiBlYWNoIGFsaWdubWVudCBwYXR0ZXJuXG4gKiBmb3IgdGhlIHNwZWNpZmllZCBRUiBDb2RlIHZlcnNpb24uXG4gKlxuICogVGhlIGFsaWdubWVudCBwYXR0ZXJucyBhcmUgcG9zaXRpb25lZCBzeW1tZXRyaWNhbGx5IG9uIGVpdGhlciBzaWRlIG9mIHRoZSBkaWFnb25hbFxuICogcnVubmluZyBmcm9tIHRoZSB0b3AgbGVmdCBjb3JuZXIgb2YgdGhlIHN5bWJvbCB0byB0aGUgYm90dG9tIHJpZ2h0IGNvcm5lci5cbiAqXG4gKiBTaW5jZSBwb3NpdGlvbnMgYXJlIHNpbW1ldHJpY2FsIG9ubHkgaGFsZiBvZiB0aGUgY29vcmRpbmF0ZXMgYXJlIHJldHVybmVkLlxuICogRWFjaCBpdGVtIG9mIHRoZSBhcnJheSB3aWxsIHJlcHJlc2VudCBpbiB0dXJuIHRoZSB4IGFuZCB5IGNvb3JkaW5hdGUuXG4gKiBAc2VlIHtAbGluayBnZXRQb3NpdGlvbnN9XG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB2ZXJzaW9uIFFSIENvZGUgdmVyc2lvblxuICogQHJldHVybiB7QXJyYXl9ICAgICAgICAgIEFycmF5IG9mIGNvb3JkaW5hdGVcbiAqL1xuZXhwb3J0cy5nZXRSb3dDb2xDb29yZHMgPSBmdW5jdGlvbiBnZXRSb3dDb2xDb29yZHMgKHZlcnNpb24pIHtcbiAgaWYgKHZlcnNpb24gPT09IDEpIHJldHVybiBbXVxuXG4gIGNvbnN0IHBvc0NvdW50ID0gTWF0aC5mbG9vcih2ZXJzaW9uIC8gNykgKyAyXG4gIGNvbnN0IHNpemUgPSBnZXRTeW1ib2xTaXplKHZlcnNpb24pXG4gIGNvbnN0IGludGVydmFscyA9IHNpemUgPT09IDE0NSA/IDI2IDogTWF0aC5jZWlsKChzaXplIC0gMTMpIC8gKDIgKiBwb3NDb3VudCAtIDIpKSAqIDJcbiAgY29uc3QgcG9zaXRpb25zID0gW3NpemUgLSA3XSAvLyBMYXN0IGNvb3JkIGlzIGFsd2F5cyAoc2l6ZSAtIDcpXG5cbiAgZm9yIChsZXQgaSA9IDE7IGkgPCBwb3NDb3VudCAtIDE7IGkrKykge1xuICAgIHBvc2l0aW9uc1tpXSA9IHBvc2l0aW9uc1tpIC0gMV0gLSBpbnRlcnZhbHNcbiAgfVxuXG4gIHBvc2l0aW9ucy5wdXNoKDYpIC8vIEZpcnN0IGNvb3JkIGlzIGFsd2F5cyA2XG5cbiAgcmV0dXJuIHBvc2l0aW9ucy5yZXZlcnNlKClcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHBvc2l0aW9ucyBvZiBlYWNoIGFsaWdubWVudCBwYXR0ZXJuLlxuICogRWFjaCBhcnJheSdzIGVsZW1lbnQgcmVwcmVzZW50IHRoZSBjZW50ZXIgcG9pbnQgb2YgdGhlIHBhdHRlcm4gYXMgKHgsIHkpIGNvb3JkaW5hdGVzXG4gKlxuICogQ29vcmRpbmF0ZXMgYXJlIGNhbGN1bGF0ZWQgZXhwYW5kaW5nIHRoZSByb3cvY29sdW1uIGNvb3JkaW5hdGVzIHJldHVybmVkIGJ5IHtAbGluayBnZXRSb3dDb2xDb29yZHN9XG4gKiBhbmQgZmlsdGVyaW5nIG91dCB0aGUgaXRlbXMgdGhhdCBvdmVybGFwcyB3aXRoIGZpbmRlciBwYXR0ZXJuXG4gKlxuICogQGV4YW1wbGVcbiAqIEZvciBhIFZlcnNpb24gNyBzeW1ib2wge0BsaW5rIGdldFJvd0NvbENvb3Jkc30gcmV0dXJucyB2YWx1ZXMgNiwgMjIgYW5kIDM4LlxuICogVGhlIGFsaWdubWVudCBwYXR0ZXJucywgdGhlcmVmb3JlLCBhcmUgdG8gYmUgY2VudGVyZWQgb24gKHJvdywgY29sdW1uKVxuICogcG9zaXRpb25zICg2LDIyKSwgKDIyLDYpLCAoMjIsMjIpLCAoMjIsMzgpLCAoMzgsMjIpLCAoMzgsMzgpLlxuICogTm90ZSB0aGF0IHRoZSBjb29yZGluYXRlcyAoNiw2KSwgKDYsMzgpLCAoMzgsNikgYXJlIG9jY3VwaWVkIGJ5IGZpbmRlciBwYXR0ZXJuc1xuICogYW5kIGFyZSBub3QgdGhlcmVmb3JlIHVzZWQgZm9yIGFsaWdubWVudCBwYXR0ZXJucy5cbiAqXG4gKiBsZXQgcG9zID0gZ2V0UG9zaXRpb25zKDcpXG4gKiAvLyBbWzYsMjJdLCBbMjIsNl0sIFsyMiwyMl0sIFsyMiwzOF0sIFszOCwyMl0sIFszOCwzOF1dXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB2ZXJzaW9uIFFSIENvZGUgdmVyc2lvblxuICogQHJldHVybiB7QXJyYXl9ICAgICAgICAgIEFycmF5IG9mIGNvb3JkaW5hdGVzXG4gKi9cbmV4cG9ydHMuZ2V0UG9zaXRpb25zID0gZnVuY3Rpb24gZ2V0UG9zaXRpb25zICh2ZXJzaW9uKSB7XG4gIGNvbnN0IGNvb3JkcyA9IFtdXG4gIGNvbnN0IHBvcyA9IGV4cG9ydHMuZ2V0Um93Q29sQ29vcmRzKHZlcnNpb24pXG4gIGNvbnN0IHBvc0xlbmd0aCA9IHBvcy5sZW5ndGhcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvc0xlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBwb3NMZW5ndGg7IGorKykge1xuICAgICAgLy8gU2tpcCBpZiBwb3NpdGlvbiBpcyBvY2N1cGllZCBieSBmaW5kZXIgcGF0dGVybnNcbiAgICAgIGlmICgoaSA9PT0gMCAmJiBqID09PSAwKSB8fCAvLyB0b3AtbGVmdFxuICAgICAgICAgIChpID09PSAwICYmIGogPT09IHBvc0xlbmd0aCAtIDEpIHx8IC8vIGJvdHRvbS1sZWZ0XG4gICAgICAgICAgKGkgPT09IHBvc0xlbmd0aCAtIDEgJiYgaiA9PT0gMCkpIHsgLy8gdG9wLXJpZ2h0XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGNvb3Jkcy5wdXNoKFtwb3NbaV0sIHBvc1tqXV0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvb3Jkc1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alignment-pattern.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alphanumeric-data.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alphanumeric-data.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':'];\nfunction AlphanumericData(data) {\n  this.mode = Mode.ALPHANUMERIC;\n  this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n  return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n  let i;\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11);\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n  }\n};\nmodule.exports = AlphanumericData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9hbHBoYW51bWVyaWMtZGF0YS5qcz9iNjhmIl0sIm5hbWVzIjpbIk1vZGUiLCJyZXF1aXJlIiwiQUxQSEFfTlVNX0NIQVJTIiwiQWxwaGFudW1lcmljRGF0YSIsImRhdGEiLCJtb2RlIiwiQUxQSEFOVU1FUklDIiwiZ2V0Qml0c0xlbmd0aCIsImxlbmd0aCIsIk1hdGgiLCJmbG9vciIsInByb3RvdHlwZSIsImdldExlbmd0aCIsIndyaXRlIiwiYml0QnVmZmVyIiwiaSIsInZhbHVlIiwiaW5kZXhPZiIsInB1dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQywyRkFBUSxDQUFDOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQyxlQUFlLEdBQUcsQ0FDdEIsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUNoRCxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQy9ELEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFDL0QsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQzVDO0FBRUQsU0FBU0MsZ0JBQWdCQSxDQUFFQyxJQUFJLEVBQUU7RUFDL0IsSUFBSSxDQUFDQyxJQUFJLEdBQUdMLElBQUksQ0FBQ00sWUFBWTtFQUM3QixJQUFJLENBQUNGLElBQUksR0FBR0EsSUFBSTtBQUNsQjtBQUVBRCxnQkFBZ0IsQ0FBQ0ksYUFBYSxHQUFHLFNBQVNBLGFBQWFBLENBQUVDLE1BQU0sRUFBRTtFQUMvRCxPQUFPLEVBQUUsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNGLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUlBLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFDdkQsQ0FBQztBQUVETCxnQkFBZ0IsQ0FBQ1EsU0FBUyxDQUFDQyxTQUFTLEdBQUcsU0FBU0EsU0FBU0EsQ0FBQSxFQUFJO0VBQzNELE9BQU8sSUFBSSxDQUFDUixJQUFJLENBQUNJLE1BQU07QUFDekIsQ0FBQztBQUVETCxnQkFBZ0IsQ0FBQ1EsU0FBUyxDQUFDSixhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBQSxFQUFJO0VBQ25FLE9BQU9KLGdCQUFnQixDQUFDSSxhQUFhLENBQUMsSUFBSSxDQUFDSCxJQUFJLENBQUNJLE1BQU0sQ0FBQztBQUN6RCxDQUFDO0FBRURMLGdCQUFnQixDQUFDUSxTQUFTLENBQUNFLEtBQUssR0FBRyxTQUFTQSxLQUFLQSxDQUFFQyxTQUFTLEVBQUU7RUFDNUQsSUFBSUMsQ0FBQzs7RUFFTDtFQUNBO0VBQ0EsS0FBS0EsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUNYLElBQUksQ0FBQ0ksTUFBTSxFQUFFTyxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQzdDO0lBQ0EsSUFBSUMsS0FBSyxHQUFHZCxlQUFlLENBQUNlLE9BQU8sQ0FBQyxJQUFJLENBQUNiLElBQUksQ0FBQ1csQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFOztJQUV0RDtJQUNBQyxLQUFLLElBQUlkLGVBQWUsQ0FBQ2UsT0FBTyxDQUFDLElBQUksQ0FBQ2IsSUFBSSxDQUFDVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7O0lBRWxEO0lBQ0FELFNBQVMsQ0FBQ0ksR0FBRyxDQUFDRixLQUFLLEVBQUUsRUFBRSxDQUFDO0VBQzFCOztFQUVBO0VBQ0E7RUFDQSxJQUFJLElBQUksQ0FBQ1osSUFBSSxDQUFDSSxNQUFNLEdBQUcsQ0FBQyxFQUFFO0lBQ3hCTSxTQUFTLENBQUNJLEdBQUcsQ0FBQ2hCLGVBQWUsQ0FBQ2UsT0FBTyxDQUFDLElBQUksQ0FBQ2IsSUFBSSxDQUFDVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUN6RDtBQUNGLENBQUM7QUFFREksTUFBTSxDQUFDQyxPQUFPLEdBQUdqQixnQkFBZ0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9hbHBoYW51bWVyaWMtZGF0YS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1vZGUgPSByZXF1aXJlKCcuL21vZGUnKVxuXG4vKipcbiAqIEFycmF5IG9mIGNoYXJhY3RlcnMgYXZhaWxhYmxlIGluIGFscGhhbnVtZXJpYyBtb2RlXG4gKlxuICogQXMgcGVyIFFSIENvZGUgc3BlY2lmaWNhdGlvbiwgdG8gZWFjaCBjaGFyYWN0ZXJcbiAqIGlzIGFzc2lnbmVkIGEgdmFsdWUgZnJvbSAwIHRvIDQ0IHdoaWNoIGluIHRoaXMgY2FzZSBjb2luY2lkZXNcbiAqIHdpdGggdGhlIGFycmF5IGluZGV4XG4gKlxuICogQHR5cGUge0FycmF5fVxuICovXG5jb25zdCBBTFBIQV9OVU1fQ0hBUlMgPSBbXG4gICcwJywgJzEnLCAnMicsICczJywgJzQnLCAnNScsICc2JywgJzcnLCAnOCcsICc5JyxcbiAgJ0EnLCAnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLFxuICAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWicsXG4gICcgJywgJyQnLCAnJScsICcqJywgJysnLCAnLScsICcuJywgJy8nLCAnOidcbl1cblxuZnVuY3Rpb24gQWxwaGFudW1lcmljRGF0YSAoZGF0YSkge1xuICB0aGlzLm1vZGUgPSBNb2RlLkFMUEhBTlVNRVJJQ1xuICB0aGlzLmRhdGEgPSBkYXRhXG59XG5cbkFscGhhbnVtZXJpY0RhdGEuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKGxlbmd0aCkge1xuICByZXR1cm4gMTEgKiBNYXRoLmZsb29yKGxlbmd0aCAvIDIpICsgNiAqIChsZW5ndGggJSAyKVxufVxuXG5BbHBoYW51bWVyaWNEYXRhLnByb3RvdHlwZS5nZXRMZW5ndGggPSBmdW5jdGlvbiBnZXRMZW5ndGggKCkge1xuICByZXR1cm4gdGhpcy5kYXRhLmxlbmd0aFxufVxuXG5BbHBoYW51bWVyaWNEYXRhLnByb3RvdHlwZS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAoKSB7XG4gIHJldHVybiBBbHBoYW51bWVyaWNEYXRhLmdldEJpdHNMZW5ndGgodGhpcy5kYXRhLmxlbmd0aClcbn1cblxuQWxwaGFudW1lcmljRGF0YS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiB3cml0ZSAoYml0QnVmZmVyKSB7XG4gIGxldCBpXG5cbiAgLy8gSW5wdXQgZGF0YSBjaGFyYWN0ZXJzIGFyZSBkaXZpZGVkIGludG8gZ3JvdXBzIG9mIHR3byBjaGFyYWN0ZXJzXG4gIC8vIGFuZCBlbmNvZGVkIGFzIDExLWJpdCBiaW5hcnkgY29kZXMuXG4gIGZvciAoaSA9IDA7IGkgKyAyIDw9IHRoaXMuZGF0YS5sZW5ndGg7IGkgKz0gMikge1xuICAgIC8vIFRoZSBjaGFyYWN0ZXIgdmFsdWUgb2YgdGhlIGZpcnN0IGNoYXJhY3RlciBpcyBtdWx0aXBsaWVkIGJ5IDQ1XG4gICAgbGV0IHZhbHVlID0gQUxQSEFfTlVNX0NIQVJTLmluZGV4T2YodGhpcy5kYXRhW2ldKSAqIDQ1XG5cbiAgICAvLyBUaGUgY2hhcmFjdGVyIHZhbHVlIG9mIHRoZSBzZWNvbmQgZGlnaXQgaXMgYWRkZWQgdG8gdGhlIHByb2R1Y3RcbiAgICB2YWx1ZSArPSBBTFBIQV9OVU1fQ0hBUlMuaW5kZXhPZih0aGlzLmRhdGFbaSArIDFdKVxuXG4gICAgLy8gVGhlIHN1bSBpcyB0aGVuIHN0b3JlZCBhcyAxMS1iaXQgYmluYXJ5IG51bWJlclxuICAgIGJpdEJ1ZmZlci5wdXQodmFsdWUsIDExKVxuICB9XG5cbiAgLy8gSWYgdGhlIG51bWJlciBvZiBpbnB1dCBkYXRhIGNoYXJhY3RlcnMgaXMgbm90IGEgbXVsdGlwbGUgb2YgdHdvLFxuICAvLyB0aGUgY2hhcmFjdGVyIHZhbHVlIG9mIHRoZSBmaW5hbCBjaGFyYWN0ZXIgaXMgZW5jb2RlZCBhcyBhIDYtYml0IGJpbmFyeSBudW1iZXIuXG4gIGlmICh0aGlzLmRhdGEubGVuZ3RoICUgMikge1xuICAgIGJpdEJ1ZmZlci5wdXQoQUxQSEFfTlVNX0NIQVJTLmluZGV4T2YodGhpcy5kYXRhW2ldKSwgNilcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFscGhhbnVtZXJpY0RhdGFcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alphanumeric-data.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-buffer.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-buffer.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function BitBuffer() {\n  this.buffer = [];\n  this.length = 0;\n}\nBitBuffer.prototype = {\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;\n  },\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) === 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n};\nmodule.exports = BitBuffer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9iaXQtYnVmZmVyLmpzPzA5YTEiXSwibmFtZXMiOlsiQml0QnVmZmVyIiwiYnVmZmVyIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiZ2V0IiwiaW5kZXgiLCJidWZJbmRleCIsIk1hdGgiLCJmbG9vciIsInB1dCIsIm51bSIsImkiLCJwdXRCaXQiLCJnZXRMZW5ndGhJbkJpdHMiLCJiaXQiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsU0FBU0EsQ0FBQSxFQUFJO0VBQ3BCLElBQUksQ0FBQ0MsTUFBTSxHQUFHLEVBQUU7RUFDaEIsSUFBSSxDQUFDQyxNQUFNLEdBQUcsQ0FBQztBQUNqQjtBQUVBRixTQUFTLENBQUNHLFNBQVMsR0FBRztFQUVwQkMsR0FBRyxFQUFFLFNBQUFBLENBQVVDLEtBQUssRUFBRTtJQUNwQixNQUFNQyxRQUFRLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDSCxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ3RDLE9BQU8sQ0FBRSxJQUFJLENBQUNKLE1BQU0sQ0FBQ0ssUUFBUSxDQUFDLEtBQU0sQ0FBQyxHQUFHRCxLQUFLLEdBQUcsQ0FBRSxHQUFJLENBQUMsTUFBTSxDQUFDO0VBQ2hFLENBQUM7RUFFREksR0FBRyxFQUFFLFNBQUFBLENBQVVDLEdBQUcsRUFBRVIsTUFBTSxFQUFFO0lBQzFCLEtBQUssSUFBSVMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHVCxNQUFNLEVBQUVTLENBQUMsRUFBRSxFQUFFO01BQy9CLElBQUksQ0FBQ0MsTUFBTSxDQUFDLENBQUVGLEdBQUcsS0FBTVIsTUFBTSxHQUFHUyxDQUFDLEdBQUcsQ0FBRSxHQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckQ7RUFDRixDQUFDO0VBRURFLGVBQWUsRUFBRSxTQUFBQSxDQUFBLEVBQVk7SUFDM0IsT0FBTyxJQUFJLENBQUNYLE1BQU07RUFDcEIsQ0FBQztFQUVEVSxNQUFNLEVBQUUsU0FBQUEsQ0FBVUUsR0FBRyxFQUFFO0lBQ3JCLE1BQU1SLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDTixNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzVDLElBQUksSUFBSSxDQUFDRCxNQUFNLENBQUNDLE1BQU0sSUFBSUksUUFBUSxFQUFFO01BQ2xDLElBQUksQ0FBQ0wsTUFBTSxDQUFDYyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3JCO0lBRUEsSUFBSUQsR0FBRyxFQUFFO01BQ1AsSUFBSSxDQUFDYixNQUFNLENBQUNLLFFBQVEsQ0FBQyxJQUFLLElBQUksS0FBTSxJQUFJLENBQUNKLE1BQU0sR0FBRyxDQUFHO0lBQ3ZEO0lBRUEsSUFBSSxDQUFDQSxNQUFNLEVBQUU7RUFDZjtBQUNGLENBQUM7QUFFRGMsTUFBTSxDQUFDQyxPQUFPLEdBQUdqQixTQUFTIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvYml0LWJ1ZmZlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEJpdEJ1ZmZlciAoKSB7XG4gIHRoaXMuYnVmZmVyID0gW11cbiAgdGhpcy5sZW5ndGggPSAwXG59XG5cbkJpdEJ1ZmZlci5wcm90b3R5cGUgPSB7XG5cbiAgZ2V0OiBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICBjb25zdCBidWZJbmRleCA9IE1hdGguZmxvb3IoaW5kZXggLyA4KVxuICAgIHJldHVybiAoKHRoaXMuYnVmZmVyW2J1ZkluZGV4XSA+Pj4gKDcgLSBpbmRleCAlIDgpKSAmIDEpID09PSAxXG4gIH0sXG5cbiAgcHV0OiBmdW5jdGlvbiAobnVtLCBsZW5ndGgpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnB1dEJpdCgoKG51bSA+Pj4gKGxlbmd0aCAtIGkgLSAxKSkgJiAxKSA9PT0gMSlcbiAgICB9XG4gIH0sXG5cbiAgZ2V0TGVuZ3RoSW5CaXRzOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMubGVuZ3RoXG4gIH0sXG5cbiAgcHV0Qml0OiBmdW5jdGlvbiAoYml0KSB7XG4gICAgY29uc3QgYnVmSW5kZXggPSBNYXRoLmZsb29yKHRoaXMubGVuZ3RoIC8gOClcbiAgICBpZiAodGhpcy5idWZmZXIubGVuZ3RoIDw9IGJ1ZkluZGV4KSB7XG4gICAgICB0aGlzLmJ1ZmZlci5wdXNoKDApXG4gICAgfVxuXG4gICAgaWYgKGJpdCkge1xuICAgICAgdGhpcy5idWZmZXJbYnVmSW5kZXhdIHw9ICgweDgwID4+PiAodGhpcy5sZW5ndGggJSA4KSlcbiAgICB9XG5cbiAgICB0aGlzLmxlbmd0aCsrXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCaXRCdWZmZXJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-buffer.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-matrix.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-matrix.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0');\n  }\n  this.size = size;\n  this.data = new Uint8Array(size * size);\n  this.reservedBit = new Uint8Array(size * size);\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col;\n  this.data[index] = value;\n  if (reserved) this.reservedBit[index] = true;\n};\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col];\n};\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value;\n};\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col];\n};\nmodule.exports = BitMatrix;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9iaXQtbWF0cml4LmpzPzcyNDkiXSwibmFtZXMiOlsiQml0TWF0cml4Iiwic2l6ZSIsIkVycm9yIiwiZGF0YSIsIlVpbnQ4QXJyYXkiLCJyZXNlcnZlZEJpdCIsInByb3RvdHlwZSIsInNldCIsInJvdyIsImNvbCIsInZhbHVlIiwicmVzZXJ2ZWQiLCJpbmRleCIsImdldCIsInhvciIsImlzUmVzZXJ2ZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0EsU0FBU0EsQ0FBRUMsSUFBSSxFQUFFO0VBQ3hCLElBQUksQ0FBQ0EsSUFBSSxJQUFJQSxJQUFJLEdBQUcsQ0FBQyxFQUFFO0lBQ3JCLE1BQU0sSUFBSUMsS0FBSyxDQUFDLG1EQUFtRCxDQUFDO0VBQ3RFO0VBRUEsSUFBSSxDQUFDRCxJQUFJLEdBQUdBLElBQUk7RUFDaEIsSUFBSSxDQUFDRSxJQUFJLEdBQUcsSUFBSUMsVUFBVSxDQUFDSCxJQUFJLEdBQUdBLElBQUksQ0FBQztFQUN2QyxJQUFJLENBQUNJLFdBQVcsR0FBRyxJQUFJRCxVQUFVLENBQUNILElBQUksR0FBR0EsSUFBSSxDQUFDO0FBQ2hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRCxTQUFTLENBQUNNLFNBQVMsQ0FBQ0MsR0FBRyxHQUFHLFVBQVVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRTtFQUM3RCxNQUFNQyxLQUFLLEdBQUdKLEdBQUcsR0FBRyxJQUFJLENBQUNQLElBQUksR0FBR1EsR0FBRztFQUNuQyxJQUFJLENBQUNOLElBQUksQ0FBQ1MsS0FBSyxDQUFDLEdBQUdGLEtBQUs7RUFDeEIsSUFBSUMsUUFBUSxFQUFFLElBQUksQ0FBQ04sV0FBVyxDQUFDTyxLQUFLLENBQUMsR0FBRyxJQUFJO0FBQzlDLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQVosU0FBUyxDQUFDTSxTQUFTLENBQUNPLEdBQUcsR0FBRyxVQUFVTCxHQUFHLEVBQUVDLEdBQUcsRUFBRTtFQUM1QyxPQUFPLElBQUksQ0FBQ04sSUFBSSxDQUFDSyxHQUFHLEdBQUcsSUFBSSxDQUFDUCxJQUFJLEdBQUdRLEdBQUcsQ0FBQztBQUN6QyxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQVQsU0FBUyxDQUFDTSxTQUFTLENBQUNRLEdBQUcsR0FBRyxVQUFVTixHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSyxFQUFFO0VBQ25ELElBQUksQ0FBQ1AsSUFBSSxDQUFDSyxHQUFHLEdBQUcsSUFBSSxDQUFDUCxJQUFJLEdBQUdRLEdBQUcsQ0FBQyxJQUFJQyxLQUFLO0FBQzNDLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQVYsU0FBUyxDQUFDTSxTQUFTLENBQUNTLFVBQVUsR0FBRyxVQUFVUCxHQUFHLEVBQUVDLEdBQUcsRUFBRTtFQUNuRCxPQUFPLElBQUksQ0FBQ0osV0FBVyxDQUFDRyxHQUFHLEdBQUcsSUFBSSxDQUFDUCxJQUFJLEdBQUdRLEdBQUcsQ0FBQztBQUNoRCxDQUFDO0FBRURPLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHakIsU0FBUyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC11aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1tYXRyaXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlciBjbGFzcyB0byBoYW5kbGUgUVIgQ29kZSBzeW1ib2wgbW9kdWxlc1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBzaXplIFN5bWJvbCBzaXplXG4gKi9cbmZ1bmN0aW9uIEJpdE1hdHJpeCAoc2l6ZSkge1xuICBpZiAoIXNpemUgfHwgc2l6ZSA8IDEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0JpdE1hdHJpeCBzaXplIG11c3QgYmUgZGVmaW5lZCBhbmQgZ3JlYXRlciB0aGFuIDAnKVxuICB9XG5cbiAgdGhpcy5zaXplID0gc2l6ZVxuICB0aGlzLmRhdGEgPSBuZXcgVWludDhBcnJheShzaXplICogc2l6ZSlcbiAgdGhpcy5yZXNlcnZlZEJpdCA9IG5ldyBVaW50OEFycmF5KHNpemUgKiBzaXplKVxufVxuXG4vKipcbiAqIFNldCBiaXQgdmFsdWUgYXQgc3BlY2lmaWVkIGxvY2F0aW9uXG4gKiBJZiByZXNlcnZlZCBmbGFnIGlzIHNldCwgdGhpcyBiaXQgd2lsbCBiZSBpZ25vcmVkIGR1cmluZyBtYXNraW5nIHByb2Nlc3NcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gIHJvd1xuICogQHBhcmFtIHtOdW1iZXJ9ICBjb2xcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdmFsdWVcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gcmVzZXJ2ZWRcbiAqL1xuQml0TWF0cml4LnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAocm93LCBjb2wsIHZhbHVlLCByZXNlcnZlZCkge1xuICBjb25zdCBpbmRleCA9IHJvdyAqIHRoaXMuc2l6ZSArIGNvbFxuICB0aGlzLmRhdGFbaW5kZXhdID0gdmFsdWVcbiAgaWYgKHJlc2VydmVkKSB0aGlzLnJlc2VydmVkQml0W2luZGV4XSA9IHRydWVcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGJpdCB2YWx1ZSBhdCBzcGVjaWZpZWQgbG9jYXRpb25cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICByb3dcbiAqIEBwYXJhbSAge051bWJlcn0gIGNvbFxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xuQml0TWF0cml4LnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAocm93LCBjb2wpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YVtyb3cgKiB0aGlzLnNpemUgKyBjb2xdXG59XG5cbi8qKlxuICogQXBwbGllcyB4b3Igb3BlcmF0b3IgYXQgc3BlY2lmaWVkIGxvY2F0aW9uXG4gKiAodXNlZCBkdXJpbmcgbWFza2luZyBwcm9jZXNzKVxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSAgcm93XG4gKiBAcGFyYW0ge051bWJlcn0gIGNvbFxuICogQHBhcmFtIHtCb29sZWFufSB2YWx1ZVxuICovXG5CaXRNYXRyaXgucHJvdG90eXBlLnhvciA9IGZ1bmN0aW9uIChyb3csIGNvbCwgdmFsdWUpIHtcbiAgdGhpcy5kYXRhW3JvdyAqIHRoaXMuc2l6ZSArIGNvbF0gXj0gdmFsdWVcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBiaXQgYXQgc3BlY2lmaWVkIGxvY2F0aW9uIGlzIHJlc2VydmVkXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9ICAgcm93XG4gKiBAcGFyYW0ge051bWJlcn0gICBjb2xcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbkJpdE1hdHJpeC5wcm90b3R5cGUuaXNSZXNlcnZlZCA9IGZ1bmN0aW9uIChyb3csIGNvbCkge1xuICByZXR1cm4gdGhpcy5yZXNlcnZlZEJpdFtyb3cgKiB0aGlzLnNpemUgKyBjb2xdXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQml0TWF0cml4XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-matrix.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/byte-data.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/byte-data.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const encodeUtf8 = __webpack_require__(/*! encode-utf8 */ \"./node_modules/encode-utf8/index.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\nfunction ByteData(data) {\n  this.mode = Mode.BYTE;\n  if (typeof data === 'string') {\n    data = encodeUtf8(data);\n  }\n  this.data = new Uint8Array(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\nmodule.exports = ByteData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9ieXRlLWRhdGEuanM/MzdiNyJdLCJuYW1lcyI6WyJlbmNvZGVVdGY4IiwicmVxdWlyZSIsIk1vZGUiLCJCeXRlRGF0YSIsImRhdGEiLCJtb2RlIiwiQllURSIsIlVpbnQ4QXJyYXkiLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwibCIsInB1dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVUsR0FBR0MsbUJBQU8sQ0FBQyx3REFBYSxDQUFDO0FBQ3pDLE1BQU1DLElBQUksR0FBR0QsbUJBQU8sQ0FBQywyRkFBUSxDQUFDO0FBRTlCLFNBQVNFLFFBQVFBLENBQUVDLElBQUksRUFBRTtFQUN2QixJQUFJLENBQUNDLElBQUksR0FBR0gsSUFBSSxDQUFDSSxJQUFJO0VBQ3JCLElBQUksT0FBUUYsSUFBSyxLQUFLLFFBQVEsRUFBRTtJQUM5QkEsSUFBSSxHQUFHSixVQUFVLENBQUNJLElBQUksQ0FBQztFQUN6QjtFQUNBLElBQUksQ0FBQ0EsSUFBSSxHQUFHLElBQUlHLFVBQVUsQ0FBQ0gsSUFBSSxDQUFDO0FBQ2xDO0FBRUFELFFBQVEsQ0FBQ0ssYUFBYSxHQUFHLFNBQVNBLGFBQWFBLENBQUVDLE1BQU0sRUFBRTtFQUN2RCxPQUFPQSxNQUFNLEdBQUcsQ0FBQztBQUNuQixDQUFDO0FBRUROLFFBQVEsQ0FBQ08sU0FBUyxDQUFDQyxTQUFTLEdBQUcsU0FBU0EsU0FBU0EsQ0FBQSxFQUFJO0VBQ25ELE9BQU8sSUFBSSxDQUFDUCxJQUFJLENBQUNLLE1BQU07QUFDekIsQ0FBQztBQUVETixRQUFRLENBQUNPLFNBQVMsQ0FBQ0YsYUFBYSxHQUFHLFNBQVNBLGFBQWFBLENBQUEsRUFBSTtFQUMzRCxPQUFPTCxRQUFRLENBQUNLLGFBQWEsQ0FBQyxJQUFJLENBQUNKLElBQUksQ0FBQ0ssTUFBTSxDQUFDO0FBQ2pELENBQUM7QUFFRE4sUUFBUSxDQUFDTyxTQUFTLENBQUNFLEtBQUssR0FBRyxVQUFVQyxTQUFTLEVBQUU7RUFDOUMsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQyxDQUFDLEdBQUcsSUFBSSxDQUFDWCxJQUFJLENBQUNLLE1BQU0sRUFBRUssQ0FBQyxHQUFHQyxDQUFDLEVBQUVELENBQUMsRUFBRSxFQUFFO0lBQ2hERCxTQUFTLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUNaLElBQUksQ0FBQ1UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQ2hDO0FBQ0YsQ0FBQztBQUVERyxNQUFNLENBQUNDLE9BQU8sR0FBR2YsUUFBUSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC11aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2J5dGUtZGF0YS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVuY29kZVV0ZjggPSByZXF1aXJlKCdlbmNvZGUtdXRmOCcpXG5jb25zdCBNb2RlID0gcmVxdWlyZSgnLi9tb2RlJylcblxuZnVuY3Rpb24gQnl0ZURhdGEgKGRhdGEpIHtcbiAgdGhpcy5tb2RlID0gTW9kZS5CWVRFXG4gIGlmICh0eXBlb2YgKGRhdGEpID09PSAnc3RyaW5nJykge1xuICAgIGRhdGEgPSBlbmNvZGVVdGY4KGRhdGEpXG4gIH1cbiAgdGhpcy5kYXRhID0gbmV3IFVpbnQ4QXJyYXkoZGF0YSlcbn1cblxuQnl0ZURhdGEuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKGxlbmd0aCkge1xuICByZXR1cm4gbGVuZ3RoICogOFxufVxuXG5CeXRlRGF0YS5wcm90b3R5cGUuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gZ2V0TGVuZ3RoICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YS5sZW5ndGhcbn1cblxuQnl0ZURhdGEucHJvdG90eXBlLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoICgpIHtcbiAgcmV0dXJuIEJ5dGVEYXRhLmdldEJpdHNMZW5ndGgodGhpcy5kYXRhLmxlbmd0aClcbn1cblxuQnl0ZURhdGEucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gKGJpdEJ1ZmZlcikge1xuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuZGF0YS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBiaXRCdWZmZXIucHV0KHRoaXMuZGF0YVtpXSwgOClcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJ5dGVEYXRhXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/byte-data.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-code.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-code.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst EC_BLOCKS_TABLE = [\n// L  M  Q  H\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];\nconst EC_CODEWORDS_TABLE = [\n// L  M  Q  H\n7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];\n\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\nexports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n    case ECLevel.M:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n    case ECLevel.Q:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n    case ECLevel.H:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};\n\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\nexports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n    case ECLevel.M:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n    case ECLevel.Q:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n    case ECLevel.H:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-code.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-level.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-level.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.L = {\n  bit: 1\n};\nexports.M = {\n  bit: 0\n};\nexports.Q = {\n  bit: 3\n};\nexports.H = {\n  bit: 2\n};\nfunction fromString(string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string');\n  }\n  const lcStr = string.toLowerCase();\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L;\n    case 'm':\n    case 'medium':\n      return exports.M;\n    case 'q':\n    case 'quartile':\n      return exports.Q;\n    case 'h':\n    case 'high':\n      return exports.H;\n    default:\n      throw new Error('Unknown EC Level: ' + string);\n  }\n}\nexports.isValid = function isValid(level) {\n  return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;\n};\nexports.from = function from(value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value;\n  }\n  try {\n    return fromString(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9lcnJvci1jb3JyZWN0aW9uLWxldmVsLmpzP2VmZmYiXSwibmFtZXMiOlsiZXhwb3J0cyIsIkwiLCJiaXQiLCJNIiwiUSIsIkgiLCJmcm9tU3RyaW5nIiwic3RyaW5nIiwiRXJyb3IiLCJsY1N0ciIsInRvTG93ZXJDYXNlIiwiaXNWYWxpZCIsImxldmVsIiwiZnJvbSIsInZhbHVlIiwiZGVmYXVsdFZhbHVlIiwiZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQ0MsQ0FBQyxHQUFHO0VBQUVDLEdBQUcsRUFBRTtBQUFFLENBQUM7QUFDdEJGLE9BQU8sQ0FBQ0csQ0FBQyxHQUFHO0VBQUVELEdBQUcsRUFBRTtBQUFFLENBQUM7QUFDdEJGLE9BQU8sQ0FBQ0ksQ0FBQyxHQUFHO0VBQUVGLEdBQUcsRUFBRTtBQUFFLENBQUM7QUFDdEJGLE9BQU8sQ0FBQ0ssQ0FBQyxHQUFHO0VBQUVILEdBQUcsRUFBRTtBQUFFLENBQUM7QUFFdEIsU0FBU0ksVUFBVUEsQ0FBRUMsTUFBTSxFQUFFO0VBQzNCLElBQUksT0FBT0EsTUFBTSxLQUFLLFFBQVEsRUFBRTtJQUM5QixNQUFNLElBQUlDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQztFQUMxQztFQUVBLE1BQU1DLEtBQUssR0FBR0YsTUFBTSxDQUFDRyxXQUFXLENBQUMsQ0FBQztFQUVsQyxRQUFRRCxLQUFLO0lBQ1gsS0FBSyxHQUFHO0lBQ1IsS0FBSyxLQUFLO01BQ1IsT0FBT1QsT0FBTyxDQUFDQyxDQUFDO0lBRWxCLEtBQUssR0FBRztJQUNSLEtBQUssUUFBUTtNQUNYLE9BQU9ELE9BQU8sQ0FBQ0csQ0FBQztJQUVsQixLQUFLLEdBQUc7SUFDUixLQUFLLFVBQVU7TUFDYixPQUFPSCxPQUFPLENBQUNJLENBQUM7SUFFbEIsS0FBSyxHQUFHO0lBQ1IsS0FBSyxNQUFNO01BQ1QsT0FBT0osT0FBTyxDQUFDSyxDQUFDO0lBRWxCO01BQ0UsTUFBTSxJQUFJRyxLQUFLLENBQUMsb0JBQW9CLEdBQUdELE1BQU0sQ0FBQztFQUNsRDtBQUNGO0FBRUFQLE9BQU8sQ0FBQ1csT0FBTyxHQUFHLFNBQVNBLE9BQU9BLENBQUVDLEtBQUssRUFBRTtFQUN6QyxPQUFPQSxLQUFLLElBQUksT0FBT0EsS0FBSyxDQUFDVixHQUFHLEtBQUssV0FBVyxJQUM5Q1UsS0FBSyxDQUFDVixHQUFHLElBQUksQ0FBQyxJQUFJVSxLQUFLLENBQUNWLEdBQUcsR0FBRyxDQUFDO0FBQ25DLENBQUM7QUFFREYsT0FBTyxDQUFDYSxJQUFJLEdBQUcsU0FBU0EsSUFBSUEsQ0FBRUMsS0FBSyxFQUFFQyxZQUFZLEVBQUU7RUFDakQsSUFBSWYsT0FBTyxDQUFDVyxPQUFPLENBQUNHLEtBQUssQ0FBQyxFQUFFO0lBQzFCLE9BQU9BLEtBQUs7RUFDZDtFQUVBLElBQUk7SUFDRixPQUFPUixVQUFVLENBQUNRLEtBQUssQ0FBQztFQUMxQixDQUFDLENBQUMsT0FBT0UsQ0FBQyxFQUFFO0lBQ1YsT0FBT0QsWUFBWTtFQUNyQjtBQUNGLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9lcnJvci1jb3JyZWN0aW9uLWxldmVsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5MID0geyBiaXQ6IDEgfVxuZXhwb3J0cy5NID0geyBiaXQ6IDAgfVxuZXhwb3J0cy5RID0geyBiaXQ6IDMgfVxuZXhwb3J0cy5IID0geyBiaXQ6IDIgfVxuXG5mdW5jdGlvbiBmcm9tU3RyaW5nIChzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQYXJhbSBpcyBub3QgYSBzdHJpbmcnKVxuICB9XG5cbiAgY29uc3QgbGNTdHIgPSBzdHJpbmcudG9Mb3dlckNhc2UoKVxuXG4gIHN3aXRjaCAobGNTdHIpIHtcbiAgICBjYXNlICdsJzpcbiAgICBjYXNlICdsb3cnOlxuICAgICAgcmV0dXJuIGV4cG9ydHMuTFxuXG4gICAgY2FzZSAnbSc6XG4gICAgY2FzZSAnbWVkaXVtJzpcbiAgICAgIHJldHVybiBleHBvcnRzLk1cblxuICAgIGNhc2UgJ3EnOlxuICAgIGNhc2UgJ3F1YXJ0aWxlJzpcbiAgICAgIHJldHVybiBleHBvcnRzLlFcblxuICAgIGNhc2UgJ2gnOlxuICAgIGNhc2UgJ2hpZ2gnOlxuICAgICAgcmV0dXJuIGV4cG9ydHMuSFxuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBFQyBMZXZlbDogJyArIHN0cmluZylcbiAgfVxufVxuXG5leHBvcnRzLmlzVmFsaWQgPSBmdW5jdGlvbiBpc1ZhbGlkIChsZXZlbCkge1xuICByZXR1cm4gbGV2ZWwgJiYgdHlwZW9mIGxldmVsLmJpdCAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICBsZXZlbC5iaXQgPj0gMCAmJiBsZXZlbC5iaXQgPCA0XG59XG5cbmV4cG9ydHMuZnJvbSA9IGZ1bmN0aW9uIGZyb20gKHZhbHVlLCBkZWZhdWx0VmFsdWUpIHtcbiAgaWYgKGV4cG9ydHMuaXNWYWxpZCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcodmFsdWUpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-level.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/finder-pattern.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/finder-pattern.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const getSymbolSize = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\").getSymbolSize;\nconst FINDER_PATTERN_SIZE = 7;\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions(version) {\n  const size = getSymbolSize(version);\n  return [\n  // top-left\n  [0, 0],\n  // top-right\n  [size - FINDER_PATTERN_SIZE, 0],\n  // bottom-left\n  [0, size - FINDER_PATTERN_SIZE]];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9maW5kZXItcGF0dGVybi5qcz9hMjdkIl0sIm5hbWVzIjpbImdldFN5bWJvbFNpemUiLCJyZXF1aXJlIiwiRklOREVSX1BBVFRFUk5fU0laRSIsImV4cG9ydHMiLCJnZXRQb3NpdGlvbnMiLCJ2ZXJzaW9uIiwic2l6ZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsYUFBYSxHQUFHQyxtQkFBTyxDQUFDLDZGQUFTLENBQUMsQ0FBQ0QsYUFBYTtBQUN0RCxNQUFNRSxtQkFBbUIsR0FBRyxDQUFDOztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxPQUFPLENBQUNDLFlBQVksR0FBRyxTQUFTQSxZQUFZQSxDQUFFQyxPQUFPLEVBQUU7RUFDckQsTUFBTUMsSUFBSSxHQUFHTixhQUFhLENBQUNLLE9BQU8sQ0FBQztFQUVuQyxPQUFPO0VBQ0w7RUFDQSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDTjtFQUNBLENBQUNDLElBQUksR0FBR0osbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO0VBQy9CO0VBQ0EsQ0FBQyxDQUFDLEVBQUVJLElBQUksR0FBR0osbUJBQW1CLENBQUMsQ0FDaEM7QUFDSCxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvZmluZGVyLXBhdHRlcm4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnZXRTeW1ib2xTaXplID0gcmVxdWlyZSgnLi91dGlscycpLmdldFN5bWJvbFNpemVcbmNvbnN0IEZJTkRFUl9QQVRURVJOX1NJWkUgPSA3XG5cbi8qKlxuICogUmV0dXJucyBhbiBhcnJheSBjb250YWluaW5nIHRoZSBwb3NpdGlvbnMgb2YgZWFjaCBmaW5kZXIgcGF0dGVybi5cbiAqIEVhY2ggYXJyYXkncyBlbGVtZW50IHJlcHJlc2VudCB0aGUgdG9wLWxlZnQgcG9pbnQgb2YgdGhlIHBhdHRlcm4gYXMgKHgsIHkpIGNvb3JkaW5hdGVzXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB2ZXJzaW9uIFFSIENvZGUgdmVyc2lvblxuICogQHJldHVybiB7QXJyYXl9ICAgICAgICAgIEFycmF5IG9mIGNvb3JkaW5hdGVzXG4gKi9cbmV4cG9ydHMuZ2V0UG9zaXRpb25zID0gZnVuY3Rpb24gZ2V0UG9zaXRpb25zICh2ZXJzaW9uKSB7XG4gIGNvbnN0IHNpemUgPSBnZXRTeW1ib2xTaXplKHZlcnNpb24pXG5cbiAgcmV0dXJuIFtcbiAgICAvLyB0b3AtbGVmdFxuICAgIFswLCAwXSxcbiAgICAvLyB0b3AtcmlnaHRcbiAgICBbc2l6ZSAtIEZJTkRFUl9QQVRURVJOX1NJWkUsIDBdLFxuICAgIC8vIGJvdHRvbS1sZWZ0XG4gICAgWzAsIHNpemUgLSBGSU5ERVJfUEFUVEVSTl9TSVpFXVxuICBdXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/finder-pattern.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/format-info.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/format-info.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\");\nconst G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\nconst G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\nconst G15_BCH = Utils.getBCHDigit(G15);\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n  const data = errorCorrectionLevel.bit << 3 | mask;\n  let d = data << 10;\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= G15 << Utils.getBCHDigit(d) - G15_BCH;\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return (data << 10 | d) ^ G15_MASK;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9mb3JtYXQtaW5mby5qcz8wMmMwIl0sIm5hbWVzIjpbIlV0aWxzIiwicmVxdWlyZSIsIkcxNSIsIkcxNV9NQVNLIiwiRzE1X0JDSCIsImdldEJDSERpZ2l0IiwiZXhwb3J0cyIsImdldEVuY29kZWRCaXRzIiwiZXJyb3JDb3JyZWN0aW9uTGV2ZWwiLCJtYXNrIiwiZGF0YSIsImJpdCIsImQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsbUJBQU8sQ0FBQyw2RkFBUyxDQUFDO0FBRWhDLE1BQU1DLEdBQUcsR0FBSSxDQUFDLElBQUksRUFBRSxHQUFLLENBQUMsSUFBSSxDQUFFLEdBQUksQ0FBQyxJQUFJLENBQUUsR0FBSSxDQUFDLElBQUksQ0FBRSxHQUFJLENBQUMsSUFBSSxDQUFFLEdBQUksQ0FBQyxJQUFJLENBQUUsR0FBSSxDQUFDLElBQUksQ0FBRTtBQUN2RixNQUFNQyxRQUFRLEdBQUksQ0FBQyxJQUFJLEVBQUUsR0FBSyxDQUFDLElBQUksRUFBRyxHQUFJLENBQUMsSUFBSSxFQUFHLEdBQUksQ0FBQyxJQUFJLENBQUUsR0FBSSxDQUFDLElBQUksQ0FBRTtBQUN4RSxNQUFNQyxPQUFPLEdBQUdKLEtBQUssQ0FBQ0ssV0FBVyxDQUFDSCxHQUFHLENBQUM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FJLE9BQU8sQ0FBQ0MsY0FBYyxHQUFHLFNBQVNBLGNBQWNBLENBQUVDLG9CQUFvQixFQUFFQyxJQUFJLEVBQUU7RUFDNUUsTUFBTUMsSUFBSSxHQUFLRixvQkFBb0IsQ0FBQ0csR0FBRyxJQUFJLENBQUMsR0FBSUYsSUFBSztFQUNyRCxJQUFJRyxDQUFDLEdBQUdGLElBQUksSUFBSSxFQUFFO0VBRWxCLE9BQU9WLEtBQUssQ0FBQ0ssV0FBVyxDQUFDTyxDQUFDLENBQUMsR0FBR1IsT0FBTyxJQUFJLENBQUMsRUFBRTtJQUMxQ1EsQ0FBQyxJQUFLVixHQUFHLElBQUtGLEtBQUssQ0FBQ0ssV0FBVyxDQUFDTyxDQUFDLENBQUMsR0FBR1IsT0FBUztFQUNoRDs7RUFFQTtFQUNBO0VBQ0E7RUFDQSxPQUFPLENBQUVNLElBQUksSUFBSSxFQUFFLEdBQUlFLENBQUMsSUFBSVQsUUFBUTtBQUN0QyxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvZm9ybWF0LWluZm8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5jb25zdCBHMTUgPSAoMSA8PCAxMCkgfCAoMSA8PCA4KSB8ICgxIDw8IDUpIHwgKDEgPDwgNCkgfCAoMSA8PCAyKSB8ICgxIDw8IDEpIHwgKDEgPDwgMClcbmNvbnN0IEcxNV9NQVNLID0gKDEgPDwgMTQpIHwgKDEgPDwgMTIpIHwgKDEgPDwgMTApIHwgKDEgPDwgNCkgfCAoMSA8PCAxKVxuY29uc3QgRzE1X0JDSCA9IFV0aWxzLmdldEJDSERpZ2l0KEcxNSlcblxuLyoqXG4gKiBSZXR1cm5zIGZvcm1hdCBpbmZvcm1hdGlvbiB3aXRoIHJlbGF0aXZlIGVycm9yIGNvcnJlY3Rpb24gYml0c1xuICpcbiAqIFRoZSBmb3JtYXQgaW5mb3JtYXRpb24gaXMgYSAxNS1iaXQgc2VxdWVuY2UgY29udGFpbmluZyA1IGRhdGEgYml0cyxcbiAqIHdpdGggMTAgZXJyb3IgY29ycmVjdGlvbiBiaXRzIGNhbGN1bGF0ZWQgdXNpbmcgdGhlICgxNSwgNSkgQkNIIGNvZGUuXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBlcnJvckNvcnJlY3Rpb25MZXZlbCBFcnJvciBjb3JyZWN0aW9uIGxldmVsXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IG1hc2sgICAgICAgICAgICAgICAgIE1hc2sgcGF0dGVyblxuICogQHJldHVybiB7TnVtYmVyfSAgICAgICAgICAgICAgICAgICAgICBFbmNvZGVkIGZvcm1hdCBpbmZvcm1hdGlvbiBiaXRzXG4gKi9cbmV4cG9ydHMuZ2V0RW5jb2RlZEJpdHMgPSBmdW5jdGlvbiBnZXRFbmNvZGVkQml0cyAoZXJyb3JDb3JyZWN0aW9uTGV2ZWwsIG1hc2spIHtcbiAgY29uc3QgZGF0YSA9ICgoZXJyb3JDb3JyZWN0aW9uTGV2ZWwuYml0IDw8IDMpIHwgbWFzaylcbiAgbGV0IGQgPSBkYXRhIDw8IDEwXG5cbiAgd2hpbGUgKFV0aWxzLmdldEJDSERpZ2l0KGQpIC0gRzE1X0JDSCA+PSAwKSB7XG4gICAgZCBePSAoRzE1IDw8IChVdGlscy5nZXRCQ0hEaWdpdChkKSAtIEcxNV9CQ0gpKVxuICB9XG5cbiAgLy8geG9yIGZpbmFsIGRhdGEgd2l0aCBtYXNrIHBhdHRlcm4gaW4gb3JkZXIgdG8gZW5zdXJlIHRoYXRcbiAgLy8gbm8gY29tYmluYXRpb24gb2YgRXJyb3IgQ29ycmVjdGlvbiBMZXZlbCBhbmQgZGF0YSBtYXNrIHBhdHRlcm5cbiAgLy8gd2lsbCByZXN1bHQgaW4gYW4gYWxsLXplcm8gZGF0YSBzdHJpbmdcbiAgcmV0dXJuICgoZGF0YSA8PCAxMCkgfCBkKSBeIEcxNV9NQVNLXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/format-info.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/galois-field.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/galois-field.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const EXP_TABLE = new Uint8Array(512);\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */;\n(function initTables() {\n  let x = 1;\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x;\n    LOG_TABLE[x] = i;\n    x <<= 1; // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) {\n      // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D;\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255];\n  }\n})();\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log(n) {\n  if (n < 1) throw new Error('log(' + n + ')');\n  return LOG_TABLE[n];\n};\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp(n) {\n  return EXP_TABLE[n];\n};\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul(x, y) {\n  if (x === 0 || y === 0) return 0;\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9nYWxvaXMtZmllbGQuanM/ZWQzMyJdLCJuYW1lcyI6WyJFWFBfVEFCTEUiLCJVaW50OEFycmF5IiwiTE9HX1RBQkxFIiwiaW5pdFRhYmxlcyIsIngiLCJpIiwiZXhwb3J0cyIsImxvZyIsIm4iLCJFcnJvciIsImV4cCIsIm11bCIsInkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBRyxJQUFJQyxVQUFVLENBQUMsR0FBRyxDQUFDO0FBQ3JDLE1BQU1DLFNBQVMsR0FBRyxJQUFJRCxVQUFVLENBQUMsR0FBRztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBUEE7QUFRRSxVQUFTRSxVQUFVQSxDQUFBLEVBQUk7RUFDdkIsSUFBSUMsQ0FBQyxHQUFHLENBQUM7RUFDVCxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxHQUFHLEVBQUVBLENBQUMsRUFBRSxFQUFFO0lBQzVCTCxTQUFTLENBQUNLLENBQUMsQ0FBQyxHQUFHRCxDQUFDO0lBQ2hCRixTQUFTLENBQUNFLENBQUMsQ0FBQyxHQUFHQyxDQUFDO0lBRWhCRCxDQUFDLEtBQUssQ0FBQyxFQUFDOztJQUVSO0lBQ0E7SUFDQSxJQUFJQSxDQUFDLEdBQUcsS0FBSyxFQUFFO01BQUU7TUFDZkEsQ0FBQyxJQUFJLEtBQUs7SUFDWjtFQUNGOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsR0FBRyxFQUFFQSxDQUFDLEdBQUcsR0FBRyxFQUFFQSxDQUFDLEVBQUUsRUFBRTtJQUM5QkwsU0FBUyxDQUFDSyxDQUFDLENBQUMsR0FBR0wsU0FBUyxDQUFDSyxDQUFDLEdBQUcsR0FBRyxDQUFDO0VBQ25DO0FBQ0YsQ0FBQyxFQUFDLENBQUM7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLE9BQU8sQ0FBQ0MsR0FBRyxHQUFHLFNBQVNBLEdBQUdBLENBQUVDLENBQUMsRUFBRTtFQUM3QixJQUFJQSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sSUFBSUMsS0FBSyxDQUFDLE1BQU0sR0FBR0QsQ0FBQyxHQUFHLEdBQUcsQ0FBQztFQUM1QyxPQUFPTixTQUFTLENBQUNNLENBQUMsQ0FBQztBQUNyQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRixPQUFPLENBQUNJLEdBQUcsR0FBRyxTQUFTQSxHQUFHQSxDQUFFRixDQUFDLEVBQUU7RUFDN0IsT0FBT1IsU0FBUyxDQUFDUSxDQUFDLENBQUM7QUFDckIsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRixPQUFPLENBQUNLLEdBQUcsR0FBRyxTQUFTQSxHQUFHQSxDQUFFUCxDQUFDLEVBQUVRLENBQUMsRUFBRTtFQUNoQyxJQUFJUixDQUFDLEtBQUssQ0FBQyxJQUFJUSxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQzs7RUFFaEM7RUFDQTtFQUNBLE9BQU9aLFNBQVMsQ0FBQ0UsU0FBUyxDQUFDRSxDQUFDLENBQUMsR0FBR0YsU0FBUyxDQUFDVSxDQUFDLENBQUMsQ0FBQztBQUMvQyxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvZ2Fsb2lzLWZpZWxkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRVhQX1RBQkxFID0gbmV3IFVpbnQ4QXJyYXkoNTEyKVxuY29uc3QgTE9HX1RBQkxFID0gbmV3IFVpbnQ4QXJyYXkoMjU2KVxuLyoqXG4gKiBQcmVjb21wdXRlIHRoZSBsb2cgYW5kIGFudGktbG9nIHRhYmxlcyBmb3IgZmFzdGVyIGNvbXB1dGF0aW9uIGxhdGVyXG4gKlxuICogRm9yIGVhY2ggcG9zc2libGUgdmFsdWUgaW4gdGhlIGdhbG9pcyBmaWVsZCAyXjgsIHdlIHdpbGwgcHJlLWNvbXB1dGVcbiAqIHRoZSBsb2dhcml0aG0gYW5kIGFudGktbG9nYXJpdGhtIChleHBvbmVudGlhbCkgb2YgdGhpcyB2YWx1ZVxuICpcbiAqIHJlZiB7QGxpbmsgaHR0cHM6Ly9lbi53aWtpdmVyc2l0eS5vcmcvd2lraS9SZWVkJUUyJTgwJTkzU29sb21vbl9jb2Rlc19mb3JfY29kZXJzI0ludHJvZHVjdGlvbl90b19tYXRoZW1hdGljYWxfZmllbGRzfVxuICovXG47KGZ1bmN0aW9uIGluaXRUYWJsZXMgKCkge1xuICBsZXQgeCA9IDFcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAyNTU7IGkrKykge1xuICAgIEVYUF9UQUJMRVtpXSA9IHhcbiAgICBMT0dfVEFCTEVbeF0gPSBpXG5cbiAgICB4IDw8PSAxIC8vIG11bHRpcGx5IGJ5IDJcblxuICAgIC8vIFRoZSBRUiBjb2RlIHNwZWNpZmljYXRpb24gc2F5cyB0byB1c2UgYnl0ZS13aXNlIG1vZHVsbyAxMDAwMTExMDEgYXJpdGhtZXRpYy5cbiAgICAvLyBUaGlzIG1lYW5zIHRoYXQgd2hlbiBhIG51bWJlciBpcyAyNTYgb3IgbGFyZ2VyLCBpdCBzaG91bGQgYmUgWE9SZWQgd2l0aCAweDExRC5cbiAgICBpZiAoeCAmIDB4MTAwKSB7IC8vIHNpbWlsYXIgdG8geCA+PSAyNTYsIGJ1dCBhIGxvdCBmYXN0ZXIgKGJlY2F1c2UgMHgxMDAgPT0gMjU2KVxuICAgICAgeCBePSAweDExRFxuICAgIH1cbiAgfVxuXG4gIC8vIE9wdGltaXphdGlvbjogZG91YmxlIHRoZSBzaXplIG9mIHRoZSBhbnRpLWxvZyB0YWJsZSBzbyB0aGF0IHdlIGRvbid0IG5lZWQgdG8gbW9kIDI1NSB0b1xuICAvLyBzdGF5IGluc2lkZSB0aGUgYm91bmRzIChiZWNhdXNlIHdlIHdpbGwgbWFpbmx5IHVzZSB0aGlzIHRhYmxlIGZvciB0aGUgbXVsdGlwbGljYXRpb24gb2ZcbiAgLy8gdHdvIEdGIG51bWJlcnMsIG5vIG1vcmUpLlxuICAvLyBAc2VlIHtAbGluayBtdWx9XG4gIGZvciAobGV0IGkgPSAyNTU7IGkgPCA1MTI7IGkrKykge1xuICAgIEVYUF9UQUJMRVtpXSA9IEVYUF9UQUJMRVtpIC0gMjU1XVxuICB9XG59KCkpXG5cbi8qKlxuICogUmV0dXJucyBsb2cgdmFsdWUgb2YgbiBpbnNpZGUgR2Fsb2lzIEZpZWxkXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBuXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKi9cbmV4cG9ydHMubG9nID0gZnVuY3Rpb24gbG9nIChuKSB7XG4gIGlmIChuIDwgMSkgdGhyb3cgbmV3IEVycm9yKCdsb2coJyArIG4gKyAnKScpXG4gIHJldHVybiBMT0dfVEFCTEVbbl1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIGFudGktbG9nIHZhbHVlIG9mIG4gaW5zaWRlIEdhbG9pcyBGaWVsZFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gblxuICogQHJldHVybiB7TnVtYmVyfVxuICovXG5leHBvcnRzLmV4cCA9IGZ1bmN0aW9uIGV4cCAobikge1xuICByZXR1cm4gRVhQX1RBQkxFW25dXG59XG5cbi8qKlxuICogTXVsdGlwbGllcyB0d28gbnVtYmVyIGluc2lkZSBHYWxvaXMgRmllbGRcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHhcbiAqIEBwYXJhbSAge051bWJlcn0geVxuICogQHJldHVybiB7TnVtYmVyfVxuICovXG5leHBvcnRzLm11bCA9IGZ1bmN0aW9uIG11bCAoeCwgeSkge1xuICBpZiAoeCA9PT0gMCB8fCB5ID09PSAwKSByZXR1cm4gMFxuXG4gIC8vIHNob3VsZCBiZSBFWFBfVEFCTEVbKExPR19UQUJMRVt4XSArIExPR19UQUJMRVt5XSkgJSAyNTVdIGlmIEVYUF9UQUJMRSB3YXNuJ3Qgb3ZlcnNpemVkXG4gIC8vIEBzZWUge0BsaW5rIGluaXRUYWJsZXN9XG4gIHJldHVybiBFWFBfVEFCTEVbTE9HX1RBQkxFW3hdICsgTE9HX1RBQkxFW3ldXVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/galois-field.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/kanji-data.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/kanji-data.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\nconst Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\");\nfunction KanjiData(data) {\n  this.mode = Mode.KANJI;\n  this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n  return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n  return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function (bitBuffer) {\n  let i;\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i]);\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140;\n\n      // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140;\n    } else {\n      throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' + 'Make sure your charset is UTF-8');\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff);\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13);\n  }\n};\nmodule.exports = KanjiData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9rYW5qaS1kYXRhLmpzPzZjMTkiXSwibmFtZXMiOlsiTW9kZSIsInJlcXVpcmUiLCJVdGlscyIsIkthbmppRGF0YSIsImRhdGEiLCJtb2RlIiwiS0FOSkkiLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwidmFsdWUiLCJ0b1NKSVMiLCJFcnJvciIsInB1dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsbUJBQU8sQ0FBQywyRkFBUSxDQUFDO0FBQzlCLE1BQU1DLEtBQUssR0FBR0QsbUJBQU8sQ0FBQyw2RkFBUyxDQUFDO0FBRWhDLFNBQVNFLFNBQVNBLENBQUVDLElBQUksRUFBRTtFQUN4QixJQUFJLENBQUNDLElBQUksR0FBR0wsSUFBSSxDQUFDTSxLQUFLO0VBQ3RCLElBQUksQ0FBQ0YsSUFBSSxHQUFHQSxJQUFJO0FBQ2xCO0FBRUFELFNBQVMsQ0FBQ0ksYUFBYSxHQUFHLFNBQVNBLGFBQWFBLENBQUVDLE1BQU0sRUFBRTtFQUN4RCxPQUFPQSxNQUFNLEdBQUcsRUFBRTtBQUNwQixDQUFDO0FBRURMLFNBQVMsQ0FBQ00sU0FBUyxDQUFDQyxTQUFTLEdBQUcsU0FBU0EsU0FBU0EsQ0FBQSxFQUFJO0VBQ3BELE9BQU8sSUFBSSxDQUFDTixJQUFJLENBQUNJLE1BQU07QUFDekIsQ0FBQztBQUVETCxTQUFTLENBQUNNLFNBQVMsQ0FBQ0YsYUFBYSxHQUFHLFNBQVNBLGFBQWFBLENBQUEsRUFBSTtFQUM1RCxPQUFPSixTQUFTLENBQUNJLGFBQWEsQ0FBQyxJQUFJLENBQUNILElBQUksQ0FBQ0ksTUFBTSxDQUFDO0FBQ2xELENBQUM7QUFFREwsU0FBUyxDQUFDTSxTQUFTLENBQUNFLEtBQUssR0FBRyxVQUFVQyxTQUFTLEVBQUU7RUFDL0MsSUFBSUMsQ0FBQzs7RUFFTDtFQUNBO0VBQ0E7RUFDQSxLQUFLQSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUcsSUFBSSxDQUFDVCxJQUFJLENBQUNJLE1BQU0sRUFBRUssQ0FBQyxFQUFFLEVBQUU7SUFDckMsSUFBSUMsS0FBSyxHQUFHWixLQUFLLENBQUNhLE1BQU0sQ0FBQyxJQUFJLENBQUNYLElBQUksQ0FBQ1MsQ0FBQyxDQUFDLENBQUM7O0lBRXRDO0lBQ0EsSUFBSUMsS0FBSyxJQUFJLE1BQU0sSUFBSUEsS0FBSyxJQUFJLE1BQU0sRUFBRTtNQUN0QztNQUNBQSxLQUFLLElBQUksTUFBTTs7TUFFakI7SUFDQSxDQUFDLE1BQU0sSUFBSUEsS0FBSyxJQUFJLE1BQU0sSUFBSUEsS0FBSyxJQUFJLE1BQU0sRUFBRTtNQUM3QztNQUNBQSxLQUFLLElBQUksTUFBTTtJQUNqQixDQUFDLE1BQU07TUFDTCxNQUFNLElBQUlFLEtBQUssQ0FDYiwwQkFBMEIsR0FBRyxJQUFJLENBQUNaLElBQUksQ0FBQ1MsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUNoRCxpQ0FBaUMsQ0FBQztJQUN0Qzs7SUFFQTtJQUNBO0lBQ0FDLEtBQUssR0FBSSxDQUFFQSxLQUFLLEtBQUssQ0FBQyxHQUFJLElBQUksSUFBSSxJQUFJLElBQUtBLEtBQUssR0FBRyxJQUFJLENBQUM7O0lBRXhEO0lBQ0FGLFNBQVMsQ0FBQ0ssR0FBRyxDQUFDSCxLQUFLLEVBQUUsRUFBRSxDQUFDO0VBQzFCO0FBQ0YsQ0FBQztBQUVESSxNQUFNLENBQUNDLE9BQU8sR0FBR2hCLFNBQVMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9rYW5qaS1kYXRhLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTW9kZSA9IHJlcXVpcmUoJy4vbW9kZScpXG5jb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5mdW5jdGlvbiBLYW5qaURhdGEgKGRhdGEpIHtcbiAgdGhpcy5tb2RlID0gTW9kZS5LQU5KSVxuICB0aGlzLmRhdGEgPSBkYXRhXG59XG5cbkthbmppRGF0YS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAobGVuZ3RoKSB7XG4gIHJldHVybiBsZW5ndGggKiAxM1xufVxuXG5LYW5qaURhdGEucHJvdG90eXBlLmdldExlbmd0aCA9IGZ1bmN0aW9uIGdldExlbmd0aCAoKSB7XG4gIHJldHVybiB0aGlzLmRhdGEubGVuZ3RoXG59XG5cbkthbmppRGF0YS5wcm90b3R5cGUuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKCkge1xuICByZXR1cm4gS2FuamlEYXRhLmdldEJpdHNMZW5ndGgodGhpcy5kYXRhLmxlbmd0aClcbn1cblxuS2FuamlEYXRhLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIChiaXRCdWZmZXIpIHtcbiAgbGV0IGlcblxuICAvLyBJbiB0aGUgU2hpZnQgSklTIHN5c3RlbSwgS2FuamkgY2hhcmFjdGVycyBhcmUgcmVwcmVzZW50ZWQgYnkgYSB0d28gYnl0ZSBjb21iaW5hdGlvbi5cbiAgLy8gVGhlc2UgYnl0ZSB2YWx1ZXMgYXJlIHNoaWZ0ZWQgZnJvbSB0aGUgSklTIFggMDIwOCB2YWx1ZXMuXG4gIC8vIEpJUyBYIDAyMDggZ2l2ZXMgZGV0YWlscyBvZiB0aGUgc2hpZnQgY29kZWQgcmVwcmVzZW50YXRpb24uXG4gIGZvciAoaSA9IDA7IGkgPCB0aGlzLmRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgdmFsdWUgPSBVdGlscy50b1NKSVModGhpcy5kYXRhW2ldKVxuXG4gICAgLy8gRm9yIGNoYXJhY3RlcnMgd2l0aCBTaGlmdCBKSVMgdmFsdWVzIGZyb20gMHg4MTQwIHRvIDB4OUZGQzpcbiAgICBpZiAodmFsdWUgPj0gMHg4MTQwICYmIHZhbHVlIDw9IDB4OUZGQykge1xuICAgICAgLy8gU3VidHJhY3QgMHg4MTQwIGZyb20gU2hpZnQgSklTIHZhbHVlXG4gICAgICB2YWx1ZSAtPSAweDgxNDBcblxuICAgIC8vIEZvciBjaGFyYWN0ZXJzIHdpdGggU2hpZnQgSklTIHZhbHVlcyBmcm9tIDB4RTA0MCB0byAweEVCQkZcbiAgICB9IGVsc2UgaWYgKHZhbHVlID49IDB4RTA0MCAmJiB2YWx1ZSA8PSAweEVCQkYpIHtcbiAgICAgIC8vIFN1YnRyYWN0IDB4QzE0MCBmcm9tIFNoaWZ0IEpJUyB2YWx1ZVxuICAgICAgdmFsdWUgLT0gMHhDMTQwXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0ludmFsaWQgU0pJUyBjaGFyYWN0ZXI6ICcgKyB0aGlzLmRhdGFbaV0gKyAnXFxuJyArXG4gICAgICAgICdNYWtlIHN1cmUgeW91ciBjaGFyc2V0IGlzIFVURi04JylcbiAgICB9XG5cbiAgICAvLyBNdWx0aXBseSBtb3N0IHNpZ25pZmljYW50IGJ5dGUgb2YgcmVzdWx0IGJ5IDB4QzBcbiAgICAvLyBhbmQgYWRkIGxlYXN0IHNpZ25pZmljYW50IGJ5dGUgdG8gcHJvZHVjdFxuICAgIHZhbHVlID0gKCgodmFsdWUgPj4+IDgpICYgMHhmZikgKiAweEMwKSArICh2YWx1ZSAmIDB4ZmYpXG5cbiAgICAvLyBDb252ZXJ0IHJlc3VsdCB0byBhIDEzLWJpdCBiaW5hcnkgc3RyaW5nXG4gICAgYml0QnVmZmVyLnB1dCh2YWx1ZSwgMTMpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBLYW5qaURhdGFcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/kanji-data.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mask-pattern.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mask-pattern.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n};\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid(mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n};\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from(value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined;\n};\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1(data) {\n  const size = data.size;\n  let points = 0;\n  let sameCountCol = 0;\n  let sameCountRow = 0;\n  let lastCol = null;\n  let lastRow = null;\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0;\n    lastCol = lastRow = null;\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col);\n      if (module === lastCol) {\n        sameCountCol++;\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n        lastCol = module;\n        sameCountCol = 1;\n      }\n      module = data.get(col, row);\n      if (module === lastRow) {\n        sameCountRow++;\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n        lastRow = module;\n        sameCountRow = 1;\n      }\n    }\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n  }\n  return points;\n};\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2(data) {\n  const size = data.size;\n  let points = 0;\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);\n      if (last === 4 || last === 0) points++;\n    }\n  }\n  return points * PenaltyScores.N2;\n};\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3(data) {\n  const size = data.size;\n  let points = 0;\n  let bitsCol = 0;\n  let bitsRow = 0;\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0;\n    for (let col = 0; col < size; col++) {\n      bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;\n      bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;\n    }\n  }\n  return points * PenaltyScores.N3;\n};\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4(data) {\n  let darkCount = 0;\n  const modulesCount = data.data.length;\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i];\n  const k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);\n  return k * PenaltyScores.N4;\n};\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt(maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000:\n      return (i + j) % 2 === 0;\n    case exports.Patterns.PATTERN001:\n      return i % 2 === 0;\n    case exports.Patterns.PATTERN010:\n      return j % 3 === 0;\n    case exports.Patterns.PATTERN011:\n      return (i + j) % 3 === 0;\n    case exports.Patterns.PATTERN100:\n      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n    case exports.Patterns.PATTERN101:\n      return i * j % 2 + i * j % 3 === 0;\n    case exports.Patterns.PATTERN110:\n      return (i * j % 2 + i * j % 3) % 2 === 0;\n    case exports.Patterns.PATTERN111:\n      return (i * j % 3 + (i + j) % 2) % 2 === 0;\n    default:\n      throw new Error('bad maskPattern:' + maskPattern);\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask(pattern, data) {\n  const size = data.size;\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue;\n      data.xor(row, col, getMaskAt(pattern, row, col));\n    }\n  }\n};\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask(data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length;\n  let bestPattern = 0;\n  let lowerPenalty = Infinity;\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p);\n    exports.applyMask(p, data);\n\n    // Calculate penalty\n    const penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);\n\n    // Undo previously applied mask\n    exports.applyMask(p, data);\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty;\n      bestPattern = p;\n    }\n  }\n  return bestPattern;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mask-pattern.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const VersionCheck = __webpack_require__(/*! ./version-check */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version-check.js\");\nconst Regex = __webpack_require__(/*! ./regex */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/regex.js\");\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n};\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n};\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n};\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n};\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n};\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode);\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version);\n  }\n  if (version >= 1 && version < 10) return mode.ccBits[0];else if (version < 27) return mode.ccBits[1];\n  return mode.ccBits[2];\n};\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData(dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC;else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;else if (Regex.testKanji(dataStr)) return exports.KANJI;else return exports.BYTE;\n};\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString(mode) {\n  if (mode && mode.id) return mode.id;\n  throw new Error('Invalid mode');\n};\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid(mode) {\n  return mode && mode.bit && mode.ccBits;\n};\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString(string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string');\n  }\n  const lcStr = string.toLowerCase();\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC;\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC;\n    case 'kanji':\n      return exports.KANJI;\n    case 'byte':\n      return exports.BYTE;\n    default:\n      throw new Error('Unknown mode: ' + string);\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from(value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value;\n  }\n  try {\n    return fromString(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/numeric-data.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/numeric-data.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\nfunction NumericData(data) {\n  this.mode = Mode.NUMERIC;\n  this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n  return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n  return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n  let i, group, value;\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3);\n    value = parseInt(group, 10);\n    bitBuffer.put(value, 10);\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i;\n  if (remainingNum > 0) {\n    group = this.data.substr(i);\n    value = parseInt(group, 10);\n    bitBuffer.put(value, remainingNum * 3 + 1);\n  }\n};\nmodule.exports = NumericData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9udW1lcmljLWRhdGEuanM/NGFmMyJdLCJuYW1lcyI6WyJNb2RlIiwicmVxdWlyZSIsIk51bWVyaWNEYXRhIiwiZGF0YSIsIm1vZGUiLCJOVU1FUklDIiwidG9TdHJpbmciLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwiTWF0aCIsImZsb29yIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwiZ3JvdXAiLCJ2YWx1ZSIsInN1YnN0ciIsInBhcnNlSW50IiwicHV0IiwicmVtYWluaW5nTnVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxtQkFBTyxDQUFDLDJGQUFRLENBQUM7QUFFOUIsU0FBU0MsV0FBV0EsQ0FBRUMsSUFBSSxFQUFFO0VBQzFCLElBQUksQ0FBQ0MsSUFBSSxHQUFHSixJQUFJLENBQUNLLE9BQU87RUFDeEIsSUFBSSxDQUFDRixJQUFJLEdBQUdBLElBQUksQ0FBQ0csUUFBUSxDQUFDLENBQUM7QUFDN0I7QUFFQUosV0FBVyxDQUFDSyxhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBRUMsTUFBTSxFQUFFO0VBQzFELE9BQU8sRUFBRSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0YsTUFBTSxHQUFHLENBQUMsQ0FBQyxJQUFLQSxNQUFNLEdBQUcsQ0FBQyxHQUFNQSxNQUFNLEdBQUcsQ0FBQyxHQUFJLENBQUMsR0FBRyxDQUFDLEdBQUksQ0FBQyxDQUFDO0FBQ2xGLENBQUM7QUFFRE4sV0FBVyxDQUFDUyxTQUFTLENBQUNDLFNBQVMsR0FBRyxTQUFTQSxTQUFTQSxDQUFBLEVBQUk7RUFDdEQsT0FBTyxJQUFJLENBQUNULElBQUksQ0FBQ0ssTUFBTTtBQUN6QixDQUFDO0FBRUROLFdBQVcsQ0FBQ1MsU0FBUyxDQUFDSixhQUFhLEdBQUcsU0FBU0EsYUFBYUEsQ0FBQSxFQUFJO0VBQzlELE9BQU9MLFdBQVcsQ0FBQ0ssYUFBYSxDQUFDLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxNQUFNLENBQUM7QUFDcEQsQ0FBQztBQUVETixXQUFXLENBQUNTLFNBQVMsQ0FBQ0UsS0FBSyxHQUFHLFNBQVNBLEtBQUtBLENBQUVDLFNBQVMsRUFBRTtFQUN2RCxJQUFJQyxDQUFDLEVBQUVDLEtBQUssRUFBRUMsS0FBSzs7RUFFbkI7RUFDQTtFQUNBLEtBQUtGLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDWixJQUFJLENBQUNLLE1BQU0sRUFBRU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUM3Q0MsS0FBSyxHQUFHLElBQUksQ0FBQ2IsSUFBSSxDQUFDZSxNQUFNLENBQUNILENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUJFLEtBQUssR0FBR0UsUUFBUSxDQUFDSCxLQUFLLEVBQUUsRUFBRSxDQUFDO0lBRTNCRixTQUFTLENBQUNNLEdBQUcsQ0FBQ0gsS0FBSyxFQUFFLEVBQUUsQ0FBQztFQUMxQjs7RUFFQTtFQUNBO0VBQ0EsTUFBTUksWUFBWSxHQUFHLElBQUksQ0FBQ2xCLElBQUksQ0FBQ0ssTUFBTSxHQUFHTyxDQUFDO0VBQ3pDLElBQUlNLFlBQVksR0FBRyxDQUFDLEVBQUU7SUFDcEJMLEtBQUssR0FBRyxJQUFJLENBQUNiLElBQUksQ0FBQ2UsTUFBTSxDQUFDSCxDQUFDLENBQUM7SUFDM0JFLEtBQUssR0FBR0UsUUFBUSxDQUFDSCxLQUFLLEVBQUUsRUFBRSxDQUFDO0lBRTNCRixTQUFTLENBQUNNLEdBQUcsQ0FBQ0gsS0FBSyxFQUFFSSxZQUFZLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztFQUM1QztBQUNGLENBQUM7QUFFREMsTUFBTSxDQUFDQyxPQUFPLEdBQUdyQixXQUFXIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvbnVtZXJpYy1kYXRhLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTW9kZSA9IHJlcXVpcmUoJy4vbW9kZScpXG5cbmZ1bmN0aW9uIE51bWVyaWNEYXRhIChkYXRhKSB7XG4gIHRoaXMubW9kZSA9IE1vZGUuTlVNRVJJQ1xuICB0aGlzLmRhdGEgPSBkYXRhLnRvU3RyaW5nKClcbn1cblxuTnVtZXJpY0RhdGEuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKGxlbmd0aCkge1xuICByZXR1cm4gMTAgKiBNYXRoLmZsb29yKGxlbmd0aCAvIDMpICsgKChsZW5ndGggJSAzKSA/ICgobGVuZ3RoICUgMykgKiAzICsgMSkgOiAwKVxufVxuXG5OdW1lcmljRGF0YS5wcm90b3R5cGUuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gZ2V0TGVuZ3RoICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YS5sZW5ndGhcbn1cblxuTnVtZXJpY0RhdGEucHJvdG90eXBlLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoICgpIHtcbiAgcmV0dXJuIE51bWVyaWNEYXRhLmdldEJpdHNMZW5ndGgodGhpcy5kYXRhLmxlbmd0aClcbn1cblxuTnVtZXJpY0RhdGEucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKGJpdEJ1ZmZlcikge1xuICBsZXQgaSwgZ3JvdXAsIHZhbHVlXG5cbiAgLy8gVGhlIGlucHV0IGRhdGEgc3RyaW5nIGlzIGRpdmlkZWQgaW50byBncm91cHMgb2YgdGhyZWUgZGlnaXRzLFxuICAvLyBhbmQgZWFjaCBncm91cCBpcyBjb252ZXJ0ZWQgdG8gaXRzIDEwLWJpdCBiaW5hcnkgZXF1aXZhbGVudC5cbiAgZm9yIChpID0gMDsgaSArIDMgPD0gdGhpcy5kYXRhLmxlbmd0aDsgaSArPSAzKSB7XG4gICAgZ3JvdXAgPSB0aGlzLmRhdGEuc3Vic3RyKGksIDMpXG4gICAgdmFsdWUgPSBwYXJzZUludChncm91cCwgMTApXG5cbiAgICBiaXRCdWZmZXIucHV0KHZhbHVlLCAxMClcbiAgfVxuXG4gIC8vIElmIHRoZSBudW1iZXIgb2YgaW5wdXQgZGlnaXRzIGlzIG5vdCBhbiBleGFjdCBtdWx0aXBsZSBvZiB0aHJlZSxcbiAgLy8gdGhlIGZpbmFsIG9uZSBvciB0d28gZGlnaXRzIGFyZSBjb252ZXJ0ZWQgdG8gNCBvciA3IGJpdHMgcmVzcGVjdGl2ZWx5LlxuICBjb25zdCByZW1haW5pbmdOdW0gPSB0aGlzLmRhdGEubGVuZ3RoIC0gaVxuICBpZiAocmVtYWluaW5nTnVtID4gMCkge1xuICAgIGdyb3VwID0gdGhpcy5kYXRhLnN1YnN0cihpKVxuICAgIHZhbHVlID0gcGFyc2VJbnQoZ3JvdXAsIDEwKVxuXG4gICAgYml0QnVmZmVyLnB1dCh2YWx1ZSwgcmVtYWluaW5nTnVtICogMyArIDEpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBOdW1lcmljRGF0YVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/numeric-data.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/polynomial.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/polynomial.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const GF = __webpack_require__(/*! ./galois-field */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/galois-field.js\");\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul(p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1);\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j]);\n    }\n  }\n  return coeff;\n};\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod(divident, divisor) {\n  let result = new Uint8Array(divident);\n  while (result.length - divisor.length >= 0) {\n    const coeff = result[0];\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff);\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0;\n    while (offset < result.length && result[offset] === 0) offset++;\n    result = result.slice(offset);\n  }\n  return result;\n};\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial(degree) {\n  let poly = new Uint8Array([1]);\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]));\n  }\n  return poly;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9wb2x5bm9taWFsLmpzP2E1Y2MiXSwibmFtZXMiOlsiR0YiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIm11bCIsInAxIiwicDIiLCJjb2VmZiIsIlVpbnQ4QXJyYXkiLCJsZW5ndGgiLCJpIiwiaiIsIm1vZCIsImRpdmlkZW50IiwiZGl2aXNvciIsInJlc3VsdCIsIm9mZnNldCIsInNsaWNlIiwiZ2VuZXJhdGVFQ1BvbHlub21pYWwiLCJkZWdyZWUiLCJwb2x5IiwiZXhwIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxFQUFFLEdBQUdDLG1CQUFPLENBQUMsMkdBQWdCLENBQUM7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLE9BQU8sQ0FBQ0MsR0FBRyxHQUFHLFNBQVNBLEdBQUdBLENBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFO0VBQ2xDLE1BQU1DLEtBQUssR0FBRyxJQUFJQyxVQUFVLENBQUNILEVBQUUsQ0FBQ0ksTUFBTSxHQUFHSCxFQUFFLENBQUNHLE1BQU0sR0FBRyxDQUFDLENBQUM7RUFFdkQsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdMLEVBQUUsQ0FBQ0ksTUFBTSxFQUFFQyxDQUFDLEVBQUUsRUFBRTtJQUNsQyxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0wsRUFBRSxDQUFDRyxNQUFNLEVBQUVFLENBQUMsRUFBRSxFQUFFO01BQ2xDSixLQUFLLENBQUNHLENBQUMsR0FBR0MsQ0FBQyxDQUFDLElBQUlWLEVBQUUsQ0FBQ0csR0FBRyxDQUFDQyxFQUFFLENBQUNLLENBQUMsQ0FBQyxFQUFFSixFQUFFLENBQUNLLENBQUMsQ0FBQyxDQUFDO0lBQ3RDO0VBQ0Y7RUFFQSxPQUFPSixLQUFLO0FBQ2QsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSixPQUFPLENBQUNTLEdBQUcsR0FBRyxTQUFTQSxHQUFHQSxDQUFFQyxRQUFRLEVBQUVDLE9BQU8sRUFBRTtFQUM3QyxJQUFJQyxNQUFNLEdBQUcsSUFBSVAsVUFBVSxDQUFDSyxRQUFRLENBQUM7RUFFckMsT0FBUUUsTUFBTSxDQUFDTixNQUFNLEdBQUdLLE9BQU8sQ0FBQ0wsTUFBTSxJQUFLLENBQUMsRUFBRTtJQUM1QyxNQUFNRixLQUFLLEdBQUdRLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFdkIsS0FBSyxJQUFJTCxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdJLE9BQU8sQ0FBQ0wsTUFBTSxFQUFFQyxDQUFDLEVBQUUsRUFBRTtNQUN2Q0ssTUFBTSxDQUFDTCxDQUFDLENBQUMsSUFBSVQsRUFBRSxDQUFDRyxHQUFHLENBQUNVLE9BQU8sQ0FBQ0osQ0FBQyxDQUFDLEVBQUVILEtBQUssQ0FBQztJQUN4Qzs7SUFFQTtJQUNBLElBQUlTLE1BQU0sR0FBRyxDQUFDO0lBQ2QsT0FBT0EsTUFBTSxHQUFHRCxNQUFNLENBQUNOLE1BQU0sSUFBSU0sTUFBTSxDQUFDQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUVBLE1BQU0sRUFBRTtJQUMvREQsTUFBTSxHQUFHQSxNQUFNLENBQUNFLEtBQUssQ0FBQ0QsTUFBTSxDQUFDO0VBQy9CO0VBRUEsT0FBT0QsTUFBTTtBQUNmLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQVosT0FBTyxDQUFDZSxvQkFBb0IsR0FBRyxTQUFTQSxvQkFBb0JBLENBQUVDLE1BQU0sRUFBRTtFQUNwRSxJQUFJQyxJQUFJLEdBQUcsSUFBSVosVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDOUIsS0FBSyxJQUFJRSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdTLE1BQU0sRUFBRVQsQ0FBQyxFQUFFLEVBQUU7SUFDL0JVLElBQUksR0FBR2pCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDZ0IsSUFBSSxFQUFFLElBQUlaLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRVAsRUFBRSxDQUFDb0IsR0FBRyxDQUFDWCxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDMUQ7RUFFQSxPQUFPVSxJQUFJO0FBQ2IsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC11aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3BvbHlub21pYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHRiA9IHJlcXVpcmUoJy4vZ2Fsb2lzLWZpZWxkJylcblxuLyoqXG4gKiBNdWx0aXBsaWVzIHR3byBwb2x5bm9taWFscyBpbnNpZGUgR2Fsb2lzIEZpZWxkXG4gKlxuICogQHBhcmFtICB7VWludDhBcnJheX0gcDEgUG9seW5vbWlhbFxuICogQHBhcmFtICB7VWludDhBcnJheX0gcDIgUG9seW5vbWlhbFxuICogQHJldHVybiB7VWludDhBcnJheX0gICAgUHJvZHVjdCBvZiBwMSBhbmQgcDJcbiAqL1xuZXhwb3J0cy5tdWwgPSBmdW5jdGlvbiBtdWwgKHAxLCBwMikge1xuICBjb25zdCBjb2VmZiA9IG5ldyBVaW50OEFycmF5KHAxLmxlbmd0aCArIHAyLmxlbmd0aCAtIDEpXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwMS5sZW5ndGg7IGkrKykge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgcDIubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvZWZmW2kgKyBqXSBePSBHRi5tdWwocDFbaV0sIHAyW2pdKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb2VmZlxufVxuXG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgcmVtYWluZGVyIG9mIHBvbHlub21pYWxzIGRpdmlzaW9uXG4gKlxuICogQHBhcmFtICB7VWludDhBcnJheX0gZGl2aWRlbnQgUG9seW5vbWlhbFxuICogQHBhcmFtICB7VWludDhBcnJheX0gZGl2aXNvciAgUG9seW5vbWlhbFxuICogQHJldHVybiB7VWludDhBcnJheX0gICAgICAgICAgUmVtYWluZGVyXG4gKi9cbmV4cG9ydHMubW9kID0gZnVuY3Rpb24gbW9kIChkaXZpZGVudCwgZGl2aXNvcikge1xuICBsZXQgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoZGl2aWRlbnQpXG5cbiAgd2hpbGUgKChyZXN1bHQubGVuZ3RoIC0gZGl2aXNvci5sZW5ndGgpID49IDApIHtcbiAgICBjb25zdCBjb2VmZiA9IHJlc3VsdFswXVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkaXZpc29yLmxlbmd0aDsgaSsrKSB7XG4gICAgICByZXN1bHRbaV0gXj0gR0YubXVsKGRpdmlzb3JbaV0sIGNvZWZmKVxuICAgIH1cblxuICAgIC8vIHJlbW92ZSBhbGwgemVyb3MgZnJvbSBidWZmZXIgaGVhZFxuICAgIGxldCBvZmZzZXQgPSAwXG4gICAgd2hpbGUgKG9mZnNldCA8IHJlc3VsdC5sZW5ndGggJiYgcmVzdWx0W29mZnNldF0gPT09IDApIG9mZnNldCsrXG4gICAgcmVzdWx0ID0gcmVzdWx0LnNsaWNlKG9mZnNldClcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSBhbiBpcnJlZHVjaWJsZSBnZW5lcmF0b3IgcG9seW5vbWlhbCBvZiBzcGVjaWZpZWQgZGVncmVlXG4gKiAodXNlZCBieSBSZWVkLVNvbG9tb24gZW5jb2RlcilcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGRlZ3JlZSBEZWdyZWUgb2YgdGhlIGdlbmVyYXRvciBwb2x5bm9taWFsXG4gKiBAcmV0dXJuIHtVaW50OEFycmF5fSAgICBCdWZmZXIgY29udGFpbmluZyBwb2x5bm9taWFsIGNvZWZmaWNpZW50c1xuICovXG5leHBvcnRzLmdlbmVyYXRlRUNQb2x5bm9taWFsID0gZnVuY3Rpb24gZ2VuZXJhdGVFQ1BvbHlub21pYWwgKGRlZ3JlZSkge1xuICBsZXQgcG9seSA9IG5ldyBVaW50OEFycmF5KFsxXSlcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkZWdyZWU7IGkrKykge1xuICAgIHBvbHkgPSBleHBvcnRzLm11bChwb2x5LCBuZXcgVWludDhBcnJheShbMSwgR0YuZXhwKGkpXSkpXG4gIH1cblxuICByZXR1cm4gcG9seVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/polynomial.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/qrcode.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/qrcode.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\");\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst BitBuffer = __webpack_require__(/*! ./bit-buffer */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-buffer.js\");\nconst BitMatrix = __webpack_require__(/*! ./bit-matrix */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/bit-matrix.js\");\nconst AlignmentPattern = __webpack_require__(/*! ./alignment-pattern */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alignment-pattern.js\");\nconst FinderPattern = __webpack_require__(/*! ./finder-pattern */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/finder-pattern.js\");\nconst MaskPattern = __webpack_require__(/*! ./mask-pattern */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mask-pattern.js\");\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-code.js\");\nconst ReedSolomonEncoder = __webpack_require__(/*! ./reed-solomon-encoder */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js\");\nconst Version = __webpack_require__(/*! ./version */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version.js\");\nconst FormatInfo = __webpack_require__(/*! ./format-info */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/format-info.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\nconst Segments = __webpack_require__(/*! ./segments */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/segments.js\");\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern(matrix, version) {\n  const size = matrix.size;\n  const pos = FinderPattern.getPositions(version);\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0];\n    const col = pos[i][1];\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue;\n        if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {\n          matrix.set(row + r, col + c, true, true);\n        } else {\n          matrix.set(row + r, col + c, false, true);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern(matrix) {\n  const size = matrix.size;\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0;\n    matrix.set(r, 6, value, true);\n    matrix.set(6, r, value, true);\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern(matrix, version) {\n  const pos = AlignmentPattern.getPositions(version);\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0];\n    const col = pos[i][1];\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {\n          matrix.set(row + r, col + c, true, true);\n        } else {\n          matrix.set(row + r, col + c, false, true);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo(matrix, version) {\n  const size = matrix.size;\n  const bits = Version.getEncodedBits(version);\n  let row, col, mod;\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3);\n    col = i % 3 + size - 8 - 3;\n    mod = (bits >> i & 1) === 1;\n    matrix.set(row, col, mod, true);\n    matrix.set(col, row, mod, true);\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size;\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n  let i, mod;\n  for (i = 0; i < 15; i++) {\n    mod = (bits >> i & 1) === 1;\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true);\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true);\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true);\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true);\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true);\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true);\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true);\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData(matrix, data) {\n  const size = matrix.size;\n  let inc = -1;\n  let row = size - 1;\n  let bitIndex = 7;\n  let byteIndex = 0;\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--;\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false;\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n          }\n          matrix.set(row, col - c, dark);\n          bitIndex--;\n          if (bitIndex === -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n      row += inc;\n      if (row < 0 || size <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData(version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer();\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4);\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version));\n\n    // add binary data sequence to buffer\n    data.write(buffer);\n  });\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version);\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4);\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0);\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n  }\n  return createCodewords(buffer, version, errorCorrectionLevel);\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version);\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords;\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel);\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks;\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount);\n  let offset = 0;\n  const dcData = new Array(ecTotalBlocks);\n  const ecData = new Array(ecTotalBlocks);\n  let maxDataSize = 0;\n  const buffer = new Uint8Array(bitBuffer.buffer);\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize);\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b]);\n    offset += dataSize;\n    maxDataSize = Math.max(maxDataSize, dataSize);\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords);\n  let index = 0;\n  let i, r;\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i];\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i];\n    }\n  }\n  return data;\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol(data, version, errorCorrectionLevel, maskPattern) {\n  let segments;\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data);\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version;\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data);\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40);\n  } else {\n    throw new Error('Invalid data');\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel);\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code');\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion;\n\n    // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' + 'The chosen QR Code version cannot contain this amount of data.\\n' + 'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n  }\n  const dataBits = createData(version, errorCorrectionLevel, segments);\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version);\n  const modules = new BitMatrix(moduleCount);\n\n  // Add function modules\n  setupFinderPattern(modules, version);\n  setupTimingPattern(modules);\n  setupAlignmentPattern(modules, version);\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0);\n  if (version >= 7) {\n    setupVersionInfo(modules, version);\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits);\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules);\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern);\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  };\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create(data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text');\n  }\n  let errorCorrectionLevel = ECLevel.M;\n  let version;\n  let mask;\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);\n    version = Version.from(options.version);\n    mask = MaskPattern.from(options.maskPattern);\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc);\n    }\n  }\n  return createSymbol(data, version, errorCorrectionLevel, mask);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/qrcode.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Polynomial = __webpack_require__(/*! ./polynomial */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/polynomial.js\");\nfunction ReedSolomonEncoder(degree) {\n  this.genPoly = undefined;\n  this.degree = degree;\n  if (this.degree) this.initialize(this.degree);\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree;\n  this.genPoly = Polynomial.generateECPolynomial(this.degree);\n};\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode(data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized');\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree);\n  paddedData.set(data);\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly);\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length;\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree);\n    buff.set(remainder, start);\n    return buff;\n  }\n  return remainder;\n};\nmodule.exports = ReedSolomonEncoder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9yZWVkLXNvbG9tb24tZW5jb2Rlci5qcz85NjUwIl0sIm5hbWVzIjpbIlBvbHlub21pYWwiLCJyZXF1aXJlIiwiUmVlZFNvbG9tb25FbmNvZGVyIiwiZGVncmVlIiwiZ2VuUG9seSIsInVuZGVmaW5lZCIsImluaXRpYWxpemUiLCJwcm90b3R5cGUiLCJnZW5lcmF0ZUVDUG9seW5vbWlhbCIsImVuY29kZSIsImRhdGEiLCJFcnJvciIsInBhZGRlZERhdGEiLCJVaW50OEFycmF5IiwibGVuZ3RoIiwic2V0IiwicmVtYWluZGVyIiwibW9kIiwic3RhcnQiLCJidWZmIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxtQkFBTyxDQUFDLHVHQUFjLENBQUM7QUFFMUMsU0FBU0Msa0JBQWtCQSxDQUFFQyxNQUFNLEVBQUU7RUFDbkMsSUFBSSxDQUFDQyxPQUFPLEdBQUdDLFNBQVM7RUFDeEIsSUFBSSxDQUFDRixNQUFNLEdBQUdBLE1BQU07RUFFcEIsSUFBSSxJQUFJLENBQUNBLE1BQU0sRUFBRSxJQUFJLENBQUNHLFVBQVUsQ0FBQyxJQUFJLENBQUNILE1BQU0sQ0FBQztBQUMvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUQsa0JBQWtCLENBQUNLLFNBQVMsQ0FBQ0QsVUFBVSxHQUFHLFNBQVNBLFVBQVVBLENBQUVILE1BQU0sRUFBRTtFQUNyRTtFQUNBLElBQUksQ0FBQ0EsTUFBTSxHQUFHQSxNQUFNO0VBQ3BCLElBQUksQ0FBQ0MsT0FBTyxHQUFHSixVQUFVLENBQUNRLG9CQUFvQixDQUFDLElBQUksQ0FBQ0wsTUFBTSxDQUFDO0FBQzdELENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FELGtCQUFrQixDQUFDSyxTQUFTLENBQUNFLE1BQU0sR0FBRyxTQUFTQSxNQUFNQSxDQUFFQyxJQUFJLEVBQUU7RUFDM0QsSUFBSSxDQUFDLElBQUksQ0FBQ04sT0FBTyxFQUFFO0lBQ2pCLE1BQU0sSUFBSU8sS0FBSyxDQUFDLHlCQUF5QixDQUFDO0VBQzVDOztFQUVBO0VBQ0E7RUFDQSxNQUFNQyxVQUFVLEdBQUcsSUFBSUMsVUFBVSxDQUFDSCxJQUFJLENBQUNJLE1BQU0sR0FBRyxJQUFJLENBQUNYLE1BQU0sQ0FBQztFQUM1RFMsVUFBVSxDQUFDRyxHQUFHLENBQUNMLElBQUksQ0FBQzs7RUFFcEI7RUFDQTtFQUNBLE1BQU1NLFNBQVMsR0FBR2hCLFVBQVUsQ0FBQ2lCLEdBQUcsQ0FBQ0wsVUFBVSxFQUFFLElBQUksQ0FBQ1IsT0FBTyxDQUFDOztFQUUxRDtFQUNBO0VBQ0E7RUFDQSxNQUFNYyxLQUFLLEdBQUcsSUFBSSxDQUFDZixNQUFNLEdBQUdhLFNBQVMsQ0FBQ0YsTUFBTTtFQUM1QyxJQUFJSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO0lBQ2IsTUFBTUMsSUFBSSxHQUFHLElBQUlOLFVBQVUsQ0FBQyxJQUFJLENBQUNWLE1BQU0sQ0FBQztJQUN4Q2dCLElBQUksQ0FBQ0osR0FBRyxDQUFDQyxTQUFTLEVBQUVFLEtBQUssQ0FBQztJQUUxQixPQUFPQyxJQUFJO0VBQ2I7RUFFQSxPQUFPSCxTQUFTO0FBQ2xCLENBQUM7QUFFREksTUFBTSxDQUFDQyxPQUFPLEdBQUduQixrQkFBa0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9yZWVkLXNvbG9tb24tZW5jb2Rlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFBvbHlub21pYWwgPSByZXF1aXJlKCcuL3BvbHlub21pYWwnKVxuXG5mdW5jdGlvbiBSZWVkU29sb21vbkVuY29kZXIgKGRlZ3JlZSkge1xuICB0aGlzLmdlblBvbHkgPSB1bmRlZmluZWRcbiAgdGhpcy5kZWdyZWUgPSBkZWdyZWVcblxuICBpZiAodGhpcy5kZWdyZWUpIHRoaXMuaW5pdGlhbGl6ZSh0aGlzLmRlZ3JlZSlcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBlbmNvZGVyLlxuICogVGhlIGlucHV0IHBhcmFtIHNob3VsZCBjb3JyZXNwb25kIHRvIHRoZSBudW1iZXIgb2YgZXJyb3IgY29ycmVjdGlvbiBjb2Rld29yZHMuXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBkZWdyZWVcbiAqL1xuUmVlZFNvbG9tb25FbmNvZGVyLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24gaW5pdGlhbGl6ZSAoZGVncmVlKSB7XG4gIC8vIGNyZWF0ZSBhbiBpcnJlZHVjaWJsZSBnZW5lcmF0b3IgcG9seW5vbWlhbFxuICB0aGlzLmRlZ3JlZSA9IGRlZ3JlZVxuICB0aGlzLmdlblBvbHkgPSBQb2x5bm9taWFsLmdlbmVyYXRlRUNQb2x5bm9taWFsKHRoaXMuZGVncmVlKVxufVxuXG4vKipcbiAqIEVuY29kZXMgYSBjaHVuayBvZiBkYXRhXG4gKlxuICogQHBhcmFtICB7VWludDhBcnJheX0gZGF0YSBCdWZmZXIgY29udGFpbmluZyBpbnB1dCBkYXRhXG4gKiBAcmV0dXJuIHtVaW50OEFycmF5fSAgICAgIEJ1ZmZlciBjb250YWluaW5nIGVuY29kZWQgZGF0YVxuICovXG5SZWVkU29sb21vbkVuY29kZXIucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZSAoZGF0YSkge1xuICBpZiAoIXRoaXMuZ2VuUG9seSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW5jb2RlciBub3QgaW5pdGlhbGl6ZWQnKVxuICB9XG5cbiAgLy8gQ2FsY3VsYXRlIEVDIGZvciB0aGlzIGRhdGEgYmxvY2tcbiAgLy8gZXh0ZW5kcyBkYXRhIHNpemUgdG8gZGF0YStnZW5Qb2x5IHNpemVcbiAgY29uc3QgcGFkZGVkRGF0YSA9IG5ldyBVaW50OEFycmF5KGRhdGEubGVuZ3RoICsgdGhpcy5kZWdyZWUpXG4gIHBhZGRlZERhdGEuc2V0KGRhdGEpXG5cbiAgLy8gVGhlIGVycm9yIGNvcnJlY3Rpb24gY29kZXdvcmRzIGFyZSB0aGUgcmVtYWluZGVyIGFmdGVyIGRpdmlkaW5nIHRoZSBkYXRhIGNvZGV3b3Jkc1xuICAvLyBieSBhIGdlbmVyYXRvciBwb2x5bm9taWFsXG4gIGNvbnN0IHJlbWFpbmRlciA9IFBvbHlub21pYWwubW9kKHBhZGRlZERhdGEsIHRoaXMuZ2VuUG9seSlcblxuICAvLyByZXR1cm4gRUMgZGF0YSBibG9ja3MgKGxhc3QgbiBieXRlLCB3aGVyZSBuIGlzIHRoZSBkZWdyZWUgb2YgZ2VuUG9seSlcbiAgLy8gSWYgY29lZmZpY2llbnRzIG51bWJlciBpbiByZW1haW5kZXIgYXJlIGxlc3MgdGhhbiBnZW5Qb2x5IGRlZ3JlZSxcbiAgLy8gcGFkIHdpdGggMHMgdG8gdGhlIGxlZnQgdG8gcmVhY2ggdGhlIG5lZWRlZCBudW1iZXIgb2YgY29lZmZpY2llbnRzXG4gIGNvbnN0IHN0YXJ0ID0gdGhpcy5kZWdyZWUgLSByZW1haW5kZXIubGVuZ3RoXG4gIGlmIChzdGFydCA+IDApIHtcbiAgICBjb25zdCBidWZmID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5kZWdyZWUpXG4gICAgYnVmZi5zZXQocmVtYWluZGVyLCBzdGFydClcblxuICAgIHJldHVybiBidWZmXG4gIH1cblxuICByZXR1cm4gcmVtYWluZGVyXG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVlZFNvbG9tb25FbmNvZGVyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/reed-solomon-encoder.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/regex.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/regex.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const numeric = '[0-9]+';\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+';\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' + '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' + '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' + '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nexports.KANJI = new RegExp(kanji, 'g');\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nexports.BYTE = new RegExp(byte, 'g');\nexports.NUMERIC = new RegExp(numeric, 'g');\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nconst TEST_KANJI = new RegExp('^' + kanji + '$');\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$');\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\nexports.testKanji = function testKanji(str) {\n  return TEST_KANJI.test(str);\n};\nexports.testNumeric = function testNumeric(str) {\n  return TEST_NUMERIC.test(str);\n};\nexports.testAlphanumeric = function testAlphanumeric(str) {\n  return TEST_ALPHANUMERIC.test(str);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9yZWdleC5qcz82ZTJhIl0sIm5hbWVzIjpbIm51bWVyaWMiLCJhbHBoYW51bWVyaWMiLCJrYW5qaSIsInJlcGxhY2UiLCJieXRlIiwiZXhwb3J0cyIsIktBTkpJIiwiUmVnRXhwIiwiQllURV9LQU5KSSIsIkJZVEUiLCJOVU1FUklDIiwiQUxQSEFOVU1FUklDIiwiVEVTVF9LQU5KSSIsIlRFU1RfTlVNRVJJQyIsIlRFU1RfQUxQSEFOVU1FUklDIiwidGVzdEthbmppIiwic3RyIiwidGVzdCIsInRlc3ROdW1lcmljIiwidGVzdEFscGhhbnVtZXJpYyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHLFFBQVE7QUFDeEIsTUFBTUMsWUFBWSxHQUFHLG1CQUFtQjtBQUN4QyxJQUFJQyxLQUFLLEdBQUcsK0NBQStDLEdBQ3pELGdFQUFnRSxHQUNoRSx1REFBdUQsR0FDdkQsa0RBQWtEO0FBQ3BEQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ0MsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUM7QUFFbEMsTUFBTUMsSUFBSSxHQUFHLDRCQUE0QixHQUFHRixLQUFLLEdBQUcsaUJBQWlCO0FBRXJFRyxPQUFPLENBQUNDLEtBQUssR0FBRyxJQUFJQyxNQUFNLENBQUNMLEtBQUssRUFBRSxHQUFHLENBQUM7QUFDdENHLE9BQU8sQ0FBQ0csVUFBVSxHQUFHLElBQUlELE1BQU0sQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLENBQUM7QUFDN0RGLE9BQU8sQ0FBQ0ksSUFBSSxHQUFHLElBQUlGLE1BQU0sQ0FBQ0gsSUFBSSxFQUFFLEdBQUcsQ0FBQztBQUNwQ0MsT0FBTyxDQUFDSyxPQUFPLEdBQUcsSUFBSUgsTUFBTSxDQUFDUCxPQUFPLEVBQUUsR0FBRyxDQUFDO0FBQzFDSyxPQUFPLENBQUNNLFlBQVksR0FBRyxJQUFJSixNQUFNLENBQUNOLFlBQVksRUFBRSxHQUFHLENBQUM7QUFFcEQsTUFBTVcsVUFBVSxHQUFHLElBQUlMLE1BQU0sQ0FBQyxHQUFHLEdBQUdMLEtBQUssR0FBRyxHQUFHLENBQUM7QUFDaEQsTUFBTVcsWUFBWSxHQUFHLElBQUlOLE1BQU0sQ0FBQyxHQUFHLEdBQUdQLE9BQU8sR0FBRyxHQUFHLENBQUM7QUFDcEQsTUFBTWMsaUJBQWlCLEdBQUcsSUFBSVAsTUFBTSxDQUFDLHdCQUF3QixDQUFDO0FBRTlERixPQUFPLENBQUNVLFNBQVMsR0FBRyxTQUFTQSxTQUFTQSxDQUFFQyxHQUFHLEVBQUU7RUFDM0MsT0FBT0osVUFBVSxDQUFDSyxJQUFJLENBQUNELEdBQUcsQ0FBQztBQUM3QixDQUFDO0FBRURYLE9BQU8sQ0FBQ2EsV0FBVyxHQUFHLFNBQVNBLFdBQVdBLENBQUVGLEdBQUcsRUFBRTtFQUMvQyxPQUFPSCxZQUFZLENBQUNJLElBQUksQ0FBQ0QsR0FBRyxDQUFDO0FBQy9CLENBQUM7QUFFRFgsT0FBTyxDQUFDYyxnQkFBZ0IsR0FBRyxTQUFTQSxnQkFBZ0JBLENBQUVILEdBQUcsRUFBRTtFQUN6RCxPQUFPRixpQkFBaUIsQ0FBQ0csSUFBSSxDQUFDRCxHQUFHLENBQUM7QUFDcEMsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC11aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3JlZ2V4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbnVtZXJpYyA9ICdbMC05XSsnXG5jb25zdCBhbHBoYW51bWVyaWMgPSAnW0EtWiAkJSorXFxcXC0uLzpdKydcbmxldCBrYW5qaSA9ICcoPzpbdTMwMDAtdTMwM0ZdfFt1MzA0MC11MzA5Rl18W3UzMEEwLXUzMEZGXXwnICtcbiAgJ1t1RkYwMC11RkZFRl18W3U0RTAwLXU5RkFGXXxbdTI2MDUtdTI2MDZdfFt1MjE5MC11MjE5NV18dTIwM0J8JyArXG4gICdbdTIwMTB1MjAxNXUyMDE4dTIwMTl1MjAyNXUyMDI2dTIwMUN1MjAxRHUyMjI1dTIyNjBdfCcgK1xuICAnW3UwMzkxLXUwNDUxXXxbdTAwQTd1MDBBOHUwMEIxdTAwQjR1MDBEN3UwMEY3XSkrJ1xua2FuamkgPSBrYW5qaS5yZXBsYWNlKC91L2csICdcXFxcdScpXG5cbmNvbnN0IGJ5dGUgPSAnKD86KD8hW0EtWjAtOSAkJSorXFxcXC0uLzpdfCcgKyBrYW5qaSArICcpKD86LnxbXFxyXFxuXSkpKydcblxuZXhwb3J0cy5LQU5KSSA9IG5ldyBSZWdFeHAoa2FuamksICdnJylcbmV4cG9ydHMuQllURV9LQU5KSSA9IG5ldyBSZWdFeHAoJ1teQS1aMC05ICQlKitcXFxcLS4vOl0rJywgJ2cnKVxuZXhwb3J0cy5CWVRFID0gbmV3IFJlZ0V4cChieXRlLCAnZycpXG5leHBvcnRzLk5VTUVSSUMgPSBuZXcgUmVnRXhwKG51bWVyaWMsICdnJylcbmV4cG9ydHMuQUxQSEFOVU1FUklDID0gbmV3IFJlZ0V4cChhbHBoYW51bWVyaWMsICdnJylcblxuY29uc3QgVEVTVF9LQU5KSSA9IG5ldyBSZWdFeHAoJ14nICsga2FuamkgKyAnJCcpXG5jb25zdCBURVNUX05VTUVSSUMgPSBuZXcgUmVnRXhwKCdeJyArIG51bWVyaWMgKyAnJCcpXG5jb25zdCBURVNUX0FMUEhBTlVNRVJJQyA9IG5ldyBSZWdFeHAoJ15bQS1aMC05ICQlKitcXFxcLS4vOl0rJCcpXG5cbmV4cG9ydHMudGVzdEthbmppID0gZnVuY3Rpb24gdGVzdEthbmppIChzdHIpIHtcbiAgcmV0dXJuIFRFU1RfS0FOSkkudGVzdChzdHIpXG59XG5cbmV4cG9ydHMudGVzdE51bWVyaWMgPSBmdW5jdGlvbiB0ZXN0TnVtZXJpYyAoc3RyKSB7XG4gIHJldHVybiBURVNUX05VTUVSSUMudGVzdChzdHIpXG59XG5cbmV4cG9ydHMudGVzdEFscGhhbnVtZXJpYyA9IGZ1bmN0aW9uIHRlc3RBbHBoYW51bWVyaWMgKHN0cikge1xuICByZXR1cm4gVEVTVF9BTFBIQU5VTUVSSUMudGVzdChzdHIpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/regex.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/segments.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/segments.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\nconst NumericData = __webpack_require__(/*! ./numeric-data */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/numeric-data.js\");\nconst AlphanumericData = __webpack_require__(/*! ./alphanumeric-data */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/alphanumeric-data.js\");\nconst ByteData = __webpack_require__(/*! ./byte-data */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/byte-data.js\");\nconst KanjiData = __webpack_require__(/*! ./kanji-data */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/kanji-data.js\");\nconst Regex = __webpack_require__(/*! ./regex */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/regex.js\");\nconst Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\");\nconst dijkstra = __webpack_require__(/*! dijkstrajs */ \"./node_modules/dijkstrajs/dijkstra.js\");\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength(str) {\n  return unescape(encodeURIComponent(str)).length;\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments(regex, mode, str) {\n  const segments = [];\n  let result;\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    });\n  }\n  return segments;\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString(dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);\n  let byteSegs;\n  let kanjiSegs;\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);\n    kanjiSegs = [];\n  }\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n  return segs.sort(function (s1, s2) {\n    return s1.index - s2.index;\n  }).map(function (obj) {\n    return {\n      data: obj.data,\n      mode: obj.mode,\n      length: obj.length\n    };\n  });\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength(length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length);\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length);\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length);\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length);\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments(segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data;\n      return acc;\n    }\n    acc.push(curr);\n    return acc;\n  }, []);\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes(segs) {\n  const nodes = [];\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i];\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg, {\n          data: seg.data,\n          mode: Mode.ALPHANUMERIC,\n          length: seg.length\n        }, {\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: seg.length\n        }]);\n        break;\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg, {\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: seg.length\n        }]);\n        break;\n      case Mode.KANJI:\n        nodes.push([seg, {\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: getStringByteLength(seg.data)\n        }]);\n        break;\n      case Mode.BYTE:\n        nodes.push([{\n          data: seg.data,\n          mode: Mode.BYTE,\n          length: getStringByteLength(seg.data)\n        }]);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph(nodes, version) {\n  const table = {};\n  const graph = {\n    start: {}\n  };\n  let prevNodeIds = ['start'];\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i];\n    const currentNodeIds = [];\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j];\n      const key = '' + i + j;\n      currentNodeIds.push(key);\n      table[key] = {\n        node: node,\n        lastCount: 0\n      };\n      graph[key] = {};\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n];\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n          table[prevNodeId].lastCount += node.length;\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version); // switch cost\n        }\n      }\n    }\n    prevNodeIds = currentNodeIds;\n  }\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0;\n  }\n  return {\n    map: graph,\n    table: table\n  };\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment(data, modesHint) {\n  let mode;\n  const bestMode = Mode.getBestModeForData(data);\n  mode = Mode.from(modesHint, bestMode);\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' + ' cannot be encoded with mode ' + Mode.toString(mode) + '.\\n Suggested mode is: ' + Mode.toString(bestMode));\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE;\n  }\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data);\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data);\n    case Mode.KANJI:\n      return new KanjiData(data);\n    case Mode.BYTE:\n      return new ByteData(data);\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray(array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null));\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode));\n    }\n    return acc;\n  }, []);\n};\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString(data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());\n  const nodes = buildNodes(segs);\n  const graph = buildGraph(nodes, version);\n  const path = dijkstra.find_path(graph.map, 'start', 'end');\n  const optimizedSegs = [];\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node);\n  }\n  return exports.fromArray(mergeSegments(optimizedSegs));\n};\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit(data) {\n  return exports.fromArray(getSegmentsFromString(data, Utils.isKanjiModeEnabled()));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/segments.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("let toSJISFunction;\nconst CODEWORDS_COUNT = [0,\n// Not used\n26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize(version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined');\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40');\n  return version * 4 + 17;\n};\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n  return CODEWORDS_COUNT[version];\n};\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0;\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n  return digit;\n};\nexports.setToSJISFunction = function setToSJISFunction(f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.');\n  }\n  toSJISFunction = f;\n};\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined';\n};\nexports.toSJIS = function toSJIS(kanji) {\n  return toSJISFunction(kanji);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS91dGlscy5qcz8wY2VlIl0sIm5hbWVzIjpbInRvU0pJU0Z1bmN0aW9uIiwiQ09ERVdPUkRTX0NPVU5UIiwiZXhwb3J0cyIsImdldFN5bWJvbFNpemUiLCJ2ZXJzaW9uIiwiRXJyb3IiLCJnZXRTeW1ib2xUb3RhbENvZGV3b3JkcyIsImdldEJDSERpZ2l0IiwiZGF0YSIsImRpZ2l0Iiwic2V0VG9TSklTRnVuY3Rpb24iLCJmIiwiaXNLYW5qaU1vZGVFbmFibGVkIiwidG9TSklTIiwia2FuamkiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLGNBQWM7QUFDbEIsTUFBTUMsZUFBZSxHQUFHLENBQ3RCLENBQUM7QUFBRTtBQUNILEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFDN0MsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUNqRCxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQzFELElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FDM0Q7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLE9BQU8sQ0FBQ0MsYUFBYSxHQUFHLFNBQVNBLGFBQWFBLENBQUVDLE9BQU8sRUFBRTtFQUN2RCxJQUFJLENBQUNBLE9BQU8sRUFBRSxNQUFNLElBQUlDLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQztFQUN0RSxJQUFJRCxPQUFPLEdBQUcsQ0FBQyxJQUFJQSxPQUFPLEdBQUcsRUFBRSxFQUFFLE1BQU0sSUFBSUMsS0FBSyxDQUFDLDJDQUEyQyxDQUFDO0VBQzdGLE9BQU9ELE9BQU8sR0FBRyxDQUFDLEdBQUcsRUFBRTtBQUN6QixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRixPQUFPLENBQUNJLHVCQUF1QixHQUFHLFNBQVNBLHVCQUF1QkEsQ0FBRUYsT0FBTyxFQUFFO0VBQzNFLE9BQU9ILGVBQWUsQ0FBQ0csT0FBTyxDQUFDO0FBQ2pDLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FGLE9BQU8sQ0FBQ0ssV0FBVyxHQUFHLFVBQVVDLElBQUksRUFBRTtFQUNwQyxJQUFJQyxLQUFLLEdBQUcsQ0FBQztFQUViLE9BQU9ELElBQUksS0FBSyxDQUFDLEVBQUU7SUFDakJDLEtBQUssRUFBRTtJQUNQRCxJQUFJLE1BQU0sQ0FBQztFQUNiO0VBRUEsT0FBT0MsS0FBSztBQUNkLENBQUM7QUFFRFAsT0FBTyxDQUFDUSxpQkFBaUIsR0FBRyxTQUFTQSxpQkFBaUJBLENBQUVDLENBQUMsRUFBRTtFQUN6RCxJQUFJLE9BQU9BLENBQUMsS0FBSyxVQUFVLEVBQUU7SUFDM0IsTUFBTSxJQUFJTixLQUFLLENBQUMsdUNBQXVDLENBQUM7RUFDMUQ7RUFFQUwsY0FBYyxHQUFHVyxDQUFDO0FBQ3BCLENBQUM7QUFFRFQsT0FBTyxDQUFDVSxrQkFBa0IsR0FBRyxZQUFZO0VBQ3ZDLE9BQU8sT0FBT1osY0FBYyxLQUFLLFdBQVc7QUFDOUMsQ0FBQztBQUVERSxPQUFPLENBQUNXLE1BQU0sR0FBRyxTQUFTQSxNQUFNQSxDQUFFQyxLQUFLLEVBQUU7RUFDdkMsT0FBT2QsY0FBYyxDQUFDYyxLQUFLLENBQUM7QUFDOUIsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9tb2RhbC11aS9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHRvU0pJU0Z1bmN0aW9uXG5jb25zdCBDT0RFV09SRFNfQ09VTlQgPSBbXG4gIDAsIC8vIE5vdCB1c2VkXG4gIDI2LCA0NCwgNzAsIDEwMCwgMTM0LCAxNzIsIDE5NiwgMjQyLCAyOTIsIDM0NixcbiAgNDA0LCA0NjYsIDUzMiwgNTgxLCA2NTUsIDczMywgODE1LCA5MDEsIDk5MSwgMTA4NSxcbiAgMTE1NiwgMTI1OCwgMTM2NCwgMTQ3NCwgMTU4OCwgMTcwNiwgMTgyOCwgMTkyMSwgMjA1MSwgMjE4NSxcbiAgMjMyMywgMjQ2NSwgMjYxMSwgMjc2MSwgMjg3NiwgMzAzNCwgMzE5NiwgMzM2MiwgMzUzMiwgMzcwNlxuXVxuXG4vKipcbiAqIFJldHVybnMgdGhlIFFSIENvZGUgc2l6ZSBmb3IgdGhlIHNwZWNpZmllZCB2ZXJzaW9uXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB2ZXJzaW9uIFFSIENvZGUgdmVyc2lvblxuICogQHJldHVybiB7TnVtYmVyfSAgICAgICAgIHNpemUgb2YgUVIgY29kZVxuICovXG5leHBvcnRzLmdldFN5bWJvbFNpemUgPSBmdW5jdGlvbiBnZXRTeW1ib2xTaXplICh2ZXJzaW9uKSB7XG4gIGlmICghdmVyc2lvbikgdGhyb3cgbmV3IEVycm9yKCdcInZlcnNpb25cIiBjYW5ub3QgYmUgbnVsbCBvciB1bmRlZmluZWQnKVxuICBpZiAodmVyc2lvbiA8IDEgfHwgdmVyc2lvbiA+IDQwKSB0aHJvdyBuZXcgRXJyb3IoJ1widmVyc2lvblwiIHNob3VsZCBiZSBpbiByYW5nZSBmcm9tIDEgdG8gNDAnKVxuICByZXR1cm4gdmVyc2lvbiAqIDQgKyAxN1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIHRvdGFsIG51bWJlciBvZiBjb2Rld29yZHMgdXNlZCB0byBzdG9yZSBkYXRhIGFuZCBFQyBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHZlcnNpb24gUVIgQ29kZSB2ZXJzaW9uXG4gKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgRGF0YSBsZW5ndGggaW4gYml0c1xuICovXG5leHBvcnRzLmdldFN5bWJvbFRvdGFsQ29kZXdvcmRzID0gZnVuY3Rpb24gZ2V0U3ltYm9sVG90YWxDb2Rld29yZHMgKHZlcnNpb24pIHtcbiAgcmV0dXJuIENPREVXT1JEU19DT1VOVFt2ZXJzaW9uXVxufVxuXG4vKipcbiAqIEVuY29kZSBkYXRhIHdpdGggQm9zZS1DaGF1ZGh1cmktSG9jcXVlbmdoZW1cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGRhdGEgVmFsdWUgdG8gZW5jb2RlXG4gKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgRW5jb2RlZCB2YWx1ZVxuICovXG5leHBvcnRzLmdldEJDSERpZ2l0ID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgbGV0IGRpZ2l0ID0gMFxuXG4gIHdoaWxlIChkYXRhICE9PSAwKSB7XG4gICAgZGlnaXQrK1xuICAgIGRhdGEgPj4+PSAxXG4gIH1cblxuICByZXR1cm4gZGlnaXRcbn1cblxuZXhwb3J0cy5zZXRUb1NKSVNGdW5jdGlvbiA9IGZ1bmN0aW9uIHNldFRvU0pJU0Z1bmN0aW9uIChmKSB7XG4gIGlmICh0eXBlb2YgZiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignXCJ0b1NKSVNGdW5jXCIgaXMgbm90IGEgdmFsaWQgZnVuY3Rpb24uJylcbiAgfVxuXG4gIHRvU0pJU0Z1bmN0aW9uID0gZlxufVxuXG5leHBvcnRzLmlzS2FuamlNb2RlRW5hYmxlZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiB0b1NKSVNGdW5jdGlvbiAhPT0gJ3VuZGVmaW5lZCdcbn1cblxuZXhwb3J0cy50b1NKSVMgPSBmdW5jdGlvbiB0b1NKSVMgKGthbmppKSB7XG4gIHJldHVybiB0b1NKSVNGdW5jdGlvbihrYW5qaSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version-check.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version-check.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid(version) {\n  return !isNaN(version) && version >= 1 && version <= 40;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS92ZXJzaW9uLWNoZWNrLmpzPzlhMzYiXSwibmFtZXMiOlsiZXhwb3J0cyIsImlzVmFsaWQiLCJ2ZXJzaW9uIiwiaXNOYU4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxPQUFPLENBQUNDLE9BQU8sR0FBRyxTQUFTQSxPQUFPQSxDQUFFQyxPQUFPLEVBQUU7RUFDM0MsT0FBTyxDQUFDQyxLQUFLLENBQUNELE9BQU8sQ0FBQyxJQUFJQSxPQUFPLElBQUksQ0FBQyxJQUFJQSxPQUFPLElBQUksRUFBRTtBQUN6RCxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvdmVyc2lvbi1jaGVjay5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgUVIgQ29kZSB2ZXJzaW9uIGlzIHZhbGlkXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSAgdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge0Jvb2xlYW59ICAgICAgICAgdHJ1ZSBpZiB2YWxpZCB2ZXJzaW9uLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZXhwb3J0cy5pc1ZhbGlkID0gZnVuY3Rpb24gaXNWYWxpZCAodmVyc2lvbikge1xuICByZXR1cm4gIWlzTmFOKHZlcnNpb24pICYmIHZlcnNpb24gPj0gMSAmJiB2ZXJzaW9uIDw9IDQwXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version-check.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/utils.js\");\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-code.js\");\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/mode.js\");\nconst VersionCheck = __webpack_require__(/*! ./version-check */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version-check.js\");\n\n// Generator polynomial used to encode version information\nconst G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\nconst G18_BCH = Utils.getBCHDigit(G18);\nfunction getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion;\n    }\n  }\n  return undefined;\n}\nfunction getReservedBitsCount(mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4;\n}\nfunction getTotalBitsFromDataArray(segments, version) {\n  let totalBits = 0;\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version);\n    totalBits += reservedBits + data.getBitsLength();\n  });\n  return totalBits;\n}\nfunction getBestVersionForMixedData(segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion);\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from(value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10);\n  }\n  return defaultValue;\n};\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version');\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE;\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version);\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits;\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor(usableBits / 10 * 3);\n    case Mode.ALPHANUMERIC:\n      return Math.floor(usableBits / 11 * 2);\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13);\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8);\n  }\n};\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {\n  let seg;\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl);\n    }\n    if (data.length === 0) {\n      return 1;\n    }\n    seg = data[0];\n  } else {\n    seg = data;\n  }\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n};\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits(version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version');\n  }\n  let d = version << 12;\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= G18 << Utils.getBCHDigit(d) - G18_BCH;\n  }\n  return version << 12 | d;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/core/version.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/canvas.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/canvas.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/utils.js\");\nfunction clearCanvas(ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  if (!canvas.style) canvas.style = {};\n  canvas.height = size;\n  canvas.width = size;\n  canvas.style.height = size + 'px';\n  canvas.style.width = size + 'px';\n}\nfunction getCanvasElement() {\n  try {\n    return document.createElement('canvas');\n  } catch (e) {\n    throw new Error('You need to specify a canvas element');\n  }\n}\nexports.render = function render(qrData, canvas, options) {\n  let opts = options;\n  let canvasEl = canvas;\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas;\n    canvas = undefined;\n  }\n  if (!canvas) {\n    canvasEl = getCanvasElement();\n  }\n  opts = Utils.getOptions(opts);\n  const size = Utils.getImageWidth(qrData.modules.size, opts);\n  const ctx = canvasEl.getContext('2d');\n  const image = ctx.createImageData(size, size);\n  Utils.qrToImageData(image.data, qrData, opts);\n  clearCanvas(ctx, canvasEl, size);\n  ctx.putImageData(image, 0, 0);\n  return canvasEl;\n};\nexports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n  let opts = options;\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas;\n    canvas = undefined;\n  }\n  if (!opts) opts = {};\n  const canvasEl = exports.render(qrData, canvas, opts);\n  const type = opts.type || 'image/png';\n  const rendererOpts = opts.rendererOpts || {};\n  return canvasEl.toDataURL(type, rendererOpts.quality);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvcmVuZGVyZXIvY2FudmFzLmpzPzFmZGEiXSwibmFtZXMiOlsiVXRpbHMiLCJyZXF1aXJlIiwiY2xlYXJDYW52YXMiLCJjdHgiLCJjYW52YXMiLCJzaXplIiwiY2xlYXJSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJzdHlsZSIsImdldENhbnZhc0VsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJlIiwiRXJyb3IiLCJleHBvcnRzIiwicmVuZGVyIiwicXJEYXRhIiwib3B0aW9ucyIsIm9wdHMiLCJjYW52YXNFbCIsImdldENvbnRleHQiLCJ1bmRlZmluZWQiLCJnZXRPcHRpb25zIiwiZ2V0SW1hZ2VXaWR0aCIsIm1vZHVsZXMiLCJpbWFnZSIsImNyZWF0ZUltYWdlRGF0YSIsInFyVG9JbWFnZURhdGEiLCJkYXRhIiwicHV0SW1hZ2VEYXRhIiwicmVuZGVyVG9EYXRhVVJMIiwidHlwZSIsInJlbmRlcmVyT3B0cyIsInRvRGF0YVVSTCIsInF1YWxpdHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsbUJBQU8sQ0FBQyxpR0FBUyxDQUFDO0FBRWhDLFNBQVNDLFdBQVdBLENBQUVDLEdBQUcsRUFBRUMsTUFBTSxFQUFFQyxJQUFJLEVBQUU7RUFDdkNGLEdBQUcsQ0FBQ0csU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUVGLE1BQU0sQ0FBQ0csS0FBSyxFQUFFSCxNQUFNLENBQUNJLE1BQU0sQ0FBQztFQUVoRCxJQUFJLENBQUNKLE1BQU0sQ0FBQ0ssS0FBSyxFQUFFTCxNQUFNLENBQUNLLEtBQUssR0FBRyxDQUFDLENBQUM7RUFDcENMLE1BQU0sQ0FBQ0ksTUFBTSxHQUFHSCxJQUFJO0VBQ3BCRCxNQUFNLENBQUNHLEtBQUssR0FBR0YsSUFBSTtFQUNuQkQsTUFBTSxDQUFDSyxLQUFLLENBQUNELE1BQU0sR0FBR0gsSUFBSSxHQUFHLElBQUk7RUFDakNELE1BQU0sQ0FBQ0ssS0FBSyxDQUFDRixLQUFLLEdBQUdGLElBQUksR0FBRyxJQUFJO0FBQ2xDO0FBRUEsU0FBU0ssZ0JBQWdCQSxDQUFBLEVBQUk7RUFDM0IsSUFBSTtJQUNGLE9BQU9DLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFFBQVEsQ0FBQztFQUN6QyxDQUFDLENBQUMsT0FBT0MsQ0FBQyxFQUFFO0lBQ1YsTUFBTSxJQUFJQyxLQUFLLENBQUMsc0NBQXNDLENBQUM7RUFDekQ7QUFDRjtBQUVBQyxPQUFPLENBQUNDLE1BQU0sR0FBRyxTQUFTQSxNQUFNQSxDQUFFQyxNQUFNLEVBQUViLE1BQU0sRUFBRWMsT0FBTyxFQUFFO0VBQ3pELElBQUlDLElBQUksR0FBR0QsT0FBTztFQUNsQixJQUFJRSxRQUFRLEdBQUdoQixNQUFNO0VBRXJCLElBQUksT0FBT2UsSUFBSSxLQUFLLFdBQVcsS0FBSyxDQUFDZixNQUFNLElBQUksQ0FBQ0EsTUFBTSxDQUFDaUIsVUFBVSxDQUFDLEVBQUU7SUFDbEVGLElBQUksR0FBR2YsTUFBTTtJQUNiQSxNQUFNLEdBQUdrQixTQUFTO0VBQ3BCO0VBRUEsSUFBSSxDQUFDbEIsTUFBTSxFQUFFO0lBQ1hnQixRQUFRLEdBQUdWLGdCQUFnQixDQUFDLENBQUM7RUFDL0I7RUFFQVMsSUFBSSxHQUFHbkIsS0FBSyxDQUFDdUIsVUFBVSxDQUFDSixJQUFJLENBQUM7RUFDN0IsTUFBTWQsSUFBSSxHQUFHTCxLQUFLLENBQUN3QixhQUFhLENBQUNQLE1BQU0sQ0FBQ1EsT0FBTyxDQUFDcEIsSUFBSSxFQUFFYyxJQUFJLENBQUM7RUFFM0QsTUFBTWhCLEdBQUcsR0FBR2lCLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQztFQUNyQyxNQUFNSyxLQUFLLEdBQUd2QixHQUFHLENBQUN3QixlQUFlLENBQUN0QixJQUFJLEVBQUVBLElBQUksQ0FBQztFQUM3Q0wsS0FBSyxDQUFDNEIsYUFBYSxDQUFDRixLQUFLLENBQUNHLElBQUksRUFBRVosTUFBTSxFQUFFRSxJQUFJLENBQUM7RUFFN0NqQixXQUFXLENBQUNDLEdBQUcsRUFBRWlCLFFBQVEsRUFBRWYsSUFBSSxDQUFDO0VBQ2hDRixHQUFHLENBQUMyQixZQUFZLENBQUNKLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBRTdCLE9BQU9OLFFBQVE7QUFDakIsQ0FBQztBQUVETCxPQUFPLENBQUNnQixlQUFlLEdBQUcsU0FBU0EsZUFBZUEsQ0FBRWQsTUFBTSxFQUFFYixNQUFNLEVBQUVjLE9BQU8sRUFBRTtFQUMzRSxJQUFJQyxJQUFJLEdBQUdELE9BQU87RUFFbEIsSUFBSSxPQUFPQyxJQUFJLEtBQUssV0FBVyxLQUFLLENBQUNmLE1BQU0sSUFBSSxDQUFDQSxNQUFNLENBQUNpQixVQUFVLENBQUMsRUFBRTtJQUNsRUYsSUFBSSxHQUFHZixNQUFNO0lBQ2JBLE1BQU0sR0FBR2tCLFNBQVM7RUFDcEI7RUFFQSxJQUFJLENBQUNILElBQUksRUFBRUEsSUFBSSxHQUFHLENBQUMsQ0FBQztFQUVwQixNQUFNQyxRQUFRLEdBQUdMLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxNQUFNLEVBQUViLE1BQU0sRUFBRWUsSUFBSSxDQUFDO0VBRXJELE1BQU1hLElBQUksR0FBR2IsSUFBSSxDQUFDYSxJQUFJLElBQUksV0FBVztFQUNyQyxNQUFNQyxZQUFZLEdBQUdkLElBQUksQ0FBQ2MsWUFBWSxJQUFJLENBQUMsQ0FBQztFQUU1QyxPQUFPYixRQUFRLENBQUNjLFNBQVMsQ0FBQ0YsSUFBSSxFQUFFQyxZQUFZLENBQUNFLE9BQU8sQ0FBQztBQUN2RCxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsLXVpL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL2NhbnZhcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmZ1bmN0aW9uIGNsZWFyQ2FudmFzIChjdHgsIGNhbnZhcywgc2l6ZSkge1xuICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodClcblxuICBpZiAoIWNhbnZhcy5zdHlsZSkgY2FudmFzLnN0eWxlID0ge31cbiAgY2FudmFzLmhlaWdodCA9IHNpemVcbiAgY2FudmFzLndpZHRoID0gc2l6ZVxuICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gc2l6ZSArICdweCdcbiAgY2FudmFzLnN0eWxlLndpZHRoID0gc2l6ZSArICdweCdcbn1cblxuZnVuY3Rpb24gZ2V0Q2FudmFzRWxlbWVudCAoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBuZWVkIHRvIHNwZWNpZnkgYSBjYW52YXMgZWxlbWVudCcpXG4gIH1cbn1cblxuZXhwb3J0cy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKHFyRGF0YSwgY2FudmFzLCBvcHRpb25zKSB7XG4gIGxldCBvcHRzID0gb3B0aW9uc1xuICBsZXQgY2FudmFzRWwgPSBjYW52YXNcblxuICBpZiAodHlwZW9mIG9wdHMgPT09ICd1bmRlZmluZWQnICYmICghY2FudmFzIHx8ICFjYW52YXMuZ2V0Q29udGV4dCkpIHtcbiAgICBvcHRzID0gY2FudmFzXG4gICAgY2FudmFzID0gdW5kZWZpbmVkXG4gIH1cblxuICBpZiAoIWNhbnZhcykge1xuICAgIGNhbnZhc0VsID0gZ2V0Q2FudmFzRWxlbWVudCgpXG4gIH1cblxuICBvcHRzID0gVXRpbHMuZ2V0T3B0aW9ucyhvcHRzKVxuICBjb25zdCBzaXplID0gVXRpbHMuZ2V0SW1hZ2VXaWR0aChxckRhdGEubW9kdWxlcy5zaXplLCBvcHRzKVxuXG4gIGNvbnN0IGN0eCA9IGNhbnZhc0VsLmdldENvbnRleHQoJzJkJylcbiAgY29uc3QgaW1hZ2UgPSBjdHguY3JlYXRlSW1hZ2VEYXRhKHNpemUsIHNpemUpXG4gIFV0aWxzLnFyVG9JbWFnZURhdGEoaW1hZ2UuZGF0YSwgcXJEYXRhLCBvcHRzKVxuXG4gIGNsZWFyQ2FudmFzKGN0eCwgY2FudmFzRWwsIHNpemUpXG4gIGN0eC5wdXRJbWFnZURhdGEoaW1hZ2UsIDAsIDApXG5cbiAgcmV0dXJuIGNhbnZhc0VsXG59XG5cbmV4cG9ydHMucmVuZGVyVG9EYXRhVVJMID0gZnVuY3Rpb24gcmVuZGVyVG9EYXRhVVJMIChxckRhdGEsIGNhbnZhcywgb3B0aW9ucykge1xuICBsZXQgb3B0cyA9IG9wdGlvbnNcblxuICBpZiAodHlwZW9mIG9wdHMgPT09ICd1bmRlZmluZWQnICYmICghY2FudmFzIHx8ICFjYW52YXMuZ2V0Q29udGV4dCkpIHtcbiAgICBvcHRzID0gY2FudmFzXG4gICAgY2FudmFzID0gdW5kZWZpbmVkXG4gIH1cblxuICBpZiAoIW9wdHMpIG9wdHMgPSB7fVxuXG4gIGNvbnN0IGNhbnZhc0VsID0gZXhwb3J0cy5yZW5kZXIocXJEYXRhLCBjYW52YXMsIG9wdHMpXG5cbiAgY29uc3QgdHlwZSA9IG9wdHMudHlwZSB8fCAnaW1hZ2UvcG5nJ1xuICBjb25zdCByZW5kZXJlck9wdHMgPSBvcHRzLnJlbmRlcmVyT3B0cyB8fCB7fVxuXG4gIHJldHVybiBjYW52YXNFbC50b0RhdGFVUkwodHlwZSwgcmVuZGVyZXJPcHRzLnF1YWxpdHkpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/canvas.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/svg-tag.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/svg-tag.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/utils.js\");\nfunction getColorAttrib(color, attrib) {\n  const alpha = color.a / 255;\n  const str = attrib + '=\"' + color.hex + '\"';\n  return alpha < 1 ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"' : str;\n}\nfunction svgCmd(cmd, x, y) {\n  let str = cmd + x;\n  if (typeof y !== 'undefined') str += ' ' + y;\n  return str;\n}\nfunction qrToPath(data, size, margin) {\n  let path = '';\n  let moveBy = 0;\n  let newRow = false;\n  let lineLength = 0;\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size);\n    const row = Math.floor(i / size);\n    if (!col && !newRow) newRow = true;\n    if (data[i]) {\n      lineLength++;\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow ? svgCmd('M', col + margin, 0.5 + row + margin) : svgCmd('m', moveBy, 0);\n        moveBy = 0;\n        newRow = false;\n      }\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength);\n        lineLength = 0;\n      }\n    } else {\n      moveBy++;\n    }\n  }\n  return path;\n}\nexports.render = function render(qrData, options, cb) {\n  const opts = Utils.getOptions(options);\n  const size = qrData.modules.size;\n  const data = qrData.modules.data;\n  const qrcodesize = size + opts.margin * 2;\n  const bg = !opts.color.light.a ? '' : '<path ' + getColorAttrib(opts.color.light, 'fill') + ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n  const path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') + ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n  if (typeof cb === 'function') {\n    cb(null, svgTag);\n  }\n  return svgTag;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvcmVuZGVyZXIvc3ZnLXRhZy5qcz82MTliIl0sIm5hbWVzIjpbIlV0aWxzIiwicmVxdWlyZSIsImdldENvbG9yQXR0cmliIiwiY29sb3IiLCJhdHRyaWIiLCJhbHBoYSIsImEiLCJzdHIiLCJoZXgiLCJ0b0ZpeGVkIiwic2xpY2UiLCJzdmdDbWQiLCJjbWQiLCJ4IiwieSIsInFyVG9QYXRoIiwiZGF0YSIsInNpemUiLCJtYXJnaW4iLCJwYXRoIiwibW92ZUJ5IiwibmV3Um93IiwibGluZUxlbmd0aCIsImkiLCJsZW5ndGgiLCJjb2wiLCJNYXRoIiwiZmxvb3IiLCJyb3ciLCJleHBvcnRzIiwicmVuZGVyIiwicXJEYXRhIiwib3B0aW9ucyIsImNiIiwib3B0cyIsImdldE9wdGlvbnMiLCJtb2R1bGVzIiwicXJjb2Rlc2l6ZSIsImJnIiwibGlnaHQiLCJkYXJrIiwidmlld0JveCIsIndpZHRoIiwic3ZnVGFnIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLG1CQUFPLENBQUMsaUdBQVMsQ0FBQztBQUVoQyxTQUFTQyxjQUFjQSxDQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRTtFQUN0QyxNQUFNQyxLQUFLLEdBQUdGLEtBQUssQ0FBQ0csQ0FBQyxHQUFHLEdBQUc7RUFDM0IsTUFBTUMsR0FBRyxHQUFHSCxNQUFNLEdBQUcsSUFBSSxHQUFHRCxLQUFLLENBQUNLLEdBQUcsR0FBRyxHQUFHO0VBRTNDLE9BQU9ILEtBQUssR0FBRyxDQUFDLEdBQ1pFLEdBQUcsR0FBRyxHQUFHLEdBQUdILE1BQU0sR0FBRyxZQUFZLEdBQUdDLEtBQUssQ0FBQ0ksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUNuRUgsR0FBRztBQUNUO0FBRUEsU0FBU0ksTUFBTUEsQ0FBRUMsR0FBRyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUMxQixJQUFJUCxHQUFHLEdBQUdLLEdBQUcsR0FBR0MsQ0FBQztFQUNqQixJQUFJLE9BQU9DLENBQUMsS0FBSyxXQUFXLEVBQUVQLEdBQUcsSUFBSSxHQUFHLEdBQUdPLENBQUM7RUFFNUMsT0FBT1AsR0FBRztBQUNaO0FBRUEsU0FBU1EsUUFBUUEsQ0FBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtFQUNyQyxJQUFJQyxJQUFJLEdBQUcsRUFBRTtFQUNiLElBQUlDLE1BQU0sR0FBRyxDQUFDO0VBQ2QsSUFBSUMsTUFBTSxHQUFHLEtBQUs7RUFDbEIsSUFBSUMsVUFBVSxHQUFHLENBQUM7RUFFbEIsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdQLElBQUksQ0FBQ1EsTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUNwQyxNQUFNRSxHQUFHLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDSixDQUFDLEdBQUdOLElBQUksQ0FBQztJQUNoQyxNQUFNVyxHQUFHLEdBQUdGLElBQUksQ0FBQ0MsS0FBSyxDQUFDSixDQUFDLEdBQUdOLElBQUksQ0FBQztJQUVoQyxJQUFJLENBQUNRLEdBQUcsSUFBSSxDQUFDSixNQUFNLEVBQUVBLE1BQU0sR0FBRyxJQUFJO0lBRWxDLElBQUlMLElBQUksQ0FBQ08sQ0FBQyxDQUFDLEVBQUU7TUFDWEQsVUFBVSxFQUFFO01BRVosSUFBSSxFQUFFQyxDQUFDLEdBQUcsQ0FBQyxJQUFJRSxHQUFHLEdBQUcsQ0FBQyxJQUFJVCxJQUFJLENBQUNPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3RDSixJQUFJLElBQUlFLE1BQU0sR0FDVlYsTUFBTSxDQUFDLEdBQUcsRUFBRWMsR0FBRyxHQUFHUCxNQUFNLEVBQUUsR0FBRyxHQUFHVSxHQUFHLEdBQUdWLE1BQU0sQ0FBQyxHQUM3Q1AsTUFBTSxDQUFDLEdBQUcsRUFBRVMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUUxQkEsTUFBTSxHQUFHLENBQUM7UUFDVkMsTUFBTSxHQUFHLEtBQUs7TUFDaEI7TUFFQSxJQUFJLEVBQUVJLEdBQUcsR0FBRyxDQUFDLEdBQUdSLElBQUksSUFBSUQsSUFBSSxDQUFDTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNwQ0osSUFBSSxJQUFJUixNQUFNLENBQUMsR0FBRyxFQUFFVyxVQUFVLENBQUM7UUFDL0JBLFVBQVUsR0FBRyxDQUFDO01BQ2hCO0lBQ0YsQ0FBQyxNQUFNO01BQ0xGLE1BQU0sRUFBRTtJQUNWO0VBQ0Y7RUFFQSxPQUFPRCxJQUFJO0FBQ2I7QUFFQVUsT0FBTyxDQUFDQyxNQUFNLEdBQUcsU0FBU0EsTUFBTUEsQ0FBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLEVBQUUsRUFBRTtFQUNyRCxNQUFNQyxJQUFJLEdBQUdsQyxLQUFLLENBQUNtQyxVQUFVLENBQUNILE9BQU8sQ0FBQztFQUN0QyxNQUFNZixJQUFJLEdBQUdjLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDbkIsSUFBSTtFQUNoQyxNQUFNRCxJQUFJLEdBQUdlLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDcEIsSUFBSTtFQUNoQyxNQUFNcUIsVUFBVSxHQUFHcEIsSUFBSSxHQUFHaUIsSUFBSSxDQUFDaEIsTUFBTSxHQUFHLENBQUM7RUFFekMsTUFBTW9CLEVBQUUsR0FBRyxDQUFDSixJQUFJLENBQUMvQixLQUFLLENBQUNvQyxLQUFLLENBQUNqQyxDQUFDLEdBQzFCLEVBQUUsR0FDRixRQUFRLEdBQUdKLGNBQWMsQ0FBQ2dDLElBQUksQ0FBQy9CLEtBQUssQ0FBQ29DLEtBQUssRUFBRSxNQUFNLENBQUMsR0FDbkQsV0FBVyxHQUFHRixVQUFVLEdBQUcsR0FBRyxHQUFHQSxVQUFVLEdBQUcsUUFBUTtFQUUxRCxNQUFNbEIsSUFBSSxHQUNSLFFBQVEsR0FBR2pCLGNBQWMsQ0FBQ2dDLElBQUksQ0FBQy9CLEtBQUssQ0FBQ3FDLElBQUksRUFBRSxRQUFRLENBQUMsR0FDcEQsTUFBTSxHQUFHekIsUUFBUSxDQUFDQyxJQUFJLEVBQUVDLElBQUksRUFBRWlCLElBQUksQ0FBQ2hCLE1BQU0sQ0FBQyxHQUFHLEtBQUs7RUFFcEQsTUFBTXVCLE9BQU8sR0FBRyxXQUFXLEdBQUcsTUFBTSxHQUFHSixVQUFVLEdBQUcsR0FBRyxHQUFHQSxVQUFVLEdBQUcsR0FBRztFQUUxRSxNQUFNSyxLQUFLLEdBQUcsQ0FBQ1IsSUFBSSxDQUFDUSxLQUFLLEdBQUcsRUFBRSxHQUFHLFNBQVMsR0FBR1IsSUFBSSxDQUFDUSxLQUFLLEdBQUcsWUFBWSxHQUFHUixJQUFJLENBQUNRLEtBQUssR0FBRyxJQUFJO0VBRTFGLE1BQU1DLE1BQU0sR0FBRywwQ0FBMEMsR0FBR0QsS0FBSyxHQUFHRCxPQUFPLEdBQUcsZ0NBQWdDLEdBQUdILEVBQUUsR0FBR25CLElBQUksR0FBRyxVQUFVO0VBRXZJLElBQUksT0FBT2MsRUFBRSxLQUFLLFVBQVUsRUFBRTtJQUM1QkEsRUFBRSxDQUFDLElBQUksRUFBRVUsTUFBTSxDQUFDO0VBQ2xCO0VBRUEsT0FBT0EsTUFBTTtBQUNmLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtdWkvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvcmVuZGVyZXIvc3ZnLXRhZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmZ1bmN0aW9uIGdldENvbG9yQXR0cmliIChjb2xvciwgYXR0cmliKSB7XG4gIGNvbnN0IGFscGhhID0gY29sb3IuYSAvIDI1NVxuICBjb25zdCBzdHIgPSBhdHRyaWIgKyAnPVwiJyArIGNvbG9yLmhleCArICdcIidcblxuICByZXR1cm4gYWxwaGEgPCAxXG4gICAgPyBzdHIgKyAnICcgKyBhdHRyaWIgKyAnLW9wYWNpdHk9XCInICsgYWxwaGEudG9GaXhlZCgyKS5zbGljZSgxKSArICdcIidcbiAgICA6IHN0clxufVxuXG5mdW5jdGlvbiBzdmdDbWQgKGNtZCwgeCwgeSkge1xuICBsZXQgc3RyID0gY21kICsgeFxuICBpZiAodHlwZW9mIHkgIT09ICd1bmRlZmluZWQnKSBzdHIgKz0gJyAnICsgeVxuXG4gIHJldHVybiBzdHJcbn1cblxuZnVuY3Rpb24gcXJUb1BhdGggKGRhdGEsIHNpemUsIG1hcmdpbikge1xuICBsZXQgcGF0aCA9ICcnXG4gIGxldCBtb3ZlQnkgPSAwXG4gIGxldCBuZXdSb3cgPSBmYWxzZVxuICBsZXQgbGluZUxlbmd0aCA9IDBcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjb2wgPSBNYXRoLmZsb29yKGkgJSBzaXplKVxuICAgIGNvbnN0IHJvdyA9IE1hdGguZmxvb3IoaSAvIHNpemUpXG5cbiAgICBpZiAoIWNvbCAmJiAhbmV3Um93KSBuZXdSb3cgPSB0cnVlXG5cbiAgICBpZiAoZGF0YVtpXSkge1xuICAgICAgbGluZUxlbmd0aCsrXG5cbiAgICAgIGlmICghKGkgPiAwICYmIGNvbCA+IDAgJiYgZGF0YVtpIC0gMV0pKSB7XG4gICAgICAgIHBhdGggKz0gbmV3Um93XG4gICAgICAgICAgPyBzdmdDbWQoJ00nLCBjb2wgKyBtYXJnaW4sIDAuNSArIHJvdyArIG1hcmdpbilcbiAgICAgICAgICA6IHN2Z0NtZCgnbScsIG1vdmVCeSwgMClcblxuICAgICAgICBtb3ZlQnkgPSAwXG4gICAgICAgIG5ld1JvdyA9IGZhbHNlXG4gICAgICB9XG5cbiAgICAgIGlmICghKGNvbCArIDEgPCBzaXplICYmIGRhdGFbaSArIDFdKSkge1xuICAgICAgICBwYXRoICs9IHN2Z0NtZCgnaCcsIGxpbmVMZW5ndGgpXG4gICAgICAgIGxpbmVMZW5ndGggPSAwXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG1vdmVCeSsrXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhdGhcbn1cblxuZXhwb3J0cy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKHFyRGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgY29uc3Qgb3B0cyA9IFV0aWxzLmdldE9wdGlvbnMob3B0aW9ucylcbiAgY29uc3Qgc2l6ZSA9IHFyRGF0YS5tb2R1bGVzLnNpemVcbiAgY29uc3QgZGF0YSA9IHFyRGF0YS5tb2R1bGVzLmRhdGFcbiAgY29uc3QgcXJjb2Rlc2l6ZSA9IHNpemUgKyBvcHRzLm1hcmdpbiAqIDJcblxuICBjb25zdCBiZyA9ICFvcHRzLmNvbG9yLmxpZ2h0LmFcbiAgICA/ICcnXG4gICAgOiAnPHBhdGggJyArIGdldENvbG9yQXR0cmliKG9wdHMuY29sb3IubGlnaHQsICdmaWxsJykgK1xuICAgICAgJyBkPVwiTTAgMGgnICsgcXJjb2Rlc2l6ZSArICd2JyArIHFyY29kZXNpemUgKyAnSDB6XCIvPidcblxuICBjb25zdCBwYXRoID1cbiAgICAnPHBhdGggJyArIGdldENvbG9yQXR0cmliKG9wdHMuY29sb3IuZGFyaywgJ3N0cm9rZScpICtcbiAgICAnIGQ9XCInICsgcXJUb1BhdGgoZGF0YSwgc2l6ZSwgb3B0cy5tYXJnaW4pICsgJ1wiLz4nXG5cbiAgY29uc3Qgdmlld0JveCA9ICd2aWV3Qm94PVwiJyArICcwIDAgJyArIHFyY29kZXNpemUgKyAnICcgKyBxcmNvZGVzaXplICsgJ1wiJ1xuXG4gIGNvbnN0IHdpZHRoID0gIW9wdHMud2lkdGggPyAnJyA6ICd3aWR0aD1cIicgKyBvcHRzLndpZHRoICsgJ1wiIGhlaWdodD1cIicgKyBvcHRzLndpZHRoICsgJ1wiICdcblxuICBjb25zdCBzdmdUYWcgPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgJyArIHdpZHRoICsgdmlld0JveCArICcgc2hhcGUtcmVuZGVyaW5nPVwiY3Jpc3BFZGdlc1wiPicgKyBiZyArIHBhdGggKyAnPC9zdmc+XFxuJ1xuXG4gIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYihudWxsLCBzdmdUYWcpXG4gIH1cblxuICByZXR1cm4gc3ZnVGFnXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/svg-tag.js\n");

/***/ }),

/***/ "./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/utils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/utils.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function hex2rgba(hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString();\n  }\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string');\n  }\n  let hexCode = hex.slice().replace('#', '').split('');\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex);\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c];\n    }));\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F');\n  const hexValue = parseInt(hexCode.join(''), 16);\n  return {\n    r: hexValue >> 24 & 255,\n    g: hexValue >> 16 & 255,\n    b: hexValue >> 8 & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  };\n}\nexports.getOptions = function getOptions(options) {\n  if (!options) options = {};\n  if (!options.color) options.color = {};\n  const margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;\n  const width = options.width && options.width >= 21 ? options.width : undefined;\n  const scale = options.scale || 4;\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  };\n};\nexports.getScale = function getScale(qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;\n};\nexports.getImageWidth = function getImageWidth(qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts);\n  return Math.floor((qrSize + opts.margin * 2) * scale);\n};\nexports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n  const size = qr.modules.size;\n  const data = qr.modules.data;\n  const scale = exports.getScale(size, opts);\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale);\n  const scaledMargin = opts.margin * scale;\n  const palette = [opts.color.light, opts.color.dark];\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4;\n      let pxColor = opts.color.light;\n      if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale);\n        const jSrc = Math.floor((j - scaledMargin) / scale);\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n      }\n      imgData[posDst++] = pxColor.r;\n      imgData[posDst++] = pxColor.g;\n      imgData[posDst++] = pxColor.b;\n      imgData[posDst] = pxColor.a;\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@walletconnect/modal-ui/node_modules/qrcode/lib/renderer/utils.js\n");

/***/ }),

/***/ "./node_modules/lit/decorators.js":
/*!****************************************!*\
  !*** ./node_modules/lit/decorators.js ***!
  \****************************************/
/*! exports provided: customElement, property, state, eventOptions, query, queryAll, queryAsync, queryAssignedElements, queryAssignedNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/custom-element.js */ \"./node_modules/@lit/reactive-element/decorators/custom-element.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"customElement\", function() { return _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__[\"customElement\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/reactive-element/decorators/property.js */ \"./node_modules/@lit/reactive-element/decorators/property.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__[\"property\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lit/reactive-element/decorators/state.js */ \"./node_modules/@lit/reactive-element/decorators/state.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"state\", function() { return _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__[\"state\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lit/reactive-element/decorators/event-options.js */ \"./node_modules/@lit/reactive-element/decorators/event-options.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"eventOptions\", function() { return _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__[\"eventOptions\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lit/reactive-element/decorators/query.js */ \"./node_modules/@lit/reactive-element/decorators/query.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__[\"query\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-all.js */ \"./node_modules/@lit/reactive-element/decorators/query-all.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAll\", function() { return _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__[\"queryAll\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-async.js */ \"./node_modules/@lit/reactive-element/decorators/query-async.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAsync\", function() { return _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__[\"queryAsync\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-assigned-elements.js */ \"./node_modules/@lit/reactive-element/decorators/query-assigned-elements.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAssignedElements\", function() { return _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__[\"queryAssignedElements\"]; });\n\n/* harmony import */ var _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-assigned-nodes.js */ \"./node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"queryAssignedNodes\", function() { return _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__[\"queryAssignedNodes\"]; });\n\n\n//# sourceMappingURL=decorators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGl0L2RlY29yYXRvcnMuanM/NGU5MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUE4aUI7QUFDOWlCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2xpdC9kZWNvcmF0b3JzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL2N1c3RvbS1lbGVtZW50LmpzXCI7ZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL3Byb3BlcnR5LmpzXCI7ZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL3N0YXRlLmpzXCI7ZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL2V2ZW50LW9wdGlvbnMuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvcXVlcnkuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvcXVlcnktYWxsLmpzXCI7ZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL3F1ZXJ5LWFzeW5jLmpzXCI7ZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL3F1ZXJ5LWFzc2lnbmVkLWVsZW1lbnRzLmpzXCI7ZXhwb3J0KmZyb21cIkBsaXQvcmVhY3RpdmUtZWxlbWVudC9kZWNvcmF0b3JzL3F1ZXJ5LWFzc2lnbmVkLW5vZGVzLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvcmF0b3JzLmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/decorators.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/class-map.js":
/*!**************************************************!*\
  !*** ./node_modules/lit/directives/class-map.js ***!
  \**************************************************/
/*! exports provided: classMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/class-map.js */ \"./node_modules/lit-html/directives/class-map.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"classMap\", function() { return lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_0__[\"classMap\"]; });\n\n\n//# sourceMappingURL=class-map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzPzc2MzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBOEM7QUFDOUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0KmZyb21cImxpdC1odG1sL2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGFzcy1tYXAuanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/class-map.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/if-defined.js":
/*!***************************************************!*\
  !*** ./node_modules/lit/directives/if-defined.js ***!
  \***************************************************/
/*! exports provided: ifDefined */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/if-defined.js */ \"./node_modules/lit-html/directives/if-defined.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ifDefined\", function() { return lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_0__[\"ifDefined\"]; });\n\n\n//# sourceMappingURL=if-defined.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvaWYtZGVmaW5lZC5qcz8wYTEwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStDO0FBQy9DIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2xpdC9kaXJlY3RpdmVzL2lmLWRlZmluZWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQqZnJvbVwibGl0LWh0bWwvZGlyZWN0aXZlcy9pZi1kZWZpbmVkLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZi1kZWZpbmVkLmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/if-defined.js\n");

/***/ }),

/***/ "./node_modules/lit/index.js":
/*!***********************************!*\
  !*** ./node_modules/lit/index.js ***!
  \***********************************/
/*! exports provided: CSSResult, adoptStyles, css, getCompatibleStyle, supportsAdoptingStyleSheets, unsafeCSS, ReactiveElement, defaultConverter, notEqual, _$LH, html, noChange, nothing, render, svg, LitElement, UpdatingElement, _$LE, isServer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element */ \"./node_modules/@lit/reactive-element/reactive-element.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-element/lit-element.js */ \"./node_modules/lit-element/lit-element.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CSSResult\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"adoptStyles\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"adoptStyles\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"css\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getCompatibleStyle\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"getCompatibleStyle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"supportsAdoptingStyleSheets\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"supportsAdoptingStyleSheets\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unsafeCSS\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"unsafeCSS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ReactiveElement\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"ReactiveElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultConverter\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"defaultConverter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notEqual\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"notEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_$LH\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"_$LH\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"html\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noChange\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"noChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svg\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"svg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LitElement\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"LitElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UpdatingElement\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"UpdatingElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_$LE\", function() { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[\"_$LE\"]; });\n\n/* harmony import */ var lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit-html/is-server.js */ \"./node_modules/lit-html/is-server.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isServer\", function() { return lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__[\"isServer\"]; });\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGl0L2luZGV4LmpzPzc3ZjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMEg7QUFDMUgiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0XCJAbGl0L3JlYWN0aXZlLWVsZW1lbnRcIjtpbXBvcnRcImxpdC1odG1sXCI7ZXhwb3J0KmZyb21cImxpdC1lbGVtZW50L2xpdC1lbGVtZW50LmpzXCI7ZXhwb3J0KmZyb21cImxpdC1odG1sL2lzLXNlcnZlci5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lit/index.js\n");

/***/ })

}]);